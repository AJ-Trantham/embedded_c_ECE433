
ADCExample.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003340  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000268  080034e0  080034e0  000134e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003748  08003748  000201d0  2**0
                  CONTENTS
  4 .ARM          00000000  08003748  08003748  000201d0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08003748  08003748  000201d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003748  08003748  00013748  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800374c  0800374c  0001374c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d0  20000000  08003750  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000fd8  200001d0  08003920  000201d0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200011a8  08003920  000211a8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201d0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002eda  00000000  00000000  00020200  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000856  00000000  00000000  000230da  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000001c8  00000000  00000000  00023930  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000170  00000000  00000000  00023af8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00014c3c  00000000  00000000  00023c68  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000024bb  00000000  00000000  000388a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00083e8b  00000000  00000000  0003ad5f  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000bebea  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000fac  00000000  00000000  000bec68  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001d0 	.word	0x200001d0
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080034c8 	.word	0x080034c8

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001d4 	.word	0x200001d4
 80001dc:	080034c8 	.word	0x080034c8

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003ce:	f1a4 0401 	sub.w	r4, r4, #1
 80003d2:	d1e9      	bne.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2f>:
 8000bb8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bbc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bc0:	bf24      	itt	cs
 8000bc2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bc6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bca:	d90d      	bls.n	8000be8 <__aeabi_d2f+0x30>
 8000bcc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000bd0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bd4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bd8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000bdc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000be0:	bf08      	it	eq
 8000be2:	f020 0001 	biceq.w	r0, r0, #1
 8000be6:	4770      	bx	lr
 8000be8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000bec:	d121      	bne.n	8000c32 <__aeabi_d2f+0x7a>
 8000bee:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000bf2:	bfbc      	itt	lt
 8000bf4:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000bf8:	4770      	bxlt	lr
 8000bfa:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000bfe:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c02:	f1c2 0218 	rsb	r2, r2, #24
 8000c06:	f1c2 0c20 	rsb	ip, r2, #32
 8000c0a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c0e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c12:	bf18      	it	ne
 8000c14:	f040 0001 	orrne.w	r0, r0, #1
 8000c18:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c1c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c20:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c24:	ea40 000c 	orr.w	r0, r0, ip
 8000c28:	fa23 f302 	lsr.w	r3, r3, r2
 8000c2c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c30:	e7cc      	b.n	8000bcc <__aeabi_d2f+0x14>
 8000c32:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c36:	d107      	bne.n	8000c48 <__aeabi_d2f+0x90>
 8000c38:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c3c:	bf1e      	ittt	ne
 8000c3e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c42:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c46:	4770      	bxne	lr
 8000c48:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c4c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c50:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c54:	4770      	bx	lr
 8000c56:	bf00      	nop

08000c58 <B1_config>:
    GPIOA->MODER &= ~0x00000C00;    /* clear pin mode */
    GPIOA->MODER |=  0x00000400;    /* set pin to output mode */
    GPIOA->BSRR   = (1<<21);        /* Turn LED off           */
}

void B1_config(void) {
 8000c58:	b480      	push	{r7}
 8000c5a:	af00      	add	r7, sp, #0
	GPIOC->MODER &= ~(0x3<<(2*13)); // clears 2 in/out mode for PC13
 8000c5c:	4b05      	ldr	r3, [pc, #20]	; (8000c74 <B1_config+0x1c>)
 8000c5e:	681b      	ldr	r3, [r3, #0]
 8000c60:	4a04      	ldr	r2, [pc, #16]	; (8000c74 <B1_config+0x1c>)
 8000c62:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8000c66:	6013      	str	r3, [r2, #0]
	// This should be unnecessary: GPIOC->MODER |= (0<<(2*13)); // this sets bits 2 mode bits for PC13 to input 00
}
 8000c68:	bf00      	nop
 8000c6a:	46bd      	mov	sp, r7
 8000c6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c70:	4770      	bx	lr
 8000c72:	bf00      	nop
 8000c74:	40020800 	.word	0x40020800

08000c78 <delay_ms>:



void delay_ms(uint32_t val) {
 8000c78:	b480      	push	{r7}
 8000c7a:	b087      	sub	sp, #28
 8000c7c:	af00      	add	r7, sp, #0
 8000c7e:	6078      	str	r0, [r7, #4]
    //   2- Set the counter current value to 0 so that the counter start
    //   3- Enable the counter and the bit to select which clock you want to use
    // Now the counter is counting down once it reaches 0, a flag in the control register
    // will be set -- use that flag.

	uint32_t sysClk = 16000000; //Hz
 8000c80:	4b1b      	ldr	r3, [pc, #108]	; (8000cf0 <delay_ms+0x78>)
 8000c82:	613b      	str	r3, [r7, #16]
	float time = 0.001; //sec
 8000c84:	4b1b      	ldr	r3, [pc, #108]	; (8000cf4 <delay_ms+0x7c>)
 8000c86:	60fb      	str	r3, [r7, #12]
    SysTick->LOAD =  (sysClk * time) - 1;    /* reload with number of clocks per millisecond (use N-1)*/
 8000c88:	693b      	ldr	r3, [r7, #16]
 8000c8a:	ee07 3a90 	vmov	s15, r3
 8000c8e:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8000c92:	edd7 7a03 	vldr	s15, [r7, #12]
 8000c96:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000c9a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8000c9e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000ca2:	4b15      	ldr	r3, [pc, #84]	; (8000cf8 <delay_ms+0x80>)
 8000ca4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000ca8:	ee17 2a90 	vmov	r2, s15
 8000cac:	605a      	str	r2, [r3, #4]
    SysTick->VAL = 0;          /* clear current value register */
 8000cae:	4b12      	ldr	r3, [pc, #72]	; (8000cf8 <delay_ms+0x80>)
 8000cb0:	2200      	movs	r2, #0
 8000cb2:	609a      	str	r2, [r3, #8]
    SysTick->CTRL = 0x05;      /* Enable the timer */
 8000cb4:	4b10      	ldr	r3, [pc, #64]	; (8000cf8 <delay_ms+0x80>)
 8000cb6:	2205      	movs	r2, #5
 8000cb8:	601a      	str	r2, [r3, #0]

    for (uint32_t i=0; i<val; i++){
 8000cba:	2300      	movs	r3, #0
 8000cbc:	617b      	str	r3, [r7, #20]
 8000cbe:	e009      	b.n	8000cd4 <delay_ms+0x5c>
            while((SysTick->CTRL & 0x10000) == 0); /* wait until the COUNTFLAG is set */
 8000cc0:	bf00      	nop
 8000cc2:	4b0d      	ldr	r3, [pc, #52]	; (8000cf8 <delay_ms+0x80>)
 8000cc4:	681b      	ldr	r3, [r3, #0]
 8000cc6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8000cca:	2b00      	cmp	r3, #0
 8000ccc:	d0f9      	beq.n	8000cc2 <delay_ms+0x4a>
    for (uint32_t i=0; i<val; i++){
 8000cce:	697b      	ldr	r3, [r7, #20]
 8000cd0:	3301      	adds	r3, #1
 8000cd2:	617b      	str	r3, [r7, #20]
 8000cd4:	697a      	ldr	r2, [r7, #20]
 8000cd6:	687b      	ldr	r3, [r7, #4]
 8000cd8:	429a      	cmp	r2, r3
 8000cda:	d3f1      	bcc.n	8000cc0 <delay_ms+0x48>
        }

    SysTick->CTRL = 0; 	/* Stop the timer (Enable = 0) */
 8000cdc:	4b06      	ldr	r3, [pc, #24]	; (8000cf8 <delay_ms+0x80>)
 8000cde:	2200      	movs	r2, #0
 8000ce0:	601a      	str	r2, [r3, #0]

}
 8000ce2:	bf00      	nop
 8000ce4:	371c      	adds	r7, #28
 8000ce6:	46bd      	mov	sp, r7
 8000ce8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cec:	4770      	bx	lr
 8000cee:	bf00      	nop
 8000cf0:	00f42400 	.word	0x00f42400
 8000cf4:	3a83126f 	.word	0x3a83126f
 8000cf8:	e000e010 	.word	0xe000e010

08000cfc <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000cfc:	b480      	push	{r7}
 8000cfe:	b083      	sub	sp, #12
 8000d00:	af00      	add	r7, sp, #0
 8000d02:	4603      	mov	r3, r0
 8000d04:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000d06:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d0a:	2b00      	cmp	r3, #0
 8000d0c:	db0b      	blt.n	8000d26 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000d0e:	79fb      	ldrb	r3, [r7, #7]
 8000d10:	f003 021f 	and.w	r2, r3, #31
 8000d14:	4907      	ldr	r1, [pc, #28]	; (8000d34 <__NVIC_EnableIRQ+0x38>)
 8000d16:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d1a:	095b      	lsrs	r3, r3, #5
 8000d1c:	2001      	movs	r0, #1
 8000d1e:	fa00 f202 	lsl.w	r2, r0, r2
 8000d22:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000d26:	bf00      	nop
 8000d28:	370c      	adds	r7, #12
 8000d2a:	46bd      	mov	sp, r7
 8000d2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d30:	4770      	bx	lr
 8000d32:	bf00      	nop
 8000d34:	e000e100 	.word	0xe000e100

08000d38 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000d38:	b480      	push	{r7}
 8000d3a:	b083      	sub	sp, #12
 8000d3c:	af00      	add	r7, sp, #0
 8000d3e:	4603      	mov	r3, r0
 8000d40:	6039      	str	r1, [r7, #0]
 8000d42:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000d44:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d48:	2b00      	cmp	r3, #0
 8000d4a:	db0a      	blt.n	8000d62 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000d4c:	683b      	ldr	r3, [r7, #0]
 8000d4e:	b2da      	uxtb	r2, r3
 8000d50:	490c      	ldr	r1, [pc, #48]	; (8000d84 <__NVIC_SetPriority+0x4c>)
 8000d52:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d56:	0112      	lsls	r2, r2, #4
 8000d58:	b2d2      	uxtb	r2, r2
 8000d5a:	440b      	add	r3, r1
 8000d5c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000d60:	e00a      	b.n	8000d78 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000d62:	683b      	ldr	r3, [r7, #0]
 8000d64:	b2da      	uxtb	r2, r3
 8000d66:	4908      	ldr	r1, [pc, #32]	; (8000d88 <__NVIC_SetPriority+0x50>)
 8000d68:	79fb      	ldrb	r3, [r7, #7]
 8000d6a:	f003 030f 	and.w	r3, r3, #15
 8000d6e:	3b04      	subs	r3, #4
 8000d70:	0112      	lsls	r2, r2, #4
 8000d72:	b2d2      	uxtb	r2, r2
 8000d74:	440b      	add	r3, r1
 8000d76:	761a      	strb	r2, [r3, #24]
}
 8000d78:	bf00      	nop
 8000d7a:	370c      	adds	r7, #12
 8000d7c:	46bd      	mov	sp, r7
 8000d7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d82:	4770      	bx	lr
 8000d84:	e000e100 	.word	0xe000e100
 8000d88:	e000ed00 	.word	0xe000ed00

08000d8c <TIM2_IRQHandler>:
int fast_sample_index = 0;

// -----------------------------------------------HANDLERS-------------------------------


void TIM2_IRQHandler(void) {
 8000d8c:	b590      	push	{r4, r7, lr}
 8000d8e:	b0c5      	sub	sp, #276	; 0x114
 8000d90:	af00      	add	r7, sp, #0
	TIM2->SR = 0;			// clears the interrupt flag UIF
 8000d92:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000d96:	2200      	movs	r2, #0
 8000d98:	611a      	str	r2, [r3, #16]

	// when sampling faster than 50 u sec we want to just take samples as fast as possible
	if (sampling_frequency < FAST_THREASHOLD && fast_sample_index < 1000) {
 8000d9a:	4b3b      	ldr	r3, [pc, #236]	; (8000e88 <TIM2_IRQHandler+0xfc>)
 8000d9c:	681b      	ldr	r3, [r3, #0]
 8000d9e:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8000da2:	da10      	bge.n	8000dc6 <TIM2_IRQHandler+0x3a>
 8000da4:	4b39      	ldr	r3, [pc, #228]	; (8000e8c <TIM2_IRQHandler+0x100>)
 8000da6:	681b      	ldr	r3, [r3, #0]
 8000da8:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8000dac:	da0b      	bge.n	8000dc6 <TIM2_IRQHandler+0x3a>
		// read adc value and store in adc_samples
		adc_samples[fast_sample_index++] = read_ADC_step();
 8000dae:	4b37      	ldr	r3, [pc, #220]	; (8000e8c <TIM2_IRQHandler+0x100>)
 8000db0:	681c      	ldr	r4, [r3, #0]
 8000db2:	1c63      	adds	r3, r4, #1
 8000db4:	4a35      	ldr	r2, [pc, #212]	; (8000e8c <TIM2_IRQHandler+0x100>)
 8000db6:	6013      	str	r3, [r2, #0]
 8000db8:	f000 f94c 	bl	8001054 <read_ADC_step>
 8000dbc:	4602      	mov	r2, r0
 8000dbe:	4b34      	ldr	r3, [pc, #208]	; (8000e90 <TIM2_IRQHandler+0x104>)
 8000dc0:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8000dc4:	e059      	b.n	8000e7a <TIM2_IRQHandler+0xee>

	} else if (sampling_frequency < FAST_THREASHOLD) {
 8000dc6:	4b30      	ldr	r3, [pc, #192]	; (8000e88 <TIM2_IRQHandler+0xfc>)
 8000dc8:	681b      	ldr	r3, [r3, #0]
 8000dca:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8000dce:	da3a      	bge.n	8000e46 <TIM2_IRQHandler+0xba>
		// when we are in fast mode but are on the 1000th sample
		fast_sample_index = 0;
 8000dd0:	4b2e      	ldr	r3, [pc, #184]	; (8000e8c <TIM2_IRQHandler+0x100>)
 8000dd2:	2200      	movs	r2, #0
 8000dd4:	601a      	str	r2, [r3, #0]
		char txt[256];
		for (int i=0; i < FAST_SAMPLE_SIZE; i++ ) {
 8000dd6:	2300      	movs	r3, #0
 8000dd8:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8000ddc:	e02d      	b.n	8000e3a <TIM2_IRQHandler+0xae>
			float temp = get_temp_value(adc_samples[i]*(V_REF/RES));
 8000dde:	4a2c      	ldr	r2, [pc, #176]	; (8000e90 <TIM2_IRQHandler+0x104>)
 8000de0:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8000de4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000de8:	ee07 3a90 	vmov	s15, r3
 8000dec:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000df0:	ed9f 6a28 	vldr	s12, [pc, #160]	; 8000e94 <TIM2_IRQHandler+0x108>
 8000df4:	eddf 7a28 	vldr	s15, [pc, #160]	; 8000e98 <TIM2_IRQHandler+0x10c>
 8000df8:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000dfc:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8000e00:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000e04:	eeb0 0a67 	vmov.f32	s0, s15
 8000e08:	f000 f972 	bl	80010f0 <get_temp_value>
 8000e0c:	ed87 0a40 	vstr	s0, [r7, #256]	; 0x100
			sprintf(txt, "$%.02f;", temp);
 8000e10:	f8d7 0100 	ldr.w	r0, [r7, #256]	; 0x100
 8000e14:	f7ff fba0 	bl	8000558 <__aeabi_f2d>
 8000e18:	4603      	mov	r3, r0
 8000e1a:	460c      	mov	r4, r1
 8000e1c:	4638      	mov	r0, r7
 8000e1e:	461a      	mov	r2, r3
 8000e20:	4623      	mov	r3, r4
 8000e22:	491e      	ldr	r1, [pc, #120]	; (8000e9c <TIM2_IRQHandler+0x110>)
 8000e24:	f000 ff6e 	bl	8001d04 <siprintf>
			myprint(txt);
 8000e28:	463b      	mov	r3, r7
 8000e2a:	4618      	mov	r0, r3
 8000e2c:	f000 f9ca 	bl	80011c4 <myprint>
		for (int i=0; i < FAST_SAMPLE_SIZE; i++ ) {
 8000e30:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8000e34:	3301      	adds	r3, #1
 8000e36:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8000e3a:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8000e3e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8000e42:	dbcc      	blt.n	8000dde <TIM2_IRQHandler+0x52>
 8000e44:	e019      	b.n	8000e7a <TIM2_IRQHandler+0xee>
		}

	} else {
		// take sample and send it
		char txt[256];
		float voltage = read_ADC_voltage();
 8000e46:	f000 f8eb 	bl	8001020 <read_ADC_voltage>
 8000e4a:	ed87 0a42 	vstr	s0, [r7, #264]	; 0x108
		float temp = get_temp_value(voltage);
 8000e4e:	ed97 0a42 	vldr	s0, [r7, #264]	; 0x108
 8000e52:	f000 f94d 	bl	80010f0 <get_temp_value>
 8000e56:	ed87 0a41 	vstr	s0, [r7, #260]	; 0x104
		sprintf(txt, "$%.02f;", temp);
 8000e5a:	f8d7 0104 	ldr.w	r0, [r7, #260]	; 0x104
 8000e5e:	f7ff fb7b 	bl	8000558 <__aeabi_f2d>
 8000e62:	4603      	mov	r3, r0
 8000e64:	460c      	mov	r4, r1
 8000e66:	4638      	mov	r0, r7
 8000e68:	461a      	mov	r2, r3
 8000e6a:	4623      	mov	r3, r4
 8000e6c:	490b      	ldr	r1, [pc, #44]	; (8000e9c <TIM2_IRQHandler+0x110>)
 8000e6e:	f000 ff49 	bl	8001d04 <siprintf>
		myprint(txt);
 8000e72:	463b      	mov	r3, r7
 8000e74:	4618      	mov	r0, r3
 8000e76:	f000 f9a5 	bl	80011c4 <myprint>
	}

	// reset interrupt
	set_sample_interrupt();
 8000e7a:	f000 f90b 	bl	8001094 <set_sample_interrupt>
}
 8000e7e:	bf00      	nop
 8000e80:	f507 778a 	add.w	r7, r7, #276	; 0x114
 8000e84:	46bd      	mov	sp, r7
 8000e86:	bd90      	pop	{r4, r7, pc}
 8000e88:	200011a0 	.word	0x200011a0
 8000e8c:	200001ec 	.word	0x200001ec
 8000e90:	20000200 	.word	0x20000200
 8000e94:	40533333 	.word	0x40533333
 8000e98:	00001000 	.word	0x00001000
 8000e9c:	080034e0 	.word	0x080034e0

08000ea0 <EXTI15_10_IRQHandler>:

/** handler for button PC8 **/
void EXTI15_10_IRQHandler(void) {
 8000ea0:	b580      	push	{r7, lr}
 8000ea2:	b082      	sub	sp, #8
 8000ea4:	af00      	add	r7, sp, #0
	// start saving data when this interrupt will take longer to execute than the sample rate

	// change ADC to sample the pot on ch1
	ADC1->SQR3 = 1;                 /* conversion sequence starts at ch 1 which maps to A1 */
 8000ea6:	4b12      	ldr	r3, [pc, #72]	; (8000ef0 <EXTI15_10_IRQHandler+0x50>)
 8000ea8:	2201      	movs	r2, #1
 8000eaa:	635a      	str	r2, [r3, #52]	; 0x34
	ADC1->CR2 |= 1;                 /* enable ADC1 */
 8000eac:	4b10      	ldr	r3, [pc, #64]	; (8000ef0 <EXTI15_10_IRQHandler+0x50>)
 8000eae:	689b      	ldr	r3, [r3, #8]
 8000eb0:	4a0f      	ldr	r2, [pc, #60]	; (8000ef0 <EXTI15_10_IRQHandler+0x50>)
 8000eb2:	f043 0301 	orr.w	r3, r3, #1
 8000eb6:	6093      	str	r3, [r2, #8]

	// update sample_frequency
	int adc_val = read_ADC_step();
 8000eb8:	f000 f8cc 	bl	8001054 <read_ADC_step>
 8000ebc:	6078      	str	r0, [r7, #4]
	sampling_frequency = get_sample_rate_from_ADC(adc_val);
 8000ebe:	6878      	ldr	r0, [r7, #4]
 8000ec0:	f000 f954 	bl	800116c <get_sample_rate_from_ADC>
 8000ec4:	4602      	mov	r2, r0
 8000ec6:	4b0b      	ldr	r3, [pc, #44]	; (8000ef4 <EXTI15_10_IRQHandler+0x54>)
 8000ec8:	601a      	str	r2, [r3, #0]

	// set ADC back to channel 0 to read thermistor
	ADC1->SQR3 = 0;                 /* conversion sequence starts at ch 1 which maps to A1 */
 8000eca:	4b09      	ldr	r3, [pc, #36]	; (8000ef0 <EXTI15_10_IRQHandler+0x50>)
 8000ecc:	2200      	movs	r2, #0
 8000ece:	635a      	str	r2, [r3, #52]	; 0x34
	ADC1->CR2 |= 1;                 /* enable ADC1 */
 8000ed0:	4b07      	ldr	r3, [pc, #28]	; (8000ef0 <EXTI15_10_IRQHandler+0x50>)
 8000ed2:	689b      	ldr	r3, [r3, #8]
 8000ed4:	4a06      	ldr	r2, [pc, #24]	; (8000ef0 <EXTI15_10_IRQHandler+0x50>)
 8000ed6:	f043 0301 	orr.w	r3, r3, #1
 8000eda:	6093      	str	r3, [r2, #8]

	EXTI->PR = 0x2000; 		// clear the pending interrupt flag
 8000edc:	4b06      	ldr	r3, [pc, #24]	; (8000ef8 <EXTI15_10_IRQHandler+0x58>)
 8000ede:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000ee2:	615a      	str	r2, [r3, #20]
	set_sample_interrupt();
 8000ee4:	f000 f8d6 	bl	8001094 <set_sample_interrupt>
}
 8000ee8:	bf00      	nop
 8000eea:	3708      	adds	r7, #8
 8000eec:	46bd      	mov	sp, r7
 8000eee:	bd80      	pop	{r7, pc}
 8000ef0:	40012000 	.word	0x40012000
 8000ef4:	200011a0 	.word	0x200011a0
 8000ef8:	40013c00 	.word	0x40013c00

08000efc <main>:

// --------------------------------------------END HANDLERS---------------------------------------

int main (void) {
 8000efc:	b580      	push	{r7, lr}
 8000efe:	af00      	add	r7, sp, #0

    // initialize variables
	sampling_frequency = (MAX_SAMPLE_RATE + MIN_SAMPLE_RATE) / 2; // set default sample frequency
 8000f00:	4a3f      	ldr	r2, [pc, #252]	; (8001000 <main+0x104>)
 8000f02:	2301      	movs	r3, #1
 8000f04:	4413      	add	r3, r2
 8000f06:	0fda      	lsrs	r2, r3, #31
 8000f08:	4413      	add	r3, r2
 8000f0a:	105b      	asrs	r3, r3, #1
 8000f0c:	461a      	mov	r2, r3
 8000f0e:	4b3d      	ldr	r3, [pc, #244]	; (8001004 <main+0x108>)
 8000f10:	601a      	str	r2, [r3, #0]
	sampling_range = MAX_SAMPLE_RATE - MIN_SAMPLE_RATE;
 8000f12:	4a3b      	ldr	r2, [pc, #236]	; (8001000 <main+0x104>)
 8000f14:	2301      	movs	r3, #1
 8000f16:	1ad3      	subs	r3, r2, r3
 8000f18:	4a3b      	ldr	r2, [pc, #236]	; (8001008 <main+0x10c>)
 8000f1a:	6013      	str	r3, [r2, #0]

	delay_ms(300); // was only working in debug mode??? what?
 8000f1c:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8000f20:	f7ff feaa 	bl	8000c78 <delay_ms>

	// enable clks for GPIOA, GPIOB and GPIOC
	RCC->AHB1ENR |= 7;
 8000f24:	4b39      	ldr	r3, [pc, #228]	; (800100c <main+0x110>)
 8000f26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f28:	4a38      	ldr	r2, [pc, #224]	; (800100c <main+0x110>)
 8000f2a:	f043 0307 	orr.w	r3, r3, #7
 8000f2e:	6313      	str	r3, [r2, #48]	; 0x30

	RCC->APB2ENR |= 1<<14; // enable the syscfg
 8000f30:	4b36      	ldr	r3, [pc, #216]	; (800100c <main+0x110>)
 8000f32:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000f34:	4a35      	ldr	r2, [pc, #212]	; (800100c <main+0x110>)
 8000f36:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000f3a:	6453      	str	r3, [r2, #68]	; 0x44


    USART2_init();
 8000f3c:	f000 f95e 	bl	80011fc <USART2_init>
    RCC->AHB1ENR |= 1<<2; // enable GPIOC for push button
 8000f40:	4b32      	ldr	r3, [pc, #200]	; (800100c <main+0x110>)
 8000f42:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f44:	4a31      	ldr	r2, [pc, #196]	; (800100c <main+0x110>)
 8000f46:	f043 0304 	orr.w	r3, r3, #4
 8000f4a:	6313      	str	r3, [r2, #48]	; 0x30
    B1_config(); // set up push button
 8000f4c:	f7ff fe84 	bl	8000c58 <B1_config>

    RCC->APB2ENR |= 0x4000; // enable the SysCFG clk
 8000f50:	4b2e      	ldr	r3, [pc, #184]	; (800100c <main+0x110>)
 8000f52:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000f54:	4a2d      	ldr	r2, [pc, #180]	; (800100c <main+0x110>)
 8000f56:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000f5a:	6453      	str	r3, [r2, #68]	; 0x44


    RCC->AHB1ENR |= 1;	            /* enable GPIOA clock */
 8000f5c:	4b2b      	ldr	r3, [pc, #172]	; (800100c <main+0x110>)
 8000f5e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f60:	4a2a      	ldr	r2, [pc, #168]	; (800100c <main+0x110>)
 8000f62:	f043 0301 	orr.w	r3, r3, #1
 8000f66:	6313      	str	r3, [r2, #48]	; 0x30
    GPIOA->MODER |= 0xC;           /* PA1 analog */
 8000f68:	4b29      	ldr	r3, [pc, #164]	; (8001010 <main+0x114>)
 8000f6a:	681b      	ldr	r3, [r3, #0]
 8000f6c:	4a28      	ldr	r2, [pc, #160]	; (8001010 <main+0x114>)
 8000f6e:	f043 030c 	orr.w	r3, r3, #12
 8000f72:	6013      	str	r3, [r2, #0]
    GPIOA->MODER |= 0x3;		  /* PA0 to analog mode*/
 8000f74:	4b26      	ldr	r3, [pc, #152]	; (8001010 <main+0x114>)
 8000f76:	681b      	ldr	r3, [r3, #0]
 8000f78:	4a25      	ldr	r2, [pc, #148]	; (8001010 <main+0x114>)
 8000f7a:	f043 0303 	orr.w	r3, r3, #3
 8000f7e:	6013      	str	r3, [r2, #0]

    /* setup ADC1 to read PA0 */
    RCC->APB2ENR |= 0x00000100;     /* enable ADC1 clock */
 8000f80:	4b22      	ldr	r3, [pc, #136]	; (800100c <main+0x110>)
 8000f82:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000f84:	4a21      	ldr	r2, [pc, #132]	; (800100c <main+0x110>)
 8000f86:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000f8a:	6453      	str	r3, [r2, #68]	; 0x44
    ADC1->CR2 = 0;                  /* SW trigger */
 8000f8c:	4b21      	ldr	r3, [pc, #132]	; (8001014 <main+0x118>)
 8000f8e:	2200      	movs	r2, #0
 8000f90:	609a      	str	r2, [r3, #8]
    ADC1->SQR3 = 0;                 /* conversion sequence starts at ch 0 */
 8000f92:	4b20      	ldr	r3, [pc, #128]	; (8001014 <main+0x118>)
 8000f94:	2200      	movs	r2, #0
 8000f96:	635a      	str	r2, [r3, #52]	; 0x34
    ADC1->SQR1 = 0;                 /* conversion sequence length 1 */
 8000f98:	4b1e      	ldr	r3, [pc, #120]	; (8001014 <main+0x118>)
 8000f9a:	2200      	movs	r2, #0
 8000f9c:	62da      	str	r2, [r3, #44]	; 0x2c
    ADC1->CR2 |= 1;                 /* enable ADC1 */
 8000f9e:	4b1d      	ldr	r3, [pc, #116]	; (8001014 <main+0x118>)
 8000fa0:	689b      	ldr	r3, [r3, #8]
 8000fa2:	4a1c      	ldr	r2, [pc, #112]	; (8001014 <main+0x118>)
 8000fa4:	f043 0301 	orr.w	r3, r3, #1
 8000fa8:	6093      	str	r3, [r2, #8]
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000faa:	b672      	cpsid	i

    // set up interrupts
    __disable_irq(); // disables the global interrupt request

    set_sample_interrupt();
 8000fac:	f000 f872 	bl	8001094 <set_sample_interrupt>

    NVIC_EnableIRQ(TIM2_IRQn);				// enables the tim2 interrupt
 8000fb0:	201c      	movs	r0, #28
 8000fb2:	f7ff fea3 	bl	8000cfc <__NVIC_EnableIRQ>
    NVIC_SetPriority(TIM2_IRQn, PRIO_TIM2);	// sets the timer priority
 8000fb6:	2103      	movs	r1, #3
 8000fb8:	201c      	movs	r0, #28
 8000fba:	f7ff febd 	bl	8000d38 <__NVIC_SetPriority>

    // set the push button interrupt
    SYSCFG->EXTICR[3] &= ~0x00F0;       /* clear port selection for EXTI13 */
 8000fbe:	4b16      	ldr	r3, [pc, #88]	; (8001018 <main+0x11c>)
 8000fc0:	695b      	ldr	r3, [r3, #20]
 8000fc2:	4a15      	ldr	r2, [pc, #84]	; (8001018 <main+0x11c>)
 8000fc4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000fc8:	6153      	str	r3, [r2, #20]
    SYSCFG->EXTICR[3] |= 0x0020;        /* select port C for EXTI13 */
 8000fca:	4b13      	ldr	r3, [pc, #76]	; (8001018 <main+0x11c>)
 8000fcc:	695b      	ldr	r3, [r3, #20]
 8000fce:	4a12      	ldr	r2, [pc, #72]	; (8001018 <main+0x11c>)
 8000fd0:	f043 0320 	orr.w	r3, r3, #32
 8000fd4:	6153      	str	r3, [r2, #20]

    EXTI->IMR |= 0x2000;                /* unmask EXTI13 */
 8000fd6:	4b11      	ldr	r3, [pc, #68]	; (800101c <main+0x120>)
 8000fd8:	681b      	ldr	r3, [r3, #0]
 8000fda:	4a10      	ldr	r2, [pc, #64]	; (800101c <main+0x120>)
 8000fdc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000fe0:	6013      	str	r3, [r2, #0]
    EXTI->FTSR |= 0x2000;               /* select falling edge trigger- this was supposed to be falling edge but it wouldn't work on 0*/
 8000fe2:	4b0e      	ldr	r3, [pc, #56]	; (800101c <main+0x120>)
 8000fe4:	68db      	ldr	r3, [r3, #12]
 8000fe6:	4a0d      	ldr	r2, [pc, #52]	; (800101c <main+0x120>)
 8000fe8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000fec:	60d3      	str	r3, [r2, #12]

    NVIC_EnableIRQ(EXTI15_10_IRQn);						// enables the Button interrupt
 8000fee:	2028      	movs	r0, #40	; 0x28
 8000ff0:	f7ff fe84 	bl	8000cfc <__NVIC_EnableIRQ>
    NVIC_SetPriority(EXTI15_10_IRQn, PRIO_BUTTON);		// sets the button priority
 8000ff4:	2102      	movs	r1, #2
 8000ff6:	2028      	movs	r0, #40	; 0x28
 8000ff8:	f7ff fe9e 	bl	8000d38 <__NVIC_SetPriority>
  __ASM volatile ("cpsie i" : : : "memory");
 8000ffc:	b662      	cpsie	i

    __enable_irq();

    while (1) {
 8000ffe:	e7fe      	b.n	8000ffe <main+0x102>
 8001000:	001e8480 	.word	0x001e8480
 8001004:	200011a0 	.word	0x200011a0
 8001008:	200001fc 	.word	0x200001fc
 800100c:	40023800 	.word	0x40023800
 8001010:	40020000 	.word	0x40020000
 8001014:	40012000 	.word	0x40012000
 8001018:	40013800 	.word	0x40013800
 800101c:	40013c00 	.word	0x40013c00

08001020 <read_ADC_voltage>:

    }
}

// returns the float percentage of the ADC
float read_ADC_voltage(void) {
 8001020:	b580      	push	{r7, lr}
 8001022:	af00      	add	r7, sp, #0
	return read_ADC_step()*(V_REF/RES);
 8001024:	f000 f816 	bl	8001054 <read_ADC_step>
 8001028:	ee07 0a90 	vmov	s15, r0
 800102c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001030:	ed9f 6a06 	vldr	s12, [pc, #24]	; 800104c <read_ADC_voltage+0x2c>
 8001034:	eddf 7a06 	vldr	s15, [pc, #24]	; 8001050 <read_ADC_voltage+0x30>
 8001038:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800103c:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8001040:	ee67 7a27 	vmul.f32	s15, s14, s15
}
 8001044:	eeb0 0a67 	vmov.f32	s0, s15
 8001048:	bd80      	pop	{r7, pc}
 800104a:	bf00      	nop
 800104c:	40533333 	.word	0x40533333
 8001050:	00001000 	.word	0x00001000

08001054 <read_ADC_step>:

// returns the discrete value between 0 and RES
int read_ADC_step() {
 8001054:	b480      	push	{r7}
 8001056:	af00      	add	r7, sp, #0
	RCC->APB2ENR |= 0x00000100;     /* enable ADC1 clock */
 8001058:	4b0c      	ldr	r3, [pc, #48]	; (800108c <read_ADC_step+0x38>)
 800105a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800105c:	4a0b      	ldr	r2, [pc, #44]	; (800108c <read_ADC_step+0x38>)
 800105e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001062:	6453      	str	r3, [r2, #68]	; 0x44
	ADC1->CR2 |= 0x40000000;        /* start a conversion */
 8001064:	4b0a      	ldr	r3, [pc, #40]	; (8001090 <read_ADC_step+0x3c>)
 8001066:	689b      	ldr	r3, [r3, #8]
 8001068:	4a09      	ldr	r2, [pc, #36]	; (8001090 <read_ADC_step+0x3c>)
 800106a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800106e:	6093      	str	r3, [r2, #8]
	while(!(ADC1->SR & 2)) {}       /* wait for conv complete */
 8001070:	bf00      	nop
 8001072:	4b07      	ldr	r3, [pc, #28]	; (8001090 <read_ADC_step+0x3c>)
 8001074:	681b      	ldr	r3, [r3, #0]
 8001076:	f003 0302 	and.w	r3, r3, #2
 800107a:	2b00      	cmp	r3, #0
 800107c:	d0f9      	beq.n	8001072 <read_ADC_step+0x1e>

	return (ADC1->DR);
 800107e:	4b04      	ldr	r3, [pc, #16]	; (8001090 <read_ADC_step+0x3c>)
 8001080:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 8001082:	4618      	mov	r0, r3
 8001084:	46bd      	mov	sp, r7
 8001086:	f85d 7b04 	ldr.w	r7, [sp], #4
 800108a:	4770      	bx	lr
 800108c:	40023800 	.word	0x40023800
 8001090:	40012000 	.word	0x40012000

08001094 <set_sample_interrupt>:


void set_sample_interrupt(void) {
 8001094:	b480      	push	{r7}
 8001096:	af00      	add	r7, sp, #0
	// set up timer to to interrupt when we should sample
	RCC->APB1ENR |= 1;              /* enable TIM2 clock */
 8001098:	4b12      	ldr	r3, [pc, #72]	; (80010e4 <set_sample_interrupt+0x50>)
 800109a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800109c:	4a11      	ldr	r2, [pc, #68]	; (80010e4 <set_sample_interrupt+0x50>)
 800109e:	f043 0301 	orr.w	r3, r3, #1
 80010a2:	6413      	str	r3, [r2, #64]	; 0x40
	TIM2->PSC = 16-1;               /* divided by 16  (use N-1) - dividing by 16 gets in in u sec*/
 80010a4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80010a8:	220f      	movs	r2, #15
 80010aa:	629a      	str	r2, [r3, #40]	; 0x28
	TIM2->ARR = sampling_frequency-1;              /* sampling frequency is the number of micro seconds to count to*/
 80010ac:	4b0e      	ldr	r3, [pc, #56]	; (80010e8 <set_sample_interrupt+0x54>)
 80010ae:	681b      	ldr	r3, [r3, #0]
 80010b0:	1e5a      	subs	r2, r3, #1
 80010b2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80010b6:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM2->CNT = 0;                  /* clear timer counter */
 80010b8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80010bc:	2200      	movs	r2, #0
 80010be:	625a      	str	r2, [r3, #36]	; 0x24
	TIM2->CR1 = 1;                  /* enable TIM2 */
 80010c0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80010c4:	2201      	movs	r2, #1
 80010c6:	601a      	str	r2, [r3, #0]

	TIM2->DIER |= 1;				// enable the Update Interrupt Enable
 80010c8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80010cc:	68db      	ldr	r3, [r3, #12]
 80010ce:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80010d2:	f043 0301 	orr.w	r3, r3, #1
 80010d6:	60d3      	str	r3, [r2, #12]
}
 80010d8:	bf00      	nop
 80010da:	46bd      	mov	sp, r7
 80010dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010e0:	4770      	bx	lr
 80010e2:	bf00      	nop
 80010e4:	40023800 	.word	0x40023800
 80010e8:	200011a0 	.word	0x200011a0
 80010ec:	00000000 	.word	0x00000000

080010f0 <get_temp_value>:

/**
 * thermistor_reading is the voltage percentage as calculated by ADC_VAL*V_ref/Res
 */
float get_temp_value(float thermistor_reading) {
 80010f0:	b590      	push	{r4, r7, lr}
 80010f2:	b085      	sub	sp, #20
 80010f4:	af00      	add	r7, sp, #0
 80010f6:	ed87 0a01 	vstr	s0, [r7, #4]
	float temp_celsius = (thermistor_reading * 100) - 50;
 80010fa:	edd7 7a01 	vldr	s15, [r7, #4]
 80010fe:	ed9f 7a18 	vldr	s14, [pc, #96]	; 8001160 <get_temp_value+0x70>
 8001102:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001106:	ed9f 7a17 	vldr	s14, [pc, #92]	; 8001164 <get_temp_value+0x74>
 800110a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800110e:	edc7 7a03 	vstr	s15, [r7, #12]
	float temp_far = (temp_celsius * (1.8)) + 32;
 8001112:	68f8      	ldr	r0, [r7, #12]
 8001114:	f7ff fa20 	bl	8000558 <__aeabi_f2d>
 8001118:	a30f      	add	r3, pc, #60	; (adr r3, 8001158 <get_temp_value+0x68>)
 800111a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800111e:	f7ff fa73 	bl	8000608 <__aeabi_dmul>
 8001122:	4603      	mov	r3, r0
 8001124:	460c      	mov	r4, r1
 8001126:	4618      	mov	r0, r3
 8001128:	4621      	mov	r1, r4
 800112a:	f04f 0200 	mov.w	r2, #0
 800112e:	4b0e      	ldr	r3, [pc, #56]	; (8001168 <get_temp_value+0x78>)
 8001130:	f7ff f8b4 	bl	800029c <__adddf3>
 8001134:	4603      	mov	r3, r0
 8001136:	460c      	mov	r4, r1
 8001138:	4618      	mov	r0, r3
 800113a:	4621      	mov	r1, r4
 800113c:	f7ff fd3c 	bl	8000bb8 <__aeabi_d2f>
 8001140:	4603      	mov	r3, r0
 8001142:	60bb      	str	r3, [r7, #8]
	return temp_far;
 8001144:	68bb      	ldr	r3, [r7, #8]
 8001146:	ee07 3a90 	vmov	s15, r3
}
 800114a:	eeb0 0a67 	vmov.f32	s0, s15
 800114e:	3714      	adds	r7, #20
 8001150:	46bd      	mov	sp, r7
 8001152:	bd90      	pop	{r4, r7, pc}
 8001154:	f3af 8000 	nop.w
 8001158:	cccccccd 	.word	0xcccccccd
 800115c:	3ffccccc 	.word	0x3ffccccc
 8001160:	42c80000 	.word	0x42c80000
 8001164:	42480000 	.word	0x42480000
 8001168:	40400000 	.word	0x40400000

0800116c <get_sample_rate_from_ADC>:

/**
 * get the sample rate from the ADC discrete value between 0 and RES
 */
int get_sample_rate_from_ADC(int adc_val) {
 800116c:	b480      	push	{r7}
 800116e:	b085      	sub	sp, #20
 8001170:	af00      	add	r7, sp, #0
 8001172:	6078      	str	r0, [r7, #4]

	// adjust for 0 voltage - pot all the way off
	if (adc_val == 0) {
 8001174:	687b      	ldr	r3, [r7, #4]
 8001176:	2b00      	cmp	r3, #0
 8001178:	d101      	bne.n	800117e <get_sample_rate_from_ADC+0x12>
		return 2; // smallest value possible as we subtract 1 when feeding to ARR
 800117a:	2302      	movs	r3, #2
 800117c:	e018      	b.n	80011b0 <get_sample_rate_from_ADC+0x44>
	}
	int new_rate = ((float)adc_val/RES) * sampling_range;
 800117e:	687b      	ldr	r3, [r7, #4]
 8001180:	ee07 3a90 	vmov	s15, r3
 8001184:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8001188:	eddf 7a0c 	vldr	s15, [pc, #48]	; 80011bc <get_sample_rate_from_ADC+0x50>
 800118c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001190:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8001194:	4b0a      	ldr	r3, [pc, #40]	; (80011c0 <get_sample_rate_from_ADC+0x54>)
 8001196:	681b      	ldr	r3, [r3, #0]
 8001198:	ee07 3a90 	vmov	s15, r3
 800119c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80011a0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80011a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80011a8:	ee17 3a90 	vmov	r3, s15
 80011ac:	60fb      	str	r3, [r7, #12]
	return new_rate;
 80011ae:	68fb      	ldr	r3, [r7, #12]
}
 80011b0:	4618      	mov	r0, r3
 80011b2:	3714      	adds	r7, #20
 80011b4:	46bd      	mov	sp, r7
 80011b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011ba:	4770      	bx	lr
 80011bc:	00001000 	.word	0x00001000
 80011c0:	200001fc 	.word	0x200001fc

080011c4 <myprint>:

void myprint(char msg[]){
 80011c4:	b580      	push	{r7, lr}
 80011c6:	b084      	sub	sp, #16
 80011c8:	af00      	add	r7, sp, #0
 80011ca:	6078      	str	r0, [r7, #4]
	uint8_t idx=0;
 80011cc:	2300      	movs	r3, #0
 80011ce:	73fb      	strb	r3, [r7, #15]
	while(msg[idx]!='\0' ){
 80011d0:	e009      	b.n	80011e6 <myprint+0x22>
		USART2_write(msg[idx++]);
 80011d2:	7bfb      	ldrb	r3, [r7, #15]
 80011d4:	1c5a      	adds	r2, r3, #1
 80011d6:	73fa      	strb	r2, [r7, #15]
 80011d8:	461a      	mov	r2, r3
 80011da:	687b      	ldr	r3, [r7, #4]
 80011dc:	4413      	add	r3, r2
 80011de:	781b      	ldrb	r3, [r3, #0]
 80011e0:	4618      	mov	r0, r3
 80011e2:	f000 f84f 	bl	8001284 <USART2_write>
	while(msg[idx]!='\0' ){
 80011e6:	7bfb      	ldrb	r3, [r7, #15]
 80011e8:	687a      	ldr	r2, [r7, #4]
 80011ea:	4413      	add	r3, r2
 80011ec:	781b      	ldrb	r3, [r3, #0]
 80011ee:	2b00      	cmp	r3, #0
 80011f0:	d1ef      	bne.n	80011d2 <myprint+0xe>
	}
}
 80011f2:	bf00      	nop
 80011f4:	3710      	adds	r7, #16
 80011f6:	46bd      	mov	sp, r7
 80011f8:	bd80      	pop	{r7, pc}
	...

080011fc <USART2_init>:
/* initialize USART2 to transmit at 9600 Baud */
void USART2_init (void) {
 80011fc:	b480      	push	{r7}
 80011fe:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= 1;          /* Enable GPIOA clock */
 8001200:	4b1d      	ldr	r3, [pc, #116]	; (8001278 <USART2_init+0x7c>)
 8001202:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001204:	4a1c      	ldr	r2, [pc, #112]	; (8001278 <USART2_init+0x7c>)
 8001206:	f043 0301 	orr.w	r3, r3, #1
 800120a:	6313      	str	r3, [r2, #48]	; 0x30
    RCC->APB1ENR |= 0x20000;    /* Enable USART2 clock */
 800120c:	4b1a      	ldr	r3, [pc, #104]	; (8001278 <USART2_init+0x7c>)
 800120e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001210:	4a19      	ldr	r2, [pc, #100]	; (8001278 <USART2_init+0x7c>)
 8001212:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001216:	6413      	str	r3, [r2, #64]	; 0x40

    /* Configure PA2, PA3 for USART2 TX, RX */
    GPIOA->AFR[0] &= ~0xFF00;
 8001218:	4b18      	ldr	r3, [pc, #96]	; (800127c <USART2_init+0x80>)
 800121a:	6a1b      	ldr	r3, [r3, #32]
 800121c:	4a17      	ldr	r2, [pc, #92]	; (800127c <USART2_init+0x80>)
 800121e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8001222:	6213      	str	r3, [r2, #32]
    GPIOA->AFR[0] |=  0x7700;   /* alt7 for USART2 */
 8001224:	4b15      	ldr	r3, [pc, #84]	; (800127c <USART2_init+0x80>)
 8001226:	6a1b      	ldr	r3, [r3, #32]
 8001228:	4a14      	ldr	r2, [pc, #80]	; (800127c <USART2_init+0x80>)
 800122a:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 800122e:	6213      	str	r3, [r2, #32]
    GPIOA->MODER  &= ~0x00F0;
 8001230:	4b12      	ldr	r3, [pc, #72]	; (800127c <USART2_init+0x80>)
 8001232:	681b      	ldr	r3, [r3, #0]
 8001234:	4a11      	ldr	r2, [pc, #68]	; (800127c <USART2_init+0x80>)
 8001236:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800123a:	6013      	str	r3, [r2, #0]
    GPIOA->MODER  |=  0x00A0;   /* enable alt. function for PA2, PA3 */
 800123c:	4b0f      	ldr	r3, [pc, #60]	; (800127c <USART2_init+0x80>)
 800123e:	681b      	ldr	r3, [r3, #0]
 8001240:	4a0e      	ldr	r2, [pc, #56]	; (800127c <USART2_init+0x80>)
 8001242:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8001246:	6013      	str	r3, [r2, #0]

    USART2->BRR = 0x008B;       /* 115200 baud @ 16 MHz */
 8001248:	4b0d      	ldr	r3, [pc, #52]	; (8001280 <USART2_init+0x84>)
 800124a:	228b      	movs	r2, #139	; 0x8b
 800124c:	609a      	str	r2, [r3, #8]
    USART2->CR1 = 0x000C;       /* enable Tx, Rx, 8-bit data */
 800124e:	4b0c      	ldr	r3, [pc, #48]	; (8001280 <USART2_init+0x84>)
 8001250:	220c      	movs	r2, #12
 8001252:	60da      	str	r2, [r3, #12]
    USART2->CR2 = 0x0000;       /* 1 stop bit */
 8001254:	4b0a      	ldr	r3, [pc, #40]	; (8001280 <USART2_init+0x84>)
 8001256:	2200      	movs	r2, #0
 8001258:	611a      	str	r2, [r3, #16]
    USART2->CR3 = 0x0000;       /* no flow control */
 800125a:	4b09      	ldr	r3, [pc, #36]	; (8001280 <USART2_init+0x84>)
 800125c:	2200      	movs	r2, #0
 800125e:	615a      	str	r2, [r3, #20]
    USART2->CR1 |= 0x2000;      /* enable USART2 */
 8001260:	4b07      	ldr	r3, [pc, #28]	; (8001280 <USART2_init+0x84>)
 8001262:	68db      	ldr	r3, [r3, #12]
 8001264:	4a06      	ldr	r2, [pc, #24]	; (8001280 <USART2_init+0x84>)
 8001266:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800126a:	60d3      	str	r3, [r2, #12]
}
 800126c:	bf00      	nop
 800126e:	46bd      	mov	sp, r7
 8001270:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001274:	4770      	bx	lr
 8001276:	bf00      	nop
 8001278:	40023800 	.word	0x40023800
 800127c:	40020000 	.word	0x40020000
 8001280:	40004400 	.word	0x40004400

08001284 <USART2_write>:

/* Write a character to USART2 */
void USART2_write (int ch) {
 8001284:	b480      	push	{r7}
 8001286:	b083      	sub	sp, #12
 8001288:	af00      	add	r7, sp, #0
 800128a:	6078      	str	r0, [r7, #4]
    while (!(USART2->SR & 0x0080)) {}   // wait until Tx buffer empty
 800128c:	bf00      	nop
 800128e:	4b08      	ldr	r3, [pc, #32]	; (80012b0 <USART2_write+0x2c>)
 8001290:	681b      	ldr	r3, [r3, #0]
 8001292:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001296:	2b00      	cmp	r3, #0
 8001298:	d0f9      	beq.n	800128e <USART2_write+0xa>
    USART2->DR = (ch & 0xFF);
 800129a:	687b      	ldr	r3, [r7, #4]
 800129c:	4a04      	ldr	r2, [pc, #16]	; (80012b0 <USART2_write+0x2c>)
 800129e:	b2db      	uxtb	r3, r3
 80012a0:	6053      	str	r3, [r2, #4]
}
 80012a2:	bf00      	nop
 80012a4:	370c      	adds	r7, #12
 80012a6:	46bd      	mov	sp, r7
 80012a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012ac:	4770      	bx	lr
 80012ae:	bf00      	nop
 80012b0:	40004400 	.word	0x40004400

080012b4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80012b4:	b480      	push	{r7}
 80012b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80012b8:	e7fe      	b.n	80012b8 <NMI_Handler+0x4>

080012ba <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80012ba:	b480      	push	{r7}
 80012bc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80012be:	e7fe      	b.n	80012be <HardFault_Handler+0x4>

080012c0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80012c0:	b480      	push	{r7}
 80012c2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80012c4:	e7fe      	b.n	80012c4 <MemManage_Handler+0x4>

080012c6 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80012c6:	b480      	push	{r7}
 80012c8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80012ca:	e7fe      	b.n	80012ca <BusFault_Handler+0x4>

080012cc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80012cc:	b480      	push	{r7}
 80012ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80012d0:	e7fe      	b.n	80012d0 <UsageFault_Handler+0x4>

080012d2 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80012d2:	b480      	push	{r7}
 80012d4:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80012d6:	bf00      	nop
 80012d8:	46bd      	mov	sp, r7
 80012da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012de:	4770      	bx	lr

080012e0 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80012e0:	b480      	push	{r7}
 80012e2:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80012e4:	bf00      	nop
 80012e6:	46bd      	mov	sp, r7
 80012e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012ec:	4770      	bx	lr

080012ee <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80012ee:	b480      	push	{r7}
 80012f0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80012f2:	bf00      	nop
 80012f4:	46bd      	mov	sp, r7
 80012f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012fa:	4770      	bx	lr

080012fc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80012fc:	b580      	push	{r7, lr}
 80012fe:	b086      	sub	sp, #24
 8001300:	af00      	add	r7, sp, #0
 8001302:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001304:	4a14      	ldr	r2, [pc, #80]	; (8001358 <_sbrk+0x5c>)
 8001306:	4b15      	ldr	r3, [pc, #84]	; (800135c <_sbrk+0x60>)
 8001308:	1ad3      	subs	r3, r2, r3
 800130a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800130c:	697b      	ldr	r3, [r7, #20]
 800130e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001310:	4b13      	ldr	r3, [pc, #76]	; (8001360 <_sbrk+0x64>)
 8001312:	681b      	ldr	r3, [r3, #0]
 8001314:	2b00      	cmp	r3, #0
 8001316:	d102      	bne.n	800131e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001318:	4b11      	ldr	r3, [pc, #68]	; (8001360 <_sbrk+0x64>)
 800131a:	4a12      	ldr	r2, [pc, #72]	; (8001364 <_sbrk+0x68>)
 800131c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800131e:	4b10      	ldr	r3, [pc, #64]	; (8001360 <_sbrk+0x64>)
 8001320:	681a      	ldr	r2, [r3, #0]
 8001322:	687b      	ldr	r3, [r7, #4]
 8001324:	4413      	add	r3, r2
 8001326:	693a      	ldr	r2, [r7, #16]
 8001328:	429a      	cmp	r2, r3
 800132a:	d207      	bcs.n	800133c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800132c:	f000 f85c 	bl	80013e8 <__errno>
 8001330:	4602      	mov	r2, r0
 8001332:	230c      	movs	r3, #12
 8001334:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 8001336:	f04f 33ff 	mov.w	r3, #4294967295
 800133a:	e009      	b.n	8001350 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800133c:	4b08      	ldr	r3, [pc, #32]	; (8001360 <_sbrk+0x64>)
 800133e:	681b      	ldr	r3, [r3, #0]
 8001340:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001342:	4b07      	ldr	r3, [pc, #28]	; (8001360 <_sbrk+0x64>)
 8001344:	681a      	ldr	r2, [r3, #0]
 8001346:	687b      	ldr	r3, [r7, #4]
 8001348:	4413      	add	r3, r2
 800134a:	4a05      	ldr	r2, [pc, #20]	; (8001360 <_sbrk+0x64>)
 800134c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800134e:	68fb      	ldr	r3, [r7, #12]
}
 8001350:	4618      	mov	r0, r3
 8001352:	3718      	adds	r7, #24
 8001354:	46bd      	mov	sp, r7
 8001356:	bd80      	pop	{r7, pc}
 8001358:	20020000 	.word	0x20020000
 800135c:	00000400 	.word	0x00000400
 8001360:	200001f0 	.word	0x200001f0
 8001364:	200011a8 	.word	0x200011a8

08001368 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001368:	b480      	push	{r7}
 800136a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800136c:	4b08      	ldr	r3, [pc, #32]	; (8001390 <SystemInit+0x28>)
 800136e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001372:	4a07      	ldr	r2, [pc, #28]	; (8001390 <SystemInit+0x28>)
 8001374:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001378:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800137c:	4b04      	ldr	r3, [pc, #16]	; (8001390 <SystemInit+0x28>)
 800137e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001382:	609a      	str	r2, [r3, #8]
#endif
}
 8001384:	bf00      	nop
 8001386:	46bd      	mov	sp, r7
 8001388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800138c:	4770      	bx	lr
 800138e:	bf00      	nop
 8001390:	e000ed00 	.word	0xe000ed00

08001394 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8001394:	f8df d034 	ldr.w	sp, [pc, #52]	; 80013cc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8001398:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800139a:	e003      	b.n	80013a4 <LoopCopyDataInit>

0800139c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800139c:	4b0c      	ldr	r3, [pc, #48]	; (80013d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800139e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80013a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80013a2:	3104      	adds	r1, #4

080013a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80013a4:	480b      	ldr	r0, [pc, #44]	; (80013d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80013a6:	4b0c      	ldr	r3, [pc, #48]	; (80013d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80013a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80013aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80013ac:	d3f6      	bcc.n	800139c <CopyDataInit>
  ldr  r2, =_sbss
 80013ae:	4a0b      	ldr	r2, [pc, #44]	; (80013dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80013b0:	e002      	b.n	80013b8 <LoopFillZerobss>

080013b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80013b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80013b4:	f842 3b04 	str.w	r3, [r2], #4

080013b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80013b8:	4b09      	ldr	r3, [pc, #36]	; (80013e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80013ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80013bc:	d3f9      	bcc.n	80013b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80013be:	f7ff ffd3 	bl	8001368 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80013c2:	f000 f817 	bl	80013f4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80013c6:	f7ff fd99 	bl	8000efc <main>
  bx  lr    
 80013ca:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 80013cc:	20020000 	.word	0x20020000
  ldr  r3, =_sidata
 80013d0:	08003750 	.word	0x08003750
  ldr  r0, =_sdata
 80013d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80013d8:	200001d0 	.word	0x200001d0
  ldr  r2, =_sbss
 80013dc:	200001d0 	.word	0x200001d0
  ldr  r3, = _ebss
 80013e0:	200011a8 	.word	0x200011a8

080013e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80013e4:	e7fe      	b.n	80013e4 <ADC_IRQHandler>
	...

080013e8 <__errno>:
 80013e8:	4b01      	ldr	r3, [pc, #4]	; (80013f0 <__errno+0x8>)
 80013ea:	6818      	ldr	r0, [r3, #0]
 80013ec:	4770      	bx	lr
 80013ee:	bf00      	nop
 80013f0:	20000000 	.word	0x20000000

080013f4 <__libc_init_array>:
 80013f4:	b570      	push	{r4, r5, r6, lr}
 80013f6:	4e0d      	ldr	r6, [pc, #52]	; (800142c <__libc_init_array+0x38>)
 80013f8:	4c0d      	ldr	r4, [pc, #52]	; (8001430 <__libc_init_array+0x3c>)
 80013fa:	1ba4      	subs	r4, r4, r6
 80013fc:	10a4      	asrs	r4, r4, #2
 80013fe:	2500      	movs	r5, #0
 8001400:	42a5      	cmp	r5, r4
 8001402:	d109      	bne.n	8001418 <__libc_init_array+0x24>
 8001404:	4e0b      	ldr	r6, [pc, #44]	; (8001434 <__libc_init_array+0x40>)
 8001406:	4c0c      	ldr	r4, [pc, #48]	; (8001438 <__libc_init_array+0x44>)
 8001408:	f002 f85e 	bl	80034c8 <_init>
 800140c:	1ba4      	subs	r4, r4, r6
 800140e:	10a4      	asrs	r4, r4, #2
 8001410:	2500      	movs	r5, #0
 8001412:	42a5      	cmp	r5, r4
 8001414:	d105      	bne.n	8001422 <__libc_init_array+0x2e>
 8001416:	bd70      	pop	{r4, r5, r6, pc}
 8001418:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800141c:	4798      	blx	r3
 800141e:	3501      	adds	r5, #1
 8001420:	e7ee      	b.n	8001400 <__libc_init_array+0xc>
 8001422:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001426:	4798      	blx	r3
 8001428:	3501      	adds	r5, #1
 800142a:	e7f2      	b.n	8001412 <__libc_init_array+0x1e>
 800142c:	08003748 	.word	0x08003748
 8001430:	08003748 	.word	0x08003748
 8001434:	08003748 	.word	0x08003748
 8001438:	0800374c 	.word	0x0800374c

0800143c <memset>:
 800143c:	4402      	add	r2, r0
 800143e:	4603      	mov	r3, r0
 8001440:	4293      	cmp	r3, r2
 8001442:	d100      	bne.n	8001446 <memset+0xa>
 8001444:	4770      	bx	lr
 8001446:	f803 1b01 	strb.w	r1, [r3], #1
 800144a:	e7f9      	b.n	8001440 <memset+0x4>

0800144c <__cvt>:
 800144c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001450:	ec55 4b10 	vmov	r4, r5, d0
 8001454:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8001456:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800145a:	2d00      	cmp	r5, #0
 800145c:	460e      	mov	r6, r1
 800145e:	4691      	mov	r9, r2
 8001460:	4619      	mov	r1, r3
 8001462:	bfb8      	it	lt
 8001464:	4622      	movlt	r2, r4
 8001466:	462b      	mov	r3, r5
 8001468:	f027 0720 	bic.w	r7, r7, #32
 800146c:	bfbb      	ittet	lt
 800146e:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8001472:	461d      	movlt	r5, r3
 8001474:	2300      	movge	r3, #0
 8001476:	232d      	movlt	r3, #45	; 0x2d
 8001478:	bfb8      	it	lt
 800147a:	4614      	movlt	r4, r2
 800147c:	2f46      	cmp	r7, #70	; 0x46
 800147e:	700b      	strb	r3, [r1, #0]
 8001480:	d004      	beq.n	800148c <__cvt+0x40>
 8001482:	2f45      	cmp	r7, #69	; 0x45
 8001484:	d100      	bne.n	8001488 <__cvt+0x3c>
 8001486:	3601      	adds	r6, #1
 8001488:	2102      	movs	r1, #2
 800148a:	e000      	b.n	800148e <__cvt+0x42>
 800148c:	2103      	movs	r1, #3
 800148e:	ab03      	add	r3, sp, #12
 8001490:	9301      	str	r3, [sp, #4]
 8001492:	ab02      	add	r3, sp, #8
 8001494:	9300      	str	r3, [sp, #0]
 8001496:	4632      	mov	r2, r6
 8001498:	4653      	mov	r3, sl
 800149a:	ec45 4b10 	vmov	d0, r4, r5
 800149e:	f000 fcdf 	bl	8001e60 <_dtoa_r>
 80014a2:	2f47      	cmp	r7, #71	; 0x47
 80014a4:	4680      	mov	r8, r0
 80014a6:	d102      	bne.n	80014ae <__cvt+0x62>
 80014a8:	f019 0f01 	tst.w	r9, #1
 80014ac:	d026      	beq.n	80014fc <__cvt+0xb0>
 80014ae:	2f46      	cmp	r7, #70	; 0x46
 80014b0:	eb08 0906 	add.w	r9, r8, r6
 80014b4:	d111      	bne.n	80014da <__cvt+0x8e>
 80014b6:	f898 3000 	ldrb.w	r3, [r8]
 80014ba:	2b30      	cmp	r3, #48	; 0x30
 80014bc:	d10a      	bne.n	80014d4 <__cvt+0x88>
 80014be:	2200      	movs	r2, #0
 80014c0:	2300      	movs	r3, #0
 80014c2:	4620      	mov	r0, r4
 80014c4:	4629      	mov	r1, r5
 80014c6:	f7ff fb07 	bl	8000ad8 <__aeabi_dcmpeq>
 80014ca:	b918      	cbnz	r0, 80014d4 <__cvt+0x88>
 80014cc:	f1c6 0601 	rsb	r6, r6, #1
 80014d0:	f8ca 6000 	str.w	r6, [sl]
 80014d4:	f8da 3000 	ldr.w	r3, [sl]
 80014d8:	4499      	add	r9, r3
 80014da:	2200      	movs	r2, #0
 80014dc:	2300      	movs	r3, #0
 80014de:	4620      	mov	r0, r4
 80014e0:	4629      	mov	r1, r5
 80014e2:	f7ff faf9 	bl	8000ad8 <__aeabi_dcmpeq>
 80014e6:	b938      	cbnz	r0, 80014f8 <__cvt+0xac>
 80014e8:	2230      	movs	r2, #48	; 0x30
 80014ea:	9b03      	ldr	r3, [sp, #12]
 80014ec:	454b      	cmp	r3, r9
 80014ee:	d205      	bcs.n	80014fc <__cvt+0xb0>
 80014f0:	1c59      	adds	r1, r3, #1
 80014f2:	9103      	str	r1, [sp, #12]
 80014f4:	701a      	strb	r2, [r3, #0]
 80014f6:	e7f8      	b.n	80014ea <__cvt+0x9e>
 80014f8:	f8cd 900c 	str.w	r9, [sp, #12]
 80014fc:	9b03      	ldr	r3, [sp, #12]
 80014fe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001500:	eba3 0308 	sub.w	r3, r3, r8
 8001504:	4640      	mov	r0, r8
 8001506:	6013      	str	r3, [r2, #0]
 8001508:	b004      	add	sp, #16
 800150a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800150e <__exponent>:
 800150e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001510:	2900      	cmp	r1, #0
 8001512:	4604      	mov	r4, r0
 8001514:	bfba      	itte	lt
 8001516:	4249      	neglt	r1, r1
 8001518:	232d      	movlt	r3, #45	; 0x2d
 800151a:	232b      	movge	r3, #43	; 0x2b
 800151c:	2909      	cmp	r1, #9
 800151e:	f804 2b02 	strb.w	r2, [r4], #2
 8001522:	7043      	strb	r3, [r0, #1]
 8001524:	dd20      	ble.n	8001568 <__exponent+0x5a>
 8001526:	f10d 0307 	add.w	r3, sp, #7
 800152a:	461f      	mov	r7, r3
 800152c:	260a      	movs	r6, #10
 800152e:	fb91 f5f6 	sdiv	r5, r1, r6
 8001532:	fb06 1115 	mls	r1, r6, r5, r1
 8001536:	3130      	adds	r1, #48	; 0x30
 8001538:	2d09      	cmp	r5, #9
 800153a:	f803 1c01 	strb.w	r1, [r3, #-1]
 800153e:	f103 32ff 	add.w	r2, r3, #4294967295
 8001542:	4629      	mov	r1, r5
 8001544:	dc09      	bgt.n	800155a <__exponent+0x4c>
 8001546:	3130      	adds	r1, #48	; 0x30
 8001548:	3b02      	subs	r3, #2
 800154a:	f802 1c01 	strb.w	r1, [r2, #-1]
 800154e:	42bb      	cmp	r3, r7
 8001550:	4622      	mov	r2, r4
 8001552:	d304      	bcc.n	800155e <__exponent+0x50>
 8001554:	1a10      	subs	r0, r2, r0
 8001556:	b003      	add	sp, #12
 8001558:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800155a:	4613      	mov	r3, r2
 800155c:	e7e7      	b.n	800152e <__exponent+0x20>
 800155e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001562:	f804 2b01 	strb.w	r2, [r4], #1
 8001566:	e7f2      	b.n	800154e <__exponent+0x40>
 8001568:	2330      	movs	r3, #48	; 0x30
 800156a:	4419      	add	r1, r3
 800156c:	7083      	strb	r3, [r0, #2]
 800156e:	1d02      	adds	r2, r0, #4
 8001570:	70c1      	strb	r1, [r0, #3]
 8001572:	e7ef      	b.n	8001554 <__exponent+0x46>

08001574 <_printf_float>:
 8001574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001578:	b08d      	sub	sp, #52	; 0x34
 800157a:	460c      	mov	r4, r1
 800157c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8001580:	4616      	mov	r6, r2
 8001582:	461f      	mov	r7, r3
 8001584:	4605      	mov	r5, r0
 8001586:	f001 fa23 	bl	80029d0 <_localeconv_r>
 800158a:	6803      	ldr	r3, [r0, #0]
 800158c:	9304      	str	r3, [sp, #16]
 800158e:	4618      	mov	r0, r3
 8001590:	f7fe fe26 	bl	80001e0 <strlen>
 8001594:	2300      	movs	r3, #0
 8001596:	930a      	str	r3, [sp, #40]	; 0x28
 8001598:	f8d8 3000 	ldr.w	r3, [r8]
 800159c:	9005      	str	r0, [sp, #20]
 800159e:	3307      	adds	r3, #7
 80015a0:	f023 0307 	bic.w	r3, r3, #7
 80015a4:	f103 0208 	add.w	r2, r3, #8
 80015a8:	f894 a018 	ldrb.w	sl, [r4, #24]
 80015ac:	f8d4 b000 	ldr.w	fp, [r4]
 80015b0:	f8c8 2000 	str.w	r2, [r8]
 80015b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015b8:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 80015bc:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 80015c0:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 80015c4:	9307      	str	r3, [sp, #28]
 80015c6:	f8cd 8018 	str.w	r8, [sp, #24]
 80015ca:	f04f 32ff 	mov.w	r2, #4294967295
 80015ce:	4ba7      	ldr	r3, [pc, #668]	; (800186c <_printf_float+0x2f8>)
 80015d0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80015d4:	f7ff fab2 	bl	8000b3c <__aeabi_dcmpun>
 80015d8:	bb70      	cbnz	r0, 8001638 <_printf_float+0xc4>
 80015da:	f04f 32ff 	mov.w	r2, #4294967295
 80015de:	4ba3      	ldr	r3, [pc, #652]	; (800186c <_printf_float+0x2f8>)
 80015e0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80015e4:	f7ff fa8c 	bl	8000b00 <__aeabi_dcmple>
 80015e8:	bb30      	cbnz	r0, 8001638 <_printf_float+0xc4>
 80015ea:	2200      	movs	r2, #0
 80015ec:	2300      	movs	r3, #0
 80015ee:	4640      	mov	r0, r8
 80015f0:	4649      	mov	r1, r9
 80015f2:	f7ff fa7b 	bl	8000aec <__aeabi_dcmplt>
 80015f6:	b110      	cbz	r0, 80015fe <_printf_float+0x8a>
 80015f8:	232d      	movs	r3, #45	; 0x2d
 80015fa:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80015fe:	4a9c      	ldr	r2, [pc, #624]	; (8001870 <_printf_float+0x2fc>)
 8001600:	4b9c      	ldr	r3, [pc, #624]	; (8001874 <_printf_float+0x300>)
 8001602:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
 8001606:	bf8c      	ite	hi
 8001608:	4690      	movhi	r8, r2
 800160a:	4698      	movls	r8, r3
 800160c:	2303      	movs	r3, #3
 800160e:	f02b 0204 	bic.w	r2, fp, #4
 8001612:	6123      	str	r3, [r4, #16]
 8001614:	6022      	str	r2, [r4, #0]
 8001616:	f04f 0900 	mov.w	r9, #0
 800161a:	9700      	str	r7, [sp, #0]
 800161c:	4633      	mov	r3, r6
 800161e:	aa0b      	add	r2, sp, #44	; 0x2c
 8001620:	4621      	mov	r1, r4
 8001622:	4628      	mov	r0, r5
 8001624:	f000 f9e6 	bl	80019f4 <_printf_common>
 8001628:	3001      	adds	r0, #1
 800162a:	f040 808d 	bne.w	8001748 <_printf_float+0x1d4>
 800162e:	f04f 30ff 	mov.w	r0, #4294967295
 8001632:	b00d      	add	sp, #52	; 0x34
 8001634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001638:	4642      	mov	r2, r8
 800163a:	464b      	mov	r3, r9
 800163c:	4640      	mov	r0, r8
 800163e:	4649      	mov	r1, r9
 8001640:	f7ff fa7c 	bl	8000b3c <__aeabi_dcmpun>
 8001644:	b110      	cbz	r0, 800164c <_printf_float+0xd8>
 8001646:	4a8c      	ldr	r2, [pc, #560]	; (8001878 <_printf_float+0x304>)
 8001648:	4b8c      	ldr	r3, [pc, #560]	; (800187c <_printf_float+0x308>)
 800164a:	e7da      	b.n	8001602 <_printf_float+0x8e>
 800164c:	6861      	ldr	r1, [r4, #4]
 800164e:	1c4b      	adds	r3, r1, #1
 8001650:	f44b 6280 	orr.w	r2, fp, #1024	; 0x400
 8001654:	a80a      	add	r0, sp, #40	; 0x28
 8001656:	d13e      	bne.n	80016d6 <_printf_float+0x162>
 8001658:	2306      	movs	r3, #6
 800165a:	6063      	str	r3, [r4, #4]
 800165c:	2300      	movs	r3, #0
 800165e:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8001662:	ab09      	add	r3, sp, #36	; 0x24
 8001664:	9300      	str	r3, [sp, #0]
 8001666:	ec49 8b10 	vmov	d0, r8, r9
 800166a:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 800166e:	6022      	str	r2, [r4, #0]
 8001670:	f8cd a004 	str.w	sl, [sp, #4]
 8001674:	6861      	ldr	r1, [r4, #4]
 8001676:	4628      	mov	r0, r5
 8001678:	f7ff fee8 	bl	800144c <__cvt>
 800167c:	f00a 03df 	and.w	r3, sl, #223	; 0xdf
 8001680:	2b47      	cmp	r3, #71	; 0x47
 8001682:	4680      	mov	r8, r0
 8001684:	d109      	bne.n	800169a <_printf_float+0x126>
 8001686:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001688:	1cd8      	adds	r0, r3, #3
 800168a:	db02      	blt.n	8001692 <_printf_float+0x11e>
 800168c:	6862      	ldr	r2, [r4, #4]
 800168e:	4293      	cmp	r3, r2
 8001690:	dd47      	ble.n	8001722 <_printf_float+0x1ae>
 8001692:	f1aa 0a02 	sub.w	sl, sl, #2
 8001696:	fa5f fa8a 	uxtb.w	sl, sl
 800169a:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
 800169e:	9909      	ldr	r1, [sp, #36]	; 0x24
 80016a0:	d824      	bhi.n	80016ec <_printf_float+0x178>
 80016a2:	3901      	subs	r1, #1
 80016a4:	4652      	mov	r2, sl
 80016a6:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80016aa:	9109      	str	r1, [sp, #36]	; 0x24
 80016ac:	f7ff ff2f 	bl	800150e <__exponent>
 80016b0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80016b2:	1813      	adds	r3, r2, r0
 80016b4:	2a01      	cmp	r2, #1
 80016b6:	4681      	mov	r9, r0
 80016b8:	6123      	str	r3, [r4, #16]
 80016ba:	dc02      	bgt.n	80016c2 <_printf_float+0x14e>
 80016bc:	6822      	ldr	r2, [r4, #0]
 80016be:	07d1      	lsls	r1, r2, #31
 80016c0:	d501      	bpl.n	80016c6 <_printf_float+0x152>
 80016c2:	3301      	adds	r3, #1
 80016c4:	6123      	str	r3, [r4, #16]
 80016c6:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 80016ca:	2b00      	cmp	r3, #0
 80016cc:	d0a5      	beq.n	800161a <_printf_float+0xa6>
 80016ce:	232d      	movs	r3, #45	; 0x2d
 80016d0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80016d4:	e7a1      	b.n	800161a <_printf_float+0xa6>
 80016d6:	f1ba 0f67 	cmp.w	sl, #103	; 0x67
 80016da:	f000 8177 	beq.w	80019cc <_printf_float+0x458>
 80016de:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
 80016e2:	d1bb      	bne.n	800165c <_printf_float+0xe8>
 80016e4:	2900      	cmp	r1, #0
 80016e6:	d1b9      	bne.n	800165c <_printf_float+0xe8>
 80016e8:	2301      	movs	r3, #1
 80016ea:	e7b6      	b.n	800165a <_printf_float+0xe6>
 80016ec:	f1ba 0f66 	cmp.w	sl, #102	; 0x66
 80016f0:	d119      	bne.n	8001726 <_printf_float+0x1b2>
 80016f2:	2900      	cmp	r1, #0
 80016f4:	6863      	ldr	r3, [r4, #4]
 80016f6:	dd0c      	ble.n	8001712 <_printf_float+0x19e>
 80016f8:	6121      	str	r1, [r4, #16]
 80016fa:	b913      	cbnz	r3, 8001702 <_printf_float+0x18e>
 80016fc:	6822      	ldr	r2, [r4, #0]
 80016fe:	07d2      	lsls	r2, r2, #31
 8001700:	d502      	bpl.n	8001708 <_printf_float+0x194>
 8001702:	3301      	adds	r3, #1
 8001704:	440b      	add	r3, r1
 8001706:	6123      	str	r3, [r4, #16]
 8001708:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800170a:	65a3      	str	r3, [r4, #88]	; 0x58
 800170c:	f04f 0900 	mov.w	r9, #0
 8001710:	e7d9      	b.n	80016c6 <_printf_float+0x152>
 8001712:	b913      	cbnz	r3, 800171a <_printf_float+0x1a6>
 8001714:	6822      	ldr	r2, [r4, #0]
 8001716:	07d0      	lsls	r0, r2, #31
 8001718:	d501      	bpl.n	800171e <_printf_float+0x1aa>
 800171a:	3302      	adds	r3, #2
 800171c:	e7f3      	b.n	8001706 <_printf_float+0x192>
 800171e:	2301      	movs	r3, #1
 8001720:	e7f1      	b.n	8001706 <_printf_float+0x192>
 8001722:	f04f 0a67 	mov.w	sl, #103	; 0x67
 8001726:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 800172a:	4293      	cmp	r3, r2
 800172c:	db05      	blt.n	800173a <_printf_float+0x1c6>
 800172e:	6822      	ldr	r2, [r4, #0]
 8001730:	6123      	str	r3, [r4, #16]
 8001732:	07d1      	lsls	r1, r2, #31
 8001734:	d5e8      	bpl.n	8001708 <_printf_float+0x194>
 8001736:	3301      	adds	r3, #1
 8001738:	e7e5      	b.n	8001706 <_printf_float+0x192>
 800173a:	2b00      	cmp	r3, #0
 800173c:	bfd4      	ite	le
 800173e:	f1c3 0302 	rsble	r3, r3, #2
 8001742:	2301      	movgt	r3, #1
 8001744:	4413      	add	r3, r2
 8001746:	e7de      	b.n	8001706 <_printf_float+0x192>
 8001748:	6823      	ldr	r3, [r4, #0]
 800174a:	055a      	lsls	r2, r3, #21
 800174c:	d407      	bmi.n	800175e <_printf_float+0x1ea>
 800174e:	6923      	ldr	r3, [r4, #16]
 8001750:	4642      	mov	r2, r8
 8001752:	4631      	mov	r1, r6
 8001754:	4628      	mov	r0, r5
 8001756:	47b8      	blx	r7
 8001758:	3001      	adds	r0, #1
 800175a:	d12b      	bne.n	80017b4 <_printf_float+0x240>
 800175c:	e767      	b.n	800162e <_printf_float+0xba>
 800175e:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
 8001762:	f240 80dc 	bls.w	800191e <_printf_float+0x3aa>
 8001766:	2200      	movs	r2, #0
 8001768:	2300      	movs	r3, #0
 800176a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800176e:	f7ff f9b3 	bl	8000ad8 <__aeabi_dcmpeq>
 8001772:	2800      	cmp	r0, #0
 8001774:	d033      	beq.n	80017de <_printf_float+0x26a>
 8001776:	2301      	movs	r3, #1
 8001778:	4a41      	ldr	r2, [pc, #260]	; (8001880 <_printf_float+0x30c>)
 800177a:	4631      	mov	r1, r6
 800177c:	4628      	mov	r0, r5
 800177e:	47b8      	blx	r7
 8001780:	3001      	adds	r0, #1
 8001782:	f43f af54 	beq.w	800162e <_printf_float+0xba>
 8001786:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800178a:	429a      	cmp	r2, r3
 800178c:	db02      	blt.n	8001794 <_printf_float+0x220>
 800178e:	6823      	ldr	r3, [r4, #0]
 8001790:	07d8      	lsls	r0, r3, #31
 8001792:	d50f      	bpl.n	80017b4 <_printf_float+0x240>
 8001794:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001798:	4631      	mov	r1, r6
 800179a:	4628      	mov	r0, r5
 800179c:	47b8      	blx	r7
 800179e:	3001      	adds	r0, #1
 80017a0:	f43f af45 	beq.w	800162e <_printf_float+0xba>
 80017a4:	f04f 0800 	mov.w	r8, #0
 80017a8:	f104 091a 	add.w	r9, r4, #26
 80017ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80017ae:	3b01      	subs	r3, #1
 80017b0:	4543      	cmp	r3, r8
 80017b2:	dc09      	bgt.n	80017c8 <_printf_float+0x254>
 80017b4:	6823      	ldr	r3, [r4, #0]
 80017b6:	079b      	lsls	r3, r3, #30
 80017b8:	f100 8103 	bmi.w	80019c2 <_printf_float+0x44e>
 80017bc:	68e0      	ldr	r0, [r4, #12]
 80017be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80017c0:	4298      	cmp	r0, r3
 80017c2:	bfb8      	it	lt
 80017c4:	4618      	movlt	r0, r3
 80017c6:	e734      	b.n	8001632 <_printf_float+0xbe>
 80017c8:	2301      	movs	r3, #1
 80017ca:	464a      	mov	r2, r9
 80017cc:	4631      	mov	r1, r6
 80017ce:	4628      	mov	r0, r5
 80017d0:	47b8      	blx	r7
 80017d2:	3001      	adds	r0, #1
 80017d4:	f43f af2b 	beq.w	800162e <_printf_float+0xba>
 80017d8:	f108 0801 	add.w	r8, r8, #1
 80017dc:	e7e6      	b.n	80017ac <_printf_float+0x238>
 80017de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80017e0:	2b00      	cmp	r3, #0
 80017e2:	dc2b      	bgt.n	800183c <_printf_float+0x2c8>
 80017e4:	2301      	movs	r3, #1
 80017e6:	4a26      	ldr	r2, [pc, #152]	; (8001880 <_printf_float+0x30c>)
 80017e8:	4631      	mov	r1, r6
 80017ea:	4628      	mov	r0, r5
 80017ec:	47b8      	blx	r7
 80017ee:	3001      	adds	r0, #1
 80017f0:	f43f af1d 	beq.w	800162e <_printf_float+0xba>
 80017f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80017f6:	b923      	cbnz	r3, 8001802 <_printf_float+0x28e>
 80017f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80017fa:	b913      	cbnz	r3, 8001802 <_printf_float+0x28e>
 80017fc:	6823      	ldr	r3, [r4, #0]
 80017fe:	07d9      	lsls	r1, r3, #31
 8001800:	d5d8      	bpl.n	80017b4 <_printf_float+0x240>
 8001802:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001806:	4631      	mov	r1, r6
 8001808:	4628      	mov	r0, r5
 800180a:	47b8      	blx	r7
 800180c:	3001      	adds	r0, #1
 800180e:	f43f af0e 	beq.w	800162e <_printf_float+0xba>
 8001812:	f04f 0900 	mov.w	r9, #0
 8001816:	f104 0a1a 	add.w	sl, r4, #26
 800181a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800181c:	425b      	negs	r3, r3
 800181e:	454b      	cmp	r3, r9
 8001820:	dc01      	bgt.n	8001826 <_printf_float+0x2b2>
 8001822:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001824:	e794      	b.n	8001750 <_printf_float+0x1dc>
 8001826:	2301      	movs	r3, #1
 8001828:	4652      	mov	r2, sl
 800182a:	4631      	mov	r1, r6
 800182c:	4628      	mov	r0, r5
 800182e:	47b8      	blx	r7
 8001830:	3001      	adds	r0, #1
 8001832:	f43f aefc 	beq.w	800162e <_printf_float+0xba>
 8001836:	f109 0901 	add.w	r9, r9, #1
 800183a:	e7ee      	b.n	800181a <_printf_float+0x2a6>
 800183c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800183e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001840:	429a      	cmp	r2, r3
 8001842:	bfa8      	it	ge
 8001844:	461a      	movge	r2, r3
 8001846:	2a00      	cmp	r2, #0
 8001848:	4691      	mov	r9, r2
 800184a:	dd07      	ble.n	800185c <_printf_float+0x2e8>
 800184c:	4613      	mov	r3, r2
 800184e:	4631      	mov	r1, r6
 8001850:	4642      	mov	r2, r8
 8001852:	4628      	mov	r0, r5
 8001854:	47b8      	blx	r7
 8001856:	3001      	adds	r0, #1
 8001858:	f43f aee9 	beq.w	800162e <_printf_float+0xba>
 800185c:	f104 031a 	add.w	r3, r4, #26
 8001860:	f04f 0b00 	mov.w	fp, #0
 8001864:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001868:	9306      	str	r3, [sp, #24]
 800186a:	e015      	b.n	8001898 <_printf_float+0x324>
 800186c:	7fefffff 	.word	0x7fefffff
 8001870:	080034ec 	.word	0x080034ec
 8001874:	080034e8 	.word	0x080034e8
 8001878:	080034f4 	.word	0x080034f4
 800187c:	080034f0 	.word	0x080034f0
 8001880:	080034f8 	.word	0x080034f8
 8001884:	2301      	movs	r3, #1
 8001886:	9a06      	ldr	r2, [sp, #24]
 8001888:	4631      	mov	r1, r6
 800188a:	4628      	mov	r0, r5
 800188c:	47b8      	blx	r7
 800188e:	3001      	adds	r0, #1
 8001890:	f43f aecd 	beq.w	800162e <_printf_float+0xba>
 8001894:	f10b 0b01 	add.w	fp, fp, #1
 8001898:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 800189c:	ebaa 0309 	sub.w	r3, sl, r9
 80018a0:	455b      	cmp	r3, fp
 80018a2:	dcef      	bgt.n	8001884 <_printf_float+0x310>
 80018a4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80018a8:	429a      	cmp	r2, r3
 80018aa:	44d0      	add	r8, sl
 80018ac:	db15      	blt.n	80018da <_printf_float+0x366>
 80018ae:	6823      	ldr	r3, [r4, #0]
 80018b0:	07da      	lsls	r2, r3, #31
 80018b2:	d412      	bmi.n	80018da <_printf_float+0x366>
 80018b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80018b6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80018b8:	eba3 020a 	sub.w	r2, r3, sl
 80018bc:	eba3 0a01 	sub.w	sl, r3, r1
 80018c0:	4592      	cmp	sl, r2
 80018c2:	bfa8      	it	ge
 80018c4:	4692      	movge	sl, r2
 80018c6:	f1ba 0f00 	cmp.w	sl, #0
 80018ca:	dc0e      	bgt.n	80018ea <_printf_float+0x376>
 80018cc:	f04f 0800 	mov.w	r8, #0
 80018d0:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80018d4:	f104 091a 	add.w	r9, r4, #26
 80018d8:	e019      	b.n	800190e <_printf_float+0x39a>
 80018da:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80018de:	4631      	mov	r1, r6
 80018e0:	4628      	mov	r0, r5
 80018e2:	47b8      	blx	r7
 80018e4:	3001      	adds	r0, #1
 80018e6:	d1e5      	bne.n	80018b4 <_printf_float+0x340>
 80018e8:	e6a1      	b.n	800162e <_printf_float+0xba>
 80018ea:	4653      	mov	r3, sl
 80018ec:	4642      	mov	r2, r8
 80018ee:	4631      	mov	r1, r6
 80018f0:	4628      	mov	r0, r5
 80018f2:	47b8      	blx	r7
 80018f4:	3001      	adds	r0, #1
 80018f6:	d1e9      	bne.n	80018cc <_printf_float+0x358>
 80018f8:	e699      	b.n	800162e <_printf_float+0xba>
 80018fa:	2301      	movs	r3, #1
 80018fc:	464a      	mov	r2, r9
 80018fe:	4631      	mov	r1, r6
 8001900:	4628      	mov	r0, r5
 8001902:	47b8      	blx	r7
 8001904:	3001      	adds	r0, #1
 8001906:	f43f ae92 	beq.w	800162e <_printf_float+0xba>
 800190a:	f108 0801 	add.w	r8, r8, #1
 800190e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001912:	1a9b      	subs	r3, r3, r2
 8001914:	eba3 030a 	sub.w	r3, r3, sl
 8001918:	4543      	cmp	r3, r8
 800191a:	dcee      	bgt.n	80018fa <_printf_float+0x386>
 800191c:	e74a      	b.n	80017b4 <_printf_float+0x240>
 800191e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001920:	2a01      	cmp	r2, #1
 8001922:	dc01      	bgt.n	8001928 <_printf_float+0x3b4>
 8001924:	07db      	lsls	r3, r3, #31
 8001926:	d53a      	bpl.n	800199e <_printf_float+0x42a>
 8001928:	2301      	movs	r3, #1
 800192a:	4642      	mov	r2, r8
 800192c:	4631      	mov	r1, r6
 800192e:	4628      	mov	r0, r5
 8001930:	47b8      	blx	r7
 8001932:	3001      	adds	r0, #1
 8001934:	f43f ae7b 	beq.w	800162e <_printf_float+0xba>
 8001938:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800193c:	4631      	mov	r1, r6
 800193e:	4628      	mov	r0, r5
 8001940:	47b8      	blx	r7
 8001942:	3001      	adds	r0, #1
 8001944:	f108 0801 	add.w	r8, r8, #1
 8001948:	f43f ae71 	beq.w	800162e <_printf_float+0xba>
 800194c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800194e:	2200      	movs	r2, #0
 8001950:	f103 3aff 	add.w	sl, r3, #4294967295
 8001954:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001958:	2300      	movs	r3, #0
 800195a:	f7ff f8bd 	bl	8000ad8 <__aeabi_dcmpeq>
 800195e:	b9c8      	cbnz	r0, 8001994 <_printf_float+0x420>
 8001960:	4653      	mov	r3, sl
 8001962:	4642      	mov	r2, r8
 8001964:	4631      	mov	r1, r6
 8001966:	4628      	mov	r0, r5
 8001968:	47b8      	blx	r7
 800196a:	3001      	adds	r0, #1
 800196c:	d10e      	bne.n	800198c <_printf_float+0x418>
 800196e:	e65e      	b.n	800162e <_printf_float+0xba>
 8001970:	2301      	movs	r3, #1
 8001972:	4652      	mov	r2, sl
 8001974:	4631      	mov	r1, r6
 8001976:	4628      	mov	r0, r5
 8001978:	47b8      	blx	r7
 800197a:	3001      	adds	r0, #1
 800197c:	f43f ae57 	beq.w	800162e <_printf_float+0xba>
 8001980:	f108 0801 	add.w	r8, r8, #1
 8001984:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001986:	3b01      	subs	r3, #1
 8001988:	4543      	cmp	r3, r8
 800198a:	dcf1      	bgt.n	8001970 <_printf_float+0x3fc>
 800198c:	464b      	mov	r3, r9
 800198e:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001992:	e6de      	b.n	8001752 <_printf_float+0x1de>
 8001994:	f04f 0800 	mov.w	r8, #0
 8001998:	f104 0a1a 	add.w	sl, r4, #26
 800199c:	e7f2      	b.n	8001984 <_printf_float+0x410>
 800199e:	2301      	movs	r3, #1
 80019a0:	e7df      	b.n	8001962 <_printf_float+0x3ee>
 80019a2:	2301      	movs	r3, #1
 80019a4:	464a      	mov	r2, r9
 80019a6:	4631      	mov	r1, r6
 80019a8:	4628      	mov	r0, r5
 80019aa:	47b8      	blx	r7
 80019ac:	3001      	adds	r0, #1
 80019ae:	f43f ae3e 	beq.w	800162e <_printf_float+0xba>
 80019b2:	f108 0801 	add.w	r8, r8, #1
 80019b6:	68e3      	ldr	r3, [r4, #12]
 80019b8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80019ba:	1a9b      	subs	r3, r3, r2
 80019bc:	4543      	cmp	r3, r8
 80019be:	dcf0      	bgt.n	80019a2 <_printf_float+0x42e>
 80019c0:	e6fc      	b.n	80017bc <_printf_float+0x248>
 80019c2:	f04f 0800 	mov.w	r8, #0
 80019c6:	f104 0919 	add.w	r9, r4, #25
 80019ca:	e7f4      	b.n	80019b6 <_printf_float+0x442>
 80019cc:	2900      	cmp	r1, #0
 80019ce:	f43f ae8b 	beq.w	80016e8 <_printf_float+0x174>
 80019d2:	2300      	movs	r3, #0
 80019d4:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80019d8:	ab09      	add	r3, sp, #36	; 0x24
 80019da:	9300      	str	r3, [sp, #0]
 80019dc:	ec49 8b10 	vmov	d0, r8, r9
 80019e0:	6022      	str	r2, [r4, #0]
 80019e2:	f8cd a004 	str.w	sl, [sp, #4]
 80019e6:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 80019ea:	4628      	mov	r0, r5
 80019ec:	f7ff fd2e 	bl	800144c <__cvt>
 80019f0:	4680      	mov	r8, r0
 80019f2:	e648      	b.n	8001686 <_printf_float+0x112>

080019f4 <_printf_common>:
 80019f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80019f8:	4691      	mov	r9, r2
 80019fa:	461f      	mov	r7, r3
 80019fc:	688a      	ldr	r2, [r1, #8]
 80019fe:	690b      	ldr	r3, [r1, #16]
 8001a00:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001a04:	4293      	cmp	r3, r2
 8001a06:	bfb8      	it	lt
 8001a08:	4613      	movlt	r3, r2
 8001a0a:	f8c9 3000 	str.w	r3, [r9]
 8001a0e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001a12:	4606      	mov	r6, r0
 8001a14:	460c      	mov	r4, r1
 8001a16:	b112      	cbz	r2, 8001a1e <_printf_common+0x2a>
 8001a18:	3301      	adds	r3, #1
 8001a1a:	f8c9 3000 	str.w	r3, [r9]
 8001a1e:	6823      	ldr	r3, [r4, #0]
 8001a20:	0699      	lsls	r1, r3, #26
 8001a22:	bf42      	ittt	mi
 8001a24:	f8d9 3000 	ldrmi.w	r3, [r9]
 8001a28:	3302      	addmi	r3, #2
 8001a2a:	f8c9 3000 	strmi.w	r3, [r9]
 8001a2e:	6825      	ldr	r5, [r4, #0]
 8001a30:	f015 0506 	ands.w	r5, r5, #6
 8001a34:	d107      	bne.n	8001a46 <_printf_common+0x52>
 8001a36:	f104 0a19 	add.w	sl, r4, #25
 8001a3a:	68e3      	ldr	r3, [r4, #12]
 8001a3c:	f8d9 2000 	ldr.w	r2, [r9]
 8001a40:	1a9b      	subs	r3, r3, r2
 8001a42:	42ab      	cmp	r3, r5
 8001a44:	dc28      	bgt.n	8001a98 <_printf_common+0xa4>
 8001a46:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8001a4a:	6822      	ldr	r2, [r4, #0]
 8001a4c:	3300      	adds	r3, #0
 8001a4e:	bf18      	it	ne
 8001a50:	2301      	movne	r3, #1
 8001a52:	0692      	lsls	r2, r2, #26
 8001a54:	d42d      	bmi.n	8001ab2 <_printf_common+0xbe>
 8001a56:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001a5a:	4639      	mov	r1, r7
 8001a5c:	4630      	mov	r0, r6
 8001a5e:	47c0      	blx	r8
 8001a60:	3001      	adds	r0, #1
 8001a62:	d020      	beq.n	8001aa6 <_printf_common+0xb2>
 8001a64:	6823      	ldr	r3, [r4, #0]
 8001a66:	68e5      	ldr	r5, [r4, #12]
 8001a68:	f8d9 2000 	ldr.w	r2, [r9]
 8001a6c:	f003 0306 	and.w	r3, r3, #6
 8001a70:	2b04      	cmp	r3, #4
 8001a72:	bf08      	it	eq
 8001a74:	1aad      	subeq	r5, r5, r2
 8001a76:	68a3      	ldr	r3, [r4, #8]
 8001a78:	6922      	ldr	r2, [r4, #16]
 8001a7a:	bf0c      	ite	eq
 8001a7c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001a80:	2500      	movne	r5, #0
 8001a82:	4293      	cmp	r3, r2
 8001a84:	bfc4      	itt	gt
 8001a86:	1a9b      	subgt	r3, r3, r2
 8001a88:	18ed      	addgt	r5, r5, r3
 8001a8a:	f04f 0900 	mov.w	r9, #0
 8001a8e:	341a      	adds	r4, #26
 8001a90:	454d      	cmp	r5, r9
 8001a92:	d11a      	bne.n	8001aca <_printf_common+0xd6>
 8001a94:	2000      	movs	r0, #0
 8001a96:	e008      	b.n	8001aaa <_printf_common+0xb6>
 8001a98:	2301      	movs	r3, #1
 8001a9a:	4652      	mov	r2, sl
 8001a9c:	4639      	mov	r1, r7
 8001a9e:	4630      	mov	r0, r6
 8001aa0:	47c0      	blx	r8
 8001aa2:	3001      	adds	r0, #1
 8001aa4:	d103      	bne.n	8001aae <_printf_common+0xba>
 8001aa6:	f04f 30ff 	mov.w	r0, #4294967295
 8001aaa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001aae:	3501      	adds	r5, #1
 8001ab0:	e7c3      	b.n	8001a3a <_printf_common+0x46>
 8001ab2:	18e1      	adds	r1, r4, r3
 8001ab4:	1c5a      	adds	r2, r3, #1
 8001ab6:	2030      	movs	r0, #48	; 0x30
 8001ab8:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001abc:	4422      	add	r2, r4
 8001abe:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001ac2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001ac6:	3302      	adds	r3, #2
 8001ac8:	e7c5      	b.n	8001a56 <_printf_common+0x62>
 8001aca:	2301      	movs	r3, #1
 8001acc:	4622      	mov	r2, r4
 8001ace:	4639      	mov	r1, r7
 8001ad0:	4630      	mov	r0, r6
 8001ad2:	47c0      	blx	r8
 8001ad4:	3001      	adds	r0, #1
 8001ad6:	d0e6      	beq.n	8001aa6 <_printf_common+0xb2>
 8001ad8:	f109 0901 	add.w	r9, r9, #1
 8001adc:	e7d8      	b.n	8001a90 <_printf_common+0x9c>
	...

08001ae0 <_printf_i>:
 8001ae0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001ae4:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8001ae8:	460c      	mov	r4, r1
 8001aea:	7e09      	ldrb	r1, [r1, #24]
 8001aec:	b085      	sub	sp, #20
 8001aee:	296e      	cmp	r1, #110	; 0x6e
 8001af0:	4617      	mov	r7, r2
 8001af2:	4606      	mov	r6, r0
 8001af4:	4698      	mov	r8, r3
 8001af6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001af8:	f000 80b3 	beq.w	8001c62 <_printf_i+0x182>
 8001afc:	d822      	bhi.n	8001b44 <_printf_i+0x64>
 8001afe:	2963      	cmp	r1, #99	; 0x63
 8001b00:	d036      	beq.n	8001b70 <_printf_i+0x90>
 8001b02:	d80a      	bhi.n	8001b1a <_printf_i+0x3a>
 8001b04:	2900      	cmp	r1, #0
 8001b06:	f000 80b9 	beq.w	8001c7c <_printf_i+0x19c>
 8001b0a:	2958      	cmp	r1, #88	; 0x58
 8001b0c:	f000 8083 	beq.w	8001c16 <_printf_i+0x136>
 8001b10:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001b14:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8001b18:	e032      	b.n	8001b80 <_printf_i+0xa0>
 8001b1a:	2964      	cmp	r1, #100	; 0x64
 8001b1c:	d001      	beq.n	8001b22 <_printf_i+0x42>
 8001b1e:	2969      	cmp	r1, #105	; 0x69
 8001b20:	d1f6      	bne.n	8001b10 <_printf_i+0x30>
 8001b22:	6820      	ldr	r0, [r4, #0]
 8001b24:	6813      	ldr	r3, [r2, #0]
 8001b26:	0605      	lsls	r5, r0, #24
 8001b28:	f103 0104 	add.w	r1, r3, #4
 8001b2c:	d52a      	bpl.n	8001b84 <_printf_i+0xa4>
 8001b2e:	681b      	ldr	r3, [r3, #0]
 8001b30:	6011      	str	r1, [r2, #0]
 8001b32:	2b00      	cmp	r3, #0
 8001b34:	da03      	bge.n	8001b3e <_printf_i+0x5e>
 8001b36:	222d      	movs	r2, #45	; 0x2d
 8001b38:	425b      	negs	r3, r3
 8001b3a:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8001b3e:	486f      	ldr	r0, [pc, #444]	; (8001cfc <_printf_i+0x21c>)
 8001b40:	220a      	movs	r2, #10
 8001b42:	e039      	b.n	8001bb8 <_printf_i+0xd8>
 8001b44:	2973      	cmp	r1, #115	; 0x73
 8001b46:	f000 809d 	beq.w	8001c84 <_printf_i+0x1a4>
 8001b4a:	d808      	bhi.n	8001b5e <_printf_i+0x7e>
 8001b4c:	296f      	cmp	r1, #111	; 0x6f
 8001b4e:	d020      	beq.n	8001b92 <_printf_i+0xb2>
 8001b50:	2970      	cmp	r1, #112	; 0x70
 8001b52:	d1dd      	bne.n	8001b10 <_printf_i+0x30>
 8001b54:	6823      	ldr	r3, [r4, #0]
 8001b56:	f043 0320 	orr.w	r3, r3, #32
 8001b5a:	6023      	str	r3, [r4, #0]
 8001b5c:	e003      	b.n	8001b66 <_printf_i+0x86>
 8001b5e:	2975      	cmp	r1, #117	; 0x75
 8001b60:	d017      	beq.n	8001b92 <_printf_i+0xb2>
 8001b62:	2978      	cmp	r1, #120	; 0x78
 8001b64:	d1d4      	bne.n	8001b10 <_printf_i+0x30>
 8001b66:	2378      	movs	r3, #120	; 0x78
 8001b68:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001b6c:	4864      	ldr	r0, [pc, #400]	; (8001d00 <_printf_i+0x220>)
 8001b6e:	e055      	b.n	8001c1c <_printf_i+0x13c>
 8001b70:	6813      	ldr	r3, [r2, #0]
 8001b72:	1d19      	adds	r1, r3, #4
 8001b74:	681b      	ldr	r3, [r3, #0]
 8001b76:	6011      	str	r1, [r2, #0]
 8001b78:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001b7c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001b80:	2301      	movs	r3, #1
 8001b82:	e08c      	b.n	8001c9e <_printf_i+0x1be>
 8001b84:	681b      	ldr	r3, [r3, #0]
 8001b86:	6011      	str	r1, [r2, #0]
 8001b88:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001b8c:	bf18      	it	ne
 8001b8e:	b21b      	sxthne	r3, r3
 8001b90:	e7cf      	b.n	8001b32 <_printf_i+0x52>
 8001b92:	6813      	ldr	r3, [r2, #0]
 8001b94:	6825      	ldr	r5, [r4, #0]
 8001b96:	1d18      	adds	r0, r3, #4
 8001b98:	6010      	str	r0, [r2, #0]
 8001b9a:	0628      	lsls	r0, r5, #24
 8001b9c:	d501      	bpl.n	8001ba2 <_printf_i+0xc2>
 8001b9e:	681b      	ldr	r3, [r3, #0]
 8001ba0:	e002      	b.n	8001ba8 <_printf_i+0xc8>
 8001ba2:	0668      	lsls	r0, r5, #25
 8001ba4:	d5fb      	bpl.n	8001b9e <_printf_i+0xbe>
 8001ba6:	881b      	ldrh	r3, [r3, #0]
 8001ba8:	4854      	ldr	r0, [pc, #336]	; (8001cfc <_printf_i+0x21c>)
 8001baa:	296f      	cmp	r1, #111	; 0x6f
 8001bac:	bf14      	ite	ne
 8001bae:	220a      	movne	r2, #10
 8001bb0:	2208      	moveq	r2, #8
 8001bb2:	2100      	movs	r1, #0
 8001bb4:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001bb8:	6865      	ldr	r5, [r4, #4]
 8001bba:	60a5      	str	r5, [r4, #8]
 8001bbc:	2d00      	cmp	r5, #0
 8001bbe:	f2c0 8095 	blt.w	8001cec <_printf_i+0x20c>
 8001bc2:	6821      	ldr	r1, [r4, #0]
 8001bc4:	f021 0104 	bic.w	r1, r1, #4
 8001bc8:	6021      	str	r1, [r4, #0]
 8001bca:	2b00      	cmp	r3, #0
 8001bcc:	d13d      	bne.n	8001c4a <_printf_i+0x16a>
 8001bce:	2d00      	cmp	r5, #0
 8001bd0:	f040 808e 	bne.w	8001cf0 <_printf_i+0x210>
 8001bd4:	4665      	mov	r5, ip
 8001bd6:	2a08      	cmp	r2, #8
 8001bd8:	d10b      	bne.n	8001bf2 <_printf_i+0x112>
 8001bda:	6823      	ldr	r3, [r4, #0]
 8001bdc:	07db      	lsls	r3, r3, #31
 8001bde:	d508      	bpl.n	8001bf2 <_printf_i+0x112>
 8001be0:	6923      	ldr	r3, [r4, #16]
 8001be2:	6862      	ldr	r2, [r4, #4]
 8001be4:	429a      	cmp	r2, r3
 8001be6:	bfde      	ittt	le
 8001be8:	2330      	movle	r3, #48	; 0x30
 8001bea:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001bee:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001bf2:	ebac 0305 	sub.w	r3, ip, r5
 8001bf6:	6123      	str	r3, [r4, #16]
 8001bf8:	f8cd 8000 	str.w	r8, [sp]
 8001bfc:	463b      	mov	r3, r7
 8001bfe:	aa03      	add	r2, sp, #12
 8001c00:	4621      	mov	r1, r4
 8001c02:	4630      	mov	r0, r6
 8001c04:	f7ff fef6 	bl	80019f4 <_printf_common>
 8001c08:	3001      	adds	r0, #1
 8001c0a:	d14d      	bne.n	8001ca8 <_printf_i+0x1c8>
 8001c0c:	f04f 30ff 	mov.w	r0, #4294967295
 8001c10:	b005      	add	sp, #20
 8001c12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001c16:	4839      	ldr	r0, [pc, #228]	; (8001cfc <_printf_i+0x21c>)
 8001c18:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8001c1c:	6813      	ldr	r3, [r2, #0]
 8001c1e:	6821      	ldr	r1, [r4, #0]
 8001c20:	1d1d      	adds	r5, r3, #4
 8001c22:	681b      	ldr	r3, [r3, #0]
 8001c24:	6015      	str	r5, [r2, #0]
 8001c26:	060a      	lsls	r2, r1, #24
 8001c28:	d50b      	bpl.n	8001c42 <_printf_i+0x162>
 8001c2a:	07ca      	lsls	r2, r1, #31
 8001c2c:	bf44      	itt	mi
 8001c2e:	f041 0120 	orrmi.w	r1, r1, #32
 8001c32:	6021      	strmi	r1, [r4, #0]
 8001c34:	b91b      	cbnz	r3, 8001c3e <_printf_i+0x15e>
 8001c36:	6822      	ldr	r2, [r4, #0]
 8001c38:	f022 0220 	bic.w	r2, r2, #32
 8001c3c:	6022      	str	r2, [r4, #0]
 8001c3e:	2210      	movs	r2, #16
 8001c40:	e7b7      	b.n	8001bb2 <_printf_i+0xd2>
 8001c42:	064d      	lsls	r5, r1, #25
 8001c44:	bf48      	it	mi
 8001c46:	b29b      	uxthmi	r3, r3
 8001c48:	e7ef      	b.n	8001c2a <_printf_i+0x14a>
 8001c4a:	4665      	mov	r5, ip
 8001c4c:	fbb3 f1f2 	udiv	r1, r3, r2
 8001c50:	fb02 3311 	mls	r3, r2, r1, r3
 8001c54:	5cc3      	ldrb	r3, [r0, r3]
 8001c56:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8001c5a:	460b      	mov	r3, r1
 8001c5c:	2900      	cmp	r1, #0
 8001c5e:	d1f5      	bne.n	8001c4c <_printf_i+0x16c>
 8001c60:	e7b9      	b.n	8001bd6 <_printf_i+0xf6>
 8001c62:	6813      	ldr	r3, [r2, #0]
 8001c64:	6825      	ldr	r5, [r4, #0]
 8001c66:	6961      	ldr	r1, [r4, #20]
 8001c68:	1d18      	adds	r0, r3, #4
 8001c6a:	6010      	str	r0, [r2, #0]
 8001c6c:	0628      	lsls	r0, r5, #24
 8001c6e:	681b      	ldr	r3, [r3, #0]
 8001c70:	d501      	bpl.n	8001c76 <_printf_i+0x196>
 8001c72:	6019      	str	r1, [r3, #0]
 8001c74:	e002      	b.n	8001c7c <_printf_i+0x19c>
 8001c76:	066a      	lsls	r2, r5, #25
 8001c78:	d5fb      	bpl.n	8001c72 <_printf_i+0x192>
 8001c7a:	8019      	strh	r1, [r3, #0]
 8001c7c:	2300      	movs	r3, #0
 8001c7e:	6123      	str	r3, [r4, #16]
 8001c80:	4665      	mov	r5, ip
 8001c82:	e7b9      	b.n	8001bf8 <_printf_i+0x118>
 8001c84:	6813      	ldr	r3, [r2, #0]
 8001c86:	1d19      	adds	r1, r3, #4
 8001c88:	6011      	str	r1, [r2, #0]
 8001c8a:	681d      	ldr	r5, [r3, #0]
 8001c8c:	6862      	ldr	r2, [r4, #4]
 8001c8e:	2100      	movs	r1, #0
 8001c90:	4628      	mov	r0, r5
 8001c92:	f7fe faad 	bl	80001f0 <memchr>
 8001c96:	b108      	cbz	r0, 8001c9c <_printf_i+0x1bc>
 8001c98:	1b40      	subs	r0, r0, r5
 8001c9a:	6060      	str	r0, [r4, #4]
 8001c9c:	6863      	ldr	r3, [r4, #4]
 8001c9e:	6123      	str	r3, [r4, #16]
 8001ca0:	2300      	movs	r3, #0
 8001ca2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001ca6:	e7a7      	b.n	8001bf8 <_printf_i+0x118>
 8001ca8:	6923      	ldr	r3, [r4, #16]
 8001caa:	462a      	mov	r2, r5
 8001cac:	4639      	mov	r1, r7
 8001cae:	4630      	mov	r0, r6
 8001cb0:	47c0      	blx	r8
 8001cb2:	3001      	adds	r0, #1
 8001cb4:	d0aa      	beq.n	8001c0c <_printf_i+0x12c>
 8001cb6:	6823      	ldr	r3, [r4, #0]
 8001cb8:	079b      	lsls	r3, r3, #30
 8001cba:	d413      	bmi.n	8001ce4 <_printf_i+0x204>
 8001cbc:	68e0      	ldr	r0, [r4, #12]
 8001cbe:	9b03      	ldr	r3, [sp, #12]
 8001cc0:	4298      	cmp	r0, r3
 8001cc2:	bfb8      	it	lt
 8001cc4:	4618      	movlt	r0, r3
 8001cc6:	e7a3      	b.n	8001c10 <_printf_i+0x130>
 8001cc8:	2301      	movs	r3, #1
 8001cca:	464a      	mov	r2, r9
 8001ccc:	4639      	mov	r1, r7
 8001cce:	4630      	mov	r0, r6
 8001cd0:	47c0      	blx	r8
 8001cd2:	3001      	adds	r0, #1
 8001cd4:	d09a      	beq.n	8001c0c <_printf_i+0x12c>
 8001cd6:	3501      	adds	r5, #1
 8001cd8:	68e3      	ldr	r3, [r4, #12]
 8001cda:	9a03      	ldr	r2, [sp, #12]
 8001cdc:	1a9b      	subs	r3, r3, r2
 8001cde:	42ab      	cmp	r3, r5
 8001ce0:	dcf2      	bgt.n	8001cc8 <_printf_i+0x1e8>
 8001ce2:	e7eb      	b.n	8001cbc <_printf_i+0x1dc>
 8001ce4:	2500      	movs	r5, #0
 8001ce6:	f104 0919 	add.w	r9, r4, #25
 8001cea:	e7f5      	b.n	8001cd8 <_printf_i+0x1f8>
 8001cec:	2b00      	cmp	r3, #0
 8001cee:	d1ac      	bne.n	8001c4a <_printf_i+0x16a>
 8001cf0:	7803      	ldrb	r3, [r0, #0]
 8001cf2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001cf6:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001cfa:	e76c      	b.n	8001bd6 <_printf_i+0xf6>
 8001cfc:	080034fa 	.word	0x080034fa
 8001d00:	0800350b 	.word	0x0800350b

08001d04 <siprintf>:
 8001d04:	b40e      	push	{r1, r2, r3}
 8001d06:	b500      	push	{lr}
 8001d08:	b09c      	sub	sp, #112	; 0x70
 8001d0a:	ab1d      	add	r3, sp, #116	; 0x74
 8001d0c:	9002      	str	r0, [sp, #8]
 8001d0e:	9006      	str	r0, [sp, #24]
 8001d10:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8001d14:	4809      	ldr	r0, [pc, #36]	; (8001d3c <siprintf+0x38>)
 8001d16:	9107      	str	r1, [sp, #28]
 8001d18:	9104      	str	r1, [sp, #16]
 8001d1a:	4909      	ldr	r1, [pc, #36]	; (8001d40 <siprintf+0x3c>)
 8001d1c:	f853 2b04 	ldr.w	r2, [r3], #4
 8001d20:	9105      	str	r1, [sp, #20]
 8001d22:	6800      	ldr	r0, [r0, #0]
 8001d24:	9301      	str	r3, [sp, #4]
 8001d26:	a902      	add	r1, sp, #8
 8001d28:	f001 fa5e 	bl	80031e8 <_svfiprintf_r>
 8001d2c:	9b02      	ldr	r3, [sp, #8]
 8001d2e:	2200      	movs	r2, #0
 8001d30:	701a      	strb	r2, [r3, #0]
 8001d32:	b01c      	add	sp, #112	; 0x70
 8001d34:	f85d eb04 	ldr.w	lr, [sp], #4
 8001d38:	b003      	add	sp, #12
 8001d3a:	4770      	bx	lr
 8001d3c:	20000000 	.word	0x20000000
 8001d40:	ffff0208 	.word	0xffff0208

08001d44 <quorem>:
 8001d44:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001d48:	6903      	ldr	r3, [r0, #16]
 8001d4a:	690c      	ldr	r4, [r1, #16]
 8001d4c:	42a3      	cmp	r3, r4
 8001d4e:	4680      	mov	r8, r0
 8001d50:	f2c0 8082 	blt.w	8001e58 <quorem+0x114>
 8001d54:	3c01      	subs	r4, #1
 8001d56:	f101 0714 	add.w	r7, r1, #20
 8001d5a:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 8001d5e:	f100 0614 	add.w	r6, r0, #20
 8001d62:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 8001d66:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 8001d6a:	eb06 030c 	add.w	r3, r6, ip
 8001d6e:	3501      	adds	r5, #1
 8001d70:	eb07 090c 	add.w	r9, r7, ip
 8001d74:	9301      	str	r3, [sp, #4]
 8001d76:	fbb0 f5f5 	udiv	r5, r0, r5
 8001d7a:	b395      	cbz	r5, 8001de2 <quorem+0x9e>
 8001d7c:	f04f 0a00 	mov.w	sl, #0
 8001d80:	4638      	mov	r0, r7
 8001d82:	46b6      	mov	lr, r6
 8001d84:	46d3      	mov	fp, sl
 8001d86:	f850 2b04 	ldr.w	r2, [r0], #4
 8001d8a:	b293      	uxth	r3, r2
 8001d8c:	fb05 a303 	mla	r3, r5, r3, sl
 8001d90:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8001d94:	b29b      	uxth	r3, r3
 8001d96:	ebab 0303 	sub.w	r3, fp, r3
 8001d9a:	0c12      	lsrs	r2, r2, #16
 8001d9c:	f8de b000 	ldr.w	fp, [lr]
 8001da0:	fb05 a202 	mla	r2, r5, r2, sl
 8001da4:	fa13 f38b 	uxtah	r3, r3, fp
 8001da8:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 8001dac:	fa1f fb82 	uxth.w	fp, r2
 8001db0:	f8de 2000 	ldr.w	r2, [lr]
 8001db4:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 8001db8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8001dbc:	b29b      	uxth	r3, r3
 8001dbe:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001dc2:	4581      	cmp	r9, r0
 8001dc4:	ea4f 4b22 	mov.w	fp, r2, asr #16
 8001dc8:	f84e 3b04 	str.w	r3, [lr], #4
 8001dcc:	d2db      	bcs.n	8001d86 <quorem+0x42>
 8001dce:	f856 300c 	ldr.w	r3, [r6, ip]
 8001dd2:	b933      	cbnz	r3, 8001de2 <quorem+0x9e>
 8001dd4:	9b01      	ldr	r3, [sp, #4]
 8001dd6:	3b04      	subs	r3, #4
 8001dd8:	429e      	cmp	r6, r3
 8001dda:	461a      	mov	r2, r3
 8001ddc:	d330      	bcc.n	8001e40 <quorem+0xfc>
 8001dde:	f8c8 4010 	str.w	r4, [r8, #16]
 8001de2:	4640      	mov	r0, r8
 8001de4:	f001 f82a 	bl	8002e3c <__mcmp>
 8001de8:	2800      	cmp	r0, #0
 8001dea:	db25      	blt.n	8001e38 <quorem+0xf4>
 8001dec:	3501      	adds	r5, #1
 8001dee:	4630      	mov	r0, r6
 8001df0:	f04f 0c00 	mov.w	ip, #0
 8001df4:	f857 2b04 	ldr.w	r2, [r7], #4
 8001df8:	f8d0 e000 	ldr.w	lr, [r0]
 8001dfc:	b293      	uxth	r3, r2
 8001dfe:	ebac 0303 	sub.w	r3, ip, r3
 8001e02:	0c12      	lsrs	r2, r2, #16
 8001e04:	fa13 f38e 	uxtah	r3, r3, lr
 8001e08:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8001e0c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8001e10:	b29b      	uxth	r3, r3
 8001e12:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001e16:	45b9      	cmp	r9, r7
 8001e18:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8001e1c:	f840 3b04 	str.w	r3, [r0], #4
 8001e20:	d2e8      	bcs.n	8001df4 <quorem+0xb0>
 8001e22:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8001e26:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8001e2a:	b92a      	cbnz	r2, 8001e38 <quorem+0xf4>
 8001e2c:	3b04      	subs	r3, #4
 8001e2e:	429e      	cmp	r6, r3
 8001e30:	461a      	mov	r2, r3
 8001e32:	d30b      	bcc.n	8001e4c <quorem+0x108>
 8001e34:	f8c8 4010 	str.w	r4, [r8, #16]
 8001e38:	4628      	mov	r0, r5
 8001e3a:	b003      	add	sp, #12
 8001e3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001e40:	6812      	ldr	r2, [r2, #0]
 8001e42:	3b04      	subs	r3, #4
 8001e44:	2a00      	cmp	r2, #0
 8001e46:	d1ca      	bne.n	8001dde <quorem+0x9a>
 8001e48:	3c01      	subs	r4, #1
 8001e4a:	e7c5      	b.n	8001dd8 <quorem+0x94>
 8001e4c:	6812      	ldr	r2, [r2, #0]
 8001e4e:	3b04      	subs	r3, #4
 8001e50:	2a00      	cmp	r2, #0
 8001e52:	d1ef      	bne.n	8001e34 <quorem+0xf0>
 8001e54:	3c01      	subs	r4, #1
 8001e56:	e7ea      	b.n	8001e2e <quorem+0xea>
 8001e58:	2000      	movs	r0, #0
 8001e5a:	e7ee      	b.n	8001e3a <quorem+0xf6>
 8001e5c:	0000      	movs	r0, r0
	...

08001e60 <_dtoa_r>:
 8001e60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001e64:	ec57 6b10 	vmov	r6, r7, d0
 8001e68:	b097      	sub	sp, #92	; 0x5c
 8001e6a:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8001e6c:	9106      	str	r1, [sp, #24]
 8001e6e:	4604      	mov	r4, r0
 8001e70:	920b      	str	r2, [sp, #44]	; 0x2c
 8001e72:	9312      	str	r3, [sp, #72]	; 0x48
 8001e74:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8001e78:	e9cd 6700 	strd	r6, r7, [sp]
 8001e7c:	b93d      	cbnz	r5, 8001e8e <_dtoa_r+0x2e>
 8001e7e:	2010      	movs	r0, #16
 8001e80:	f000 fdb4 	bl	80029ec <malloc>
 8001e84:	6260      	str	r0, [r4, #36]	; 0x24
 8001e86:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8001e8a:	6005      	str	r5, [r0, #0]
 8001e8c:	60c5      	str	r5, [r0, #12]
 8001e8e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001e90:	6819      	ldr	r1, [r3, #0]
 8001e92:	b151      	cbz	r1, 8001eaa <_dtoa_r+0x4a>
 8001e94:	685a      	ldr	r2, [r3, #4]
 8001e96:	604a      	str	r2, [r1, #4]
 8001e98:	2301      	movs	r3, #1
 8001e9a:	4093      	lsls	r3, r2
 8001e9c:	608b      	str	r3, [r1, #8]
 8001e9e:	4620      	mov	r0, r4
 8001ea0:	f000 fdeb 	bl	8002a7a <_Bfree>
 8001ea4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001ea6:	2200      	movs	r2, #0
 8001ea8:	601a      	str	r2, [r3, #0]
 8001eaa:	1e3b      	subs	r3, r7, #0
 8001eac:	bfbb      	ittet	lt
 8001eae:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8001eb2:	9301      	strlt	r3, [sp, #4]
 8001eb4:	2300      	movge	r3, #0
 8001eb6:	2201      	movlt	r2, #1
 8001eb8:	bfac      	ite	ge
 8001eba:	f8c8 3000 	strge.w	r3, [r8]
 8001ebe:	f8c8 2000 	strlt.w	r2, [r8]
 8001ec2:	4baf      	ldr	r3, [pc, #700]	; (8002180 <_dtoa_r+0x320>)
 8001ec4:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8001ec8:	ea33 0308 	bics.w	r3, r3, r8
 8001ecc:	d114      	bne.n	8001ef8 <_dtoa_r+0x98>
 8001ece:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8001ed0:	f242 730f 	movw	r3, #9999	; 0x270f
 8001ed4:	6013      	str	r3, [r2, #0]
 8001ed6:	9b00      	ldr	r3, [sp, #0]
 8001ed8:	b923      	cbnz	r3, 8001ee4 <_dtoa_r+0x84>
 8001eda:	f3c8 0013 	ubfx	r0, r8, #0, #20
 8001ede:	2800      	cmp	r0, #0
 8001ee0:	f000 8542 	beq.w	8002968 <_dtoa_r+0xb08>
 8001ee4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8001ee6:	f8df b2ac 	ldr.w	fp, [pc, #684]	; 8002194 <_dtoa_r+0x334>
 8001eea:	2b00      	cmp	r3, #0
 8001eec:	f000 8544 	beq.w	8002978 <_dtoa_r+0xb18>
 8001ef0:	f10b 0303 	add.w	r3, fp, #3
 8001ef4:	f000 bd3e 	b.w	8002974 <_dtoa_r+0xb14>
 8001ef8:	e9dd 6700 	ldrd	r6, r7, [sp]
 8001efc:	2200      	movs	r2, #0
 8001efe:	2300      	movs	r3, #0
 8001f00:	4630      	mov	r0, r6
 8001f02:	4639      	mov	r1, r7
 8001f04:	f7fe fde8 	bl	8000ad8 <__aeabi_dcmpeq>
 8001f08:	4681      	mov	r9, r0
 8001f0a:	b168      	cbz	r0, 8001f28 <_dtoa_r+0xc8>
 8001f0c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8001f0e:	2301      	movs	r3, #1
 8001f10:	6013      	str	r3, [r2, #0]
 8001f12:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8001f14:	2b00      	cmp	r3, #0
 8001f16:	f000 8524 	beq.w	8002962 <_dtoa_r+0xb02>
 8001f1a:	4b9a      	ldr	r3, [pc, #616]	; (8002184 <_dtoa_r+0x324>)
 8001f1c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8001f1e:	f103 3bff 	add.w	fp, r3, #4294967295
 8001f22:	6013      	str	r3, [r2, #0]
 8001f24:	f000 bd28 	b.w	8002978 <_dtoa_r+0xb18>
 8001f28:	aa14      	add	r2, sp, #80	; 0x50
 8001f2a:	a915      	add	r1, sp, #84	; 0x54
 8001f2c:	ec47 6b10 	vmov	d0, r6, r7
 8001f30:	4620      	mov	r0, r4
 8001f32:	f000 fffa 	bl	8002f2a <__d2b>
 8001f36:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8001f3a:	9004      	str	r0, [sp, #16]
 8001f3c:	2d00      	cmp	r5, #0
 8001f3e:	d07c      	beq.n	800203a <_dtoa_r+0x1da>
 8001f40:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8001f44:	f043 5b7f 	orr.w	fp, r3, #1069547520	; 0x3fc00000
 8001f48:	46b2      	mov	sl, r6
 8001f4a:	f44b 1b40 	orr.w	fp, fp, #3145728	; 0x300000
 8001f4e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8001f52:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
 8001f56:	2200      	movs	r2, #0
 8001f58:	4b8b      	ldr	r3, [pc, #556]	; (8002188 <_dtoa_r+0x328>)
 8001f5a:	4650      	mov	r0, sl
 8001f5c:	4659      	mov	r1, fp
 8001f5e:	f7fe f99b 	bl	8000298 <__aeabi_dsub>
 8001f62:	a381      	add	r3, pc, #516	; (adr r3, 8002168 <_dtoa_r+0x308>)
 8001f64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f68:	f7fe fb4e 	bl	8000608 <__aeabi_dmul>
 8001f6c:	a380      	add	r3, pc, #512	; (adr r3, 8002170 <_dtoa_r+0x310>)
 8001f6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f72:	f7fe f993 	bl	800029c <__adddf3>
 8001f76:	4606      	mov	r6, r0
 8001f78:	4628      	mov	r0, r5
 8001f7a:	460f      	mov	r7, r1
 8001f7c:	f7fe fada 	bl	8000534 <__aeabi_i2d>
 8001f80:	a37d      	add	r3, pc, #500	; (adr r3, 8002178 <_dtoa_r+0x318>)
 8001f82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f86:	f7fe fb3f 	bl	8000608 <__aeabi_dmul>
 8001f8a:	4602      	mov	r2, r0
 8001f8c:	460b      	mov	r3, r1
 8001f8e:	4630      	mov	r0, r6
 8001f90:	4639      	mov	r1, r7
 8001f92:	f7fe f983 	bl	800029c <__adddf3>
 8001f96:	4606      	mov	r6, r0
 8001f98:	460f      	mov	r7, r1
 8001f9a:	f7fe fde5 	bl	8000b68 <__aeabi_d2iz>
 8001f9e:	2200      	movs	r2, #0
 8001fa0:	4682      	mov	sl, r0
 8001fa2:	2300      	movs	r3, #0
 8001fa4:	4630      	mov	r0, r6
 8001fa6:	4639      	mov	r1, r7
 8001fa8:	f7fe fda0 	bl	8000aec <__aeabi_dcmplt>
 8001fac:	b148      	cbz	r0, 8001fc2 <_dtoa_r+0x162>
 8001fae:	4650      	mov	r0, sl
 8001fb0:	f7fe fac0 	bl	8000534 <__aeabi_i2d>
 8001fb4:	4632      	mov	r2, r6
 8001fb6:	463b      	mov	r3, r7
 8001fb8:	f7fe fd8e 	bl	8000ad8 <__aeabi_dcmpeq>
 8001fbc:	b908      	cbnz	r0, 8001fc2 <_dtoa_r+0x162>
 8001fbe:	f10a 3aff 	add.w	sl, sl, #4294967295
 8001fc2:	f1ba 0f16 	cmp.w	sl, #22
 8001fc6:	d859      	bhi.n	800207c <_dtoa_r+0x21c>
 8001fc8:	4970      	ldr	r1, [pc, #448]	; (800218c <_dtoa_r+0x32c>)
 8001fca:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8001fce:	e9dd 2300 	ldrd	r2, r3, [sp]
 8001fd2:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001fd6:	f7fe fda7 	bl	8000b28 <__aeabi_dcmpgt>
 8001fda:	2800      	cmp	r0, #0
 8001fdc:	d050      	beq.n	8002080 <_dtoa_r+0x220>
 8001fde:	f10a 3aff 	add.w	sl, sl, #4294967295
 8001fe2:	2300      	movs	r3, #0
 8001fe4:	930f      	str	r3, [sp, #60]	; 0x3c
 8001fe6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8001fe8:	1b5d      	subs	r5, r3, r5
 8001fea:	f1b5 0801 	subs.w	r8, r5, #1
 8001fee:	bf49      	itett	mi
 8001ff0:	f1c5 0301 	rsbmi	r3, r5, #1
 8001ff4:	2300      	movpl	r3, #0
 8001ff6:	9305      	strmi	r3, [sp, #20]
 8001ff8:	f04f 0800 	movmi.w	r8, #0
 8001ffc:	bf58      	it	pl
 8001ffe:	9305      	strpl	r3, [sp, #20]
 8002000:	f1ba 0f00 	cmp.w	sl, #0
 8002004:	db3e      	blt.n	8002084 <_dtoa_r+0x224>
 8002006:	2300      	movs	r3, #0
 8002008:	44d0      	add	r8, sl
 800200a:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 800200e:	9307      	str	r3, [sp, #28]
 8002010:	9b06      	ldr	r3, [sp, #24]
 8002012:	2b09      	cmp	r3, #9
 8002014:	f200 8090 	bhi.w	8002138 <_dtoa_r+0x2d8>
 8002018:	2b05      	cmp	r3, #5
 800201a:	bfc4      	itt	gt
 800201c:	3b04      	subgt	r3, #4
 800201e:	9306      	strgt	r3, [sp, #24]
 8002020:	9b06      	ldr	r3, [sp, #24]
 8002022:	f1a3 0302 	sub.w	r3, r3, #2
 8002026:	bfcc      	ite	gt
 8002028:	2500      	movgt	r5, #0
 800202a:	2501      	movle	r5, #1
 800202c:	2b03      	cmp	r3, #3
 800202e:	f200 808f 	bhi.w	8002150 <_dtoa_r+0x2f0>
 8002032:	e8df f003 	tbb	[pc, r3]
 8002036:	7f7d      	.short	0x7f7d
 8002038:	7131      	.short	0x7131
 800203a:	e9dd 5314 	ldrd	r5, r3, [sp, #80]	; 0x50
 800203e:	441d      	add	r5, r3
 8002040:	f205 4032 	addw	r0, r5, #1074	; 0x432
 8002044:	2820      	cmp	r0, #32
 8002046:	dd13      	ble.n	8002070 <_dtoa_r+0x210>
 8002048:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
 800204c:	9b00      	ldr	r3, [sp, #0]
 800204e:	fa08 f800 	lsl.w	r8, r8, r0
 8002052:	f205 4012 	addw	r0, r5, #1042	; 0x412
 8002056:	fa23 f000 	lsr.w	r0, r3, r0
 800205a:	ea48 0000 	orr.w	r0, r8, r0
 800205e:	f7fe fa59 	bl	8000514 <__aeabi_ui2d>
 8002062:	2301      	movs	r3, #1
 8002064:	4682      	mov	sl, r0
 8002066:	f1a1 7bf8 	sub.w	fp, r1, #32505856	; 0x1f00000
 800206a:	3d01      	subs	r5, #1
 800206c:	9313      	str	r3, [sp, #76]	; 0x4c
 800206e:	e772      	b.n	8001f56 <_dtoa_r+0xf6>
 8002070:	9b00      	ldr	r3, [sp, #0]
 8002072:	f1c0 0020 	rsb	r0, r0, #32
 8002076:	fa03 f000 	lsl.w	r0, r3, r0
 800207a:	e7f0      	b.n	800205e <_dtoa_r+0x1fe>
 800207c:	2301      	movs	r3, #1
 800207e:	e7b1      	b.n	8001fe4 <_dtoa_r+0x184>
 8002080:	900f      	str	r0, [sp, #60]	; 0x3c
 8002082:	e7b0      	b.n	8001fe6 <_dtoa_r+0x186>
 8002084:	9b05      	ldr	r3, [sp, #20]
 8002086:	eba3 030a 	sub.w	r3, r3, sl
 800208a:	9305      	str	r3, [sp, #20]
 800208c:	f1ca 0300 	rsb	r3, sl, #0
 8002090:	9307      	str	r3, [sp, #28]
 8002092:	2300      	movs	r3, #0
 8002094:	930e      	str	r3, [sp, #56]	; 0x38
 8002096:	e7bb      	b.n	8002010 <_dtoa_r+0x1b0>
 8002098:	2301      	movs	r3, #1
 800209a:	930a      	str	r3, [sp, #40]	; 0x28
 800209c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800209e:	2b00      	cmp	r3, #0
 80020a0:	dd59      	ble.n	8002156 <_dtoa_r+0x2f6>
 80020a2:	9302      	str	r3, [sp, #8]
 80020a4:	4699      	mov	r9, r3
 80020a6:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80020a8:	2200      	movs	r2, #0
 80020aa:	6072      	str	r2, [r6, #4]
 80020ac:	2204      	movs	r2, #4
 80020ae:	f102 0014 	add.w	r0, r2, #20
 80020b2:	4298      	cmp	r0, r3
 80020b4:	6871      	ldr	r1, [r6, #4]
 80020b6:	d953      	bls.n	8002160 <_dtoa_r+0x300>
 80020b8:	4620      	mov	r0, r4
 80020ba:	f000 fcaa 	bl	8002a12 <_Balloc>
 80020be:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80020c0:	6030      	str	r0, [r6, #0]
 80020c2:	f1b9 0f0e 	cmp.w	r9, #14
 80020c6:	f8d3 b000 	ldr.w	fp, [r3]
 80020ca:	f200 80e6 	bhi.w	800229a <_dtoa_r+0x43a>
 80020ce:	2d00      	cmp	r5, #0
 80020d0:	f000 80e3 	beq.w	800229a <_dtoa_r+0x43a>
 80020d4:	ed9d 7b00 	vldr	d7, [sp]
 80020d8:	f1ba 0f00 	cmp.w	sl, #0
 80020dc:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
 80020e0:	dd74      	ble.n	80021cc <_dtoa_r+0x36c>
 80020e2:	4a2a      	ldr	r2, [pc, #168]	; (800218c <_dtoa_r+0x32c>)
 80020e4:	f00a 030f 	and.w	r3, sl, #15
 80020e8:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80020ec:	ed93 7b00 	vldr	d7, [r3]
 80020f0:	ea4f 162a 	mov.w	r6, sl, asr #4
 80020f4:	06f0      	lsls	r0, r6, #27
 80020f6:	ed8d 7b08 	vstr	d7, [sp, #32]
 80020fa:	d565      	bpl.n	80021c8 <_dtoa_r+0x368>
 80020fc:	4b24      	ldr	r3, [pc, #144]	; (8002190 <_dtoa_r+0x330>)
 80020fe:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002102:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002106:	f7fe fba9 	bl	800085c <__aeabi_ddiv>
 800210a:	e9cd 0100 	strd	r0, r1, [sp]
 800210e:	f006 060f 	and.w	r6, r6, #15
 8002112:	2503      	movs	r5, #3
 8002114:	4f1e      	ldr	r7, [pc, #120]	; (8002190 <_dtoa_r+0x330>)
 8002116:	e04c      	b.n	80021b2 <_dtoa_r+0x352>
 8002118:	2301      	movs	r3, #1
 800211a:	930a      	str	r3, [sp, #40]	; 0x28
 800211c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800211e:	4453      	add	r3, sl
 8002120:	f103 0901 	add.w	r9, r3, #1
 8002124:	9302      	str	r3, [sp, #8]
 8002126:	464b      	mov	r3, r9
 8002128:	2b01      	cmp	r3, #1
 800212a:	bfb8      	it	lt
 800212c:	2301      	movlt	r3, #1
 800212e:	e7ba      	b.n	80020a6 <_dtoa_r+0x246>
 8002130:	2300      	movs	r3, #0
 8002132:	e7b2      	b.n	800209a <_dtoa_r+0x23a>
 8002134:	2300      	movs	r3, #0
 8002136:	e7f0      	b.n	800211a <_dtoa_r+0x2ba>
 8002138:	2501      	movs	r5, #1
 800213a:	2300      	movs	r3, #0
 800213c:	9306      	str	r3, [sp, #24]
 800213e:	950a      	str	r5, [sp, #40]	; 0x28
 8002140:	f04f 33ff 	mov.w	r3, #4294967295
 8002144:	9302      	str	r3, [sp, #8]
 8002146:	4699      	mov	r9, r3
 8002148:	2200      	movs	r2, #0
 800214a:	2312      	movs	r3, #18
 800214c:	920b      	str	r2, [sp, #44]	; 0x2c
 800214e:	e7aa      	b.n	80020a6 <_dtoa_r+0x246>
 8002150:	2301      	movs	r3, #1
 8002152:	930a      	str	r3, [sp, #40]	; 0x28
 8002154:	e7f4      	b.n	8002140 <_dtoa_r+0x2e0>
 8002156:	2301      	movs	r3, #1
 8002158:	9302      	str	r3, [sp, #8]
 800215a:	4699      	mov	r9, r3
 800215c:	461a      	mov	r2, r3
 800215e:	e7f5      	b.n	800214c <_dtoa_r+0x2ec>
 8002160:	3101      	adds	r1, #1
 8002162:	6071      	str	r1, [r6, #4]
 8002164:	0052      	lsls	r2, r2, #1
 8002166:	e7a2      	b.n	80020ae <_dtoa_r+0x24e>
 8002168:	636f4361 	.word	0x636f4361
 800216c:	3fd287a7 	.word	0x3fd287a7
 8002170:	8b60c8b3 	.word	0x8b60c8b3
 8002174:	3fc68a28 	.word	0x3fc68a28
 8002178:	509f79fb 	.word	0x509f79fb
 800217c:	3fd34413 	.word	0x3fd34413
 8002180:	7ff00000 	.word	0x7ff00000
 8002184:	080034f9 	.word	0x080034f9
 8002188:	3ff80000 	.word	0x3ff80000
 800218c:	08003558 	.word	0x08003558
 8002190:	08003530 	.word	0x08003530
 8002194:	08003525 	.word	0x08003525
 8002198:	07f1      	lsls	r1, r6, #31
 800219a:	d508      	bpl.n	80021ae <_dtoa_r+0x34e>
 800219c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 80021a0:	e9d7 2300 	ldrd	r2, r3, [r7]
 80021a4:	f7fe fa30 	bl	8000608 <__aeabi_dmul>
 80021a8:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80021ac:	3501      	adds	r5, #1
 80021ae:	1076      	asrs	r6, r6, #1
 80021b0:	3708      	adds	r7, #8
 80021b2:	2e00      	cmp	r6, #0
 80021b4:	d1f0      	bne.n	8002198 <_dtoa_r+0x338>
 80021b6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80021ba:	e9dd 0100 	ldrd	r0, r1, [sp]
 80021be:	f7fe fb4d 	bl	800085c <__aeabi_ddiv>
 80021c2:	e9cd 0100 	strd	r0, r1, [sp]
 80021c6:	e01a      	b.n	80021fe <_dtoa_r+0x39e>
 80021c8:	2502      	movs	r5, #2
 80021ca:	e7a3      	b.n	8002114 <_dtoa_r+0x2b4>
 80021cc:	f000 80a0 	beq.w	8002310 <_dtoa_r+0x4b0>
 80021d0:	f1ca 0600 	rsb	r6, sl, #0
 80021d4:	4b9f      	ldr	r3, [pc, #636]	; (8002454 <_dtoa_r+0x5f4>)
 80021d6:	4fa0      	ldr	r7, [pc, #640]	; (8002458 <_dtoa_r+0x5f8>)
 80021d8:	f006 020f 	and.w	r2, r6, #15
 80021dc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80021e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021e4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80021e8:	f7fe fa0e 	bl	8000608 <__aeabi_dmul>
 80021ec:	e9cd 0100 	strd	r0, r1, [sp]
 80021f0:	1136      	asrs	r6, r6, #4
 80021f2:	2300      	movs	r3, #0
 80021f4:	2502      	movs	r5, #2
 80021f6:	2e00      	cmp	r6, #0
 80021f8:	d17f      	bne.n	80022fa <_dtoa_r+0x49a>
 80021fa:	2b00      	cmp	r3, #0
 80021fc:	d1e1      	bne.n	80021c2 <_dtoa_r+0x362>
 80021fe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002200:	2b00      	cmp	r3, #0
 8002202:	f000 8087 	beq.w	8002314 <_dtoa_r+0x4b4>
 8002206:	e9dd 6700 	ldrd	r6, r7, [sp]
 800220a:	2200      	movs	r2, #0
 800220c:	4b93      	ldr	r3, [pc, #588]	; (800245c <_dtoa_r+0x5fc>)
 800220e:	4630      	mov	r0, r6
 8002210:	4639      	mov	r1, r7
 8002212:	f7fe fc6b 	bl	8000aec <__aeabi_dcmplt>
 8002216:	2800      	cmp	r0, #0
 8002218:	d07c      	beq.n	8002314 <_dtoa_r+0x4b4>
 800221a:	f1b9 0f00 	cmp.w	r9, #0
 800221e:	d079      	beq.n	8002314 <_dtoa_r+0x4b4>
 8002220:	9b02      	ldr	r3, [sp, #8]
 8002222:	2b00      	cmp	r3, #0
 8002224:	dd35      	ble.n	8002292 <_dtoa_r+0x432>
 8002226:	f10a 33ff 	add.w	r3, sl, #4294967295
 800222a:	9308      	str	r3, [sp, #32]
 800222c:	4639      	mov	r1, r7
 800222e:	2200      	movs	r2, #0
 8002230:	4b8b      	ldr	r3, [pc, #556]	; (8002460 <_dtoa_r+0x600>)
 8002232:	4630      	mov	r0, r6
 8002234:	f7fe f9e8 	bl	8000608 <__aeabi_dmul>
 8002238:	e9cd 0100 	strd	r0, r1, [sp]
 800223c:	9f02      	ldr	r7, [sp, #8]
 800223e:	3501      	adds	r5, #1
 8002240:	4628      	mov	r0, r5
 8002242:	f7fe f977 	bl	8000534 <__aeabi_i2d>
 8002246:	e9dd 2300 	ldrd	r2, r3, [sp]
 800224a:	f7fe f9dd 	bl	8000608 <__aeabi_dmul>
 800224e:	2200      	movs	r2, #0
 8002250:	4b84      	ldr	r3, [pc, #528]	; (8002464 <_dtoa_r+0x604>)
 8002252:	f7fe f823 	bl	800029c <__adddf3>
 8002256:	4605      	mov	r5, r0
 8002258:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 800225c:	2f00      	cmp	r7, #0
 800225e:	d15d      	bne.n	800231c <_dtoa_r+0x4bc>
 8002260:	2200      	movs	r2, #0
 8002262:	4b81      	ldr	r3, [pc, #516]	; (8002468 <_dtoa_r+0x608>)
 8002264:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002268:	f7fe f816 	bl	8000298 <__aeabi_dsub>
 800226c:	462a      	mov	r2, r5
 800226e:	4633      	mov	r3, r6
 8002270:	e9cd 0100 	strd	r0, r1, [sp]
 8002274:	f7fe fc58 	bl	8000b28 <__aeabi_dcmpgt>
 8002278:	2800      	cmp	r0, #0
 800227a:	f040 8288 	bne.w	800278e <_dtoa_r+0x92e>
 800227e:	462a      	mov	r2, r5
 8002280:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8002284:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002288:	f7fe fc30 	bl	8000aec <__aeabi_dcmplt>
 800228c:	2800      	cmp	r0, #0
 800228e:	f040 827c 	bne.w	800278a <_dtoa_r+0x92a>
 8002292:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8002296:	e9cd 2300 	strd	r2, r3, [sp]
 800229a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800229c:	2b00      	cmp	r3, #0
 800229e:	f2c0 8150 	blt.w	8002542 <_dtoa_r+0x6e2>
 80022a2:	f1ba 0f0e 	cmp.w	sl, #14
 80022a6:	f300 814c 	bgt.w	8002542 <_dtoa_r+0x6e2>
 80022aa:	4b6a      	ldr	r3, [pc, #424]	; (8002454 <_dtoa_r+0x5f4>)
 80022ac:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80022b0:	ed93 7b00 	vldr	d7, [r3]
 80022b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80022b6:	2b00      	cmp	r3, #0
 80022b8:	ed8d 7b02 	vstr	d7, [sp, #8]
 80022bc:	f280 80d8 	bge.w	8002470 <_dtoa_r+0x610>
 80022c0:	f1b9 0f00 	cmp.w	r9, #0
 80022c4:	f300 80d4 	bgt.w	8002470 <_dtoa_r+0x610>
 80022c8:	f040 825e 	bne.w	8002788 <_dtoa_r+0x928>
 80022cc:	2200      	movs	r2, #0
 80022ce:	4b66      	ldr	r3, [pc, #408]	; (8002468 <_dtoa_r+0x608>)
 80022d0:	ec51 0b17 	vmov	r0, r1, d7
 80022d4:	f7fe f998 	bl	8000608 <__aeabi_dmul>
 80022d8:	e9dd 2300 	ldrd	r2, r3, [sp]
 80022dc:	f7fe fc1a 	bl	8000b14 <__aeabi_dcmpge>
 80022e0:	464f      	mov	r7, r9
 80022e2:	464e      	mov	r6, r9
 80022e4:	2800      	cmp	r0, #0
 80022e6:	f040 8234 	bne.w	8002752 <_dtoa_r+0x8f2>
 80022ea:	2331      	movs	r3, #49	; 0x31
 80022ec:	f10b 0501 	add.w	r5, fp, #1
 80022f0:	f88b 3000 	strb.w	r3, [fp]
 80022f4:	f10a 0a01 	add.w	sl, sl, #1
 80022f8:	e22f      	b.n	800275a <_dtoa_r+0x8fa>
 80022fa:	07f2      	lsls	r2, r6, #31
 80022fc:	d505      	bpl.n	800230a <_dtoa_r+0x4aa>
 80022fe:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002302:	f7fe f981 	bl	8000608 <__aeabi_dmul>
 8002306:	3501      	adds	r5, #1
 8002308:	2301      	movs	r3, #1
 800230a:	1076      	asrs	r6, r6, #1
 800230c:	3708      	adds	r7, #8
 800230e:	e772      	b.n	80021f6 <_dtoa_r+0x396>
 8002310:	2502      	movs	r5, #2
 8002312:	e774      	b.n	80021fe <_dtoa_r+0x39e>
 8002314:	f8cd a020 	str.w	sl, [sp, #32]
 8002318:	464f      	mov	r7, r9
 800231a:	e791      	b.n	8002240 <_dtoa_r+0x3e0>
 800231c:	4b4d      	ldr	r3, [pc, #308]	; (8002454 <_dtoa_r+0x5f4>)
 800231e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002322:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 8002326:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002328:	2b00      	cmp	r3, #0
 800232a:	d047      	beq.n	80023bc <_dtoa_r+0x55c>
 800232c:	4602      	mov	r2, r0
 800232e:	460b      	mov	r3, r1
 8002330:	2000      	movs	r0, #0
 8002332:	494e      	ldr	r1, [pc, #312]	; (800246c <_dtoa_r+0x60c>)
 8002334:	f7fe fa92 	bl	800085c <__aeabi_ddiv>
 8002338:	462a      	mov	r2, r5
 800233a:	4633      	mov	r3, r6
 800233c:	f7fd ffac 	bl	8000298 <__aeabi_dsub>
 8002340:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 8002344:	465d      	mov	r5, fp
 8002346:	e9dd 0100 	ldrd	r0, r1, [sp]
 800234a:	f7fe fc0d 	bl	8000b68 <__aeabi_d2iz>
 800234e:	4606      	mov	r6, r0
 8002350:	f7fe f8f0 	bl	8000534 <__aeabi_i2d>
 8002354:	4602      	mov	r2, r0
 8002356:	460b      	mov	r3, r1
 8002358:	e9dd 0100 	ldrd	r0, r1, [sp]
 800235c:	f7fd ff9c 	bl	8000298 <__aeabi_dsub>
 8002360:	3630      	adds	r6, #48	; 0x30
 8002362:	f805 6b01 	strb.w	r6, [r5], #1
 8002366:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800236a:	e9cd 0100 	strd	r0, r1, [sp]
 800236e:	f7fe fbbd 	bl	8000aec <__aeabi_dcmplt>
 8002372:	2800      	cmp	r0, #0
 8002374:	d163      	bne.n	800243e <_dtoa_r+0x5de>
 8002376:	e9dd 2300 	ldrd	r2, r3, [sp]
 800237a:	2000      	movs	r0, #0
 800237c:	4937      	ldr	r1, [pc, #220]	; (800245c <_dtoa_r+0x5fc>)
 800237e:	f7fd ff8b 	bl	8000298 <__aeabi_dsub>
 8002382:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8002386:	f7fe fbb1 	bl	8000aec <__aeabi_dcmplt>
 800238a:	2800      	cmp	r0, #0
 800238c:	f040 80b7 	bne.w	80024fe <_dtoa_r+0x69e>
 8002390:	eba5 030b 	sub.w	r3, r5, fp
 8002394:	429f      	cmp	r7, r3
 8002396:	f77f af7c 	ble.w	8002292 <_dtoa_r+0x432>
 800239a:	2200      	movs	r2, #0
 800239c:	4b30      	ldr	r3, [pc, #192]	; (8002460 <_dtoa_r+0x600>)
 800239e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80023a2:	f7fe f931 	bl	8000608 <__aeabi_dmul>
 80023a6:	2200      	movs	r2, #0
 80023a8:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 80023ac:	4b2c      	ldr	r3, [pc, #176]	; (8002460 <_dtoa_r+0x600>)
 80023ae:	e9dd 0100 	ldrd	r0, r1, [sp]
 80023b2:	f7fe f929 	bl	8000608 <__aeabi_dmul>
 80023b6:	e9cd 0100 	strd	r0, r1, [sp]
 80023ba:	e7c4      	b.n	8002346 <_dtoa_r+0x4e6>
 80023bc:	462a      	mov	r2, r5
 80023be:	4633      	mov	r3, r6
 80023c0:	f7fe f922 	bl	8000608 <__aeabi_dmul>
 80023c4:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 80023c8:	eb0b 0507 	add.w	r5, fp, r7
 80023cc:	465e      	mov	r6, fp
 80023ce:	e9dd 0100 	ldrd	r0, r1, [sp]
 80023d2:	f7fe fbc9 	bl	8000b68 <__aeabi_d2iz>
 80023d6:	4607      	mov	r7, r0
 80023d8:	f7fe f8ac 	bl	8000534 <__aeabi_i2d>
 80023dc:	3730      	adds	r7, #48	; 0x30
 80023de:	4602      	mov	r2, r0
 80023e0:	460b      	mov	r3, r1
 80023e2:	e9dd 0100 	ldrd	r0, r1, [sp]
 80023e6:	f7fd ff57 	bl	8000298 <__aeabi_dsub>
 80023ea:	f806 7b01 	strb.w	r7, [r6], #1
 80023ee:	42ae      	cmp	r6, r5
 80023f0:	e9cd 0100 	strd	r0, r1, [sp]
 80023f4:	f04f 0200 	mov.w	r2, #0
 80023f8:	d126      	bne.n	8002448 <_dtoa_r+0x5e8>
 80023fa:	4b1c      	ldr	r3, [pc, #112]	; (800246c <_dtoa_r+0x60c>)
 80023fc:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002400:	f7fd ff4c 	bl	800029c <__adddf3>
 8002404:	4602      	mov	r2, r0
 8002406:	460b      	mov	r3, r1
 8002408:	e9dd 0100 	ldrd	r0, r1, [sp]
 800240c:	f7fe fb8c 	bl	8000b28 <__aeabi_dcmpgt>
 8002410:	2800      	cmp	r0, #0
 8002412:	d174      	bne.n	80024fe <_dtoa_r+0x69e>
 8002414:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8002418:	2000      	movs	r0, #0
 800241a:	4914      	ldr	r1, [pc, #80]	; (800246c <_dtoa_r+0x60c>)
 800241c:	f7fd ff3c 	bl	8000298 <__aeabi_dsub>
 8002420:	4602      	mov	r2, r0
 8002422:	460b      	mov	r3, r1
 8002424:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002428:	f7fe fb60 	bl	8000aec <__aeabi_dcmplt>
 800242c:	2800      	cmp	r0, #0
 800242e:	f43f af30 	beq.w	8002292 <_dtoa_r+0x432>
 8002432:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002436:	2b30      	cmp	r3, #48	; 0x30
 8002438:	f105 32ff 	add.w	r2, r5, #4294967295
 800243c:	d002      	beq.n	8002444 <_dtoa_r+0x5e4>
 800243e:	f8dd a020 	ldr.w	sl, [sp, #32]
 8002442:	e04a      	b.n	80024da <_dtoa_r+0x67a>
 8002444:	4615      	mov	r5, r2
 8002446:	e7f4      	b.n	8002432 <_dtoa_r+0x5d2>
 8002448:	4b05      	ldr	r3, [pc, #20]	; (8002460 <_dtoa_r+0x600>)
 800244a:	f7fe f8dd 	bl	8000608 <__aeabi_dmul>
 800244e:	e9cd 0100 	strd	r0, r1, [sp]
 8002452:	e7bc      	b.n	80023ce <_dtoa_r+0x56e>
 8002454:	08003558 	.word	0x08003558
 8002458:	08003530 	.word	0x08003530
 800245c:	3ff00000 	.word	0x3ff00000
 8002460:	40240000 	.word	0x40240000
 8002464:	401c0000 	.word	0x401c0000
 8002468:	40140000 	.word	0x40140000
 800246c:	3fe00000 	.word	0x3fe00000
 8002470:	e9dd 6700 	ldrd	r6, r7, [sp]
 8002474:	465d      	mov	r5, fp
 8002476:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800247a:	4630      	mov	r0, r6
 800247c:	4639      	mov	r1, r7
 800247e:	f7fe f9ed 	bl	800085c <__aeabi_ddiv>
 8002482:	f7fe fb71 	bl	8000b68 <__aeabi_d2iz>
 8002486:	4680      	mov	r8, r0
 8002488:	f7fe f854 	bl	8000534 <__aeabi_i2d>
 800248c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002490:	f7fe f8ba 	bl	8000608 <__aeabi_dmul>
 8002494:	4602      	mov	r2, r0
 8002496:	460b      	mov	r3, r1
 8002498:	4630      	mov	r0, r6
 800249a:	4639      	mov	r1, r7
 800249c:	f108 0630 	add.w	r6, r8, #48	; 0x30
 80024a0:	f7fd fefa 	bl	8000298 <__aeabi_dsub>
 80024a4:	f805 6b01 	strb.w	r6, [r5], #1
 80024a8:	eba5 060b 	sub.w	r6, r5, fp
 80024ac:	45b1      	cmp	r9, r6
 80024ae:	4602      	mov	r2, r0
 80024b0:	460b      	mov	r3, r1
 80024b2:	d139      	bne.n	8002528 <_dtoa_r+0x6c8>
 80024b4:	f7fd fef2 	bl	800029c <__adddf3>
 80024b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80024bc:	4606      	mov	r6, r0
 80024be:	460f      	mov	r7, r1
 80024c0:	f7fe fb32 	bl	8000b28 <__aeabi_dcmpgt>
 80024c4:	b9c8      	cbnz	r0, 80024fa <_dtoa_r+0x69a>
 80024c6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80024ca:	4630      	mov	r0, r6
 80024cc:	4639      	mov	r1, r7
 80024ce:	f7fe fb03 	bl	8000ad8 <__aeabi_dcmpeq>
 80024d2:	b110      	cbz	r0, 80024da <_dtoa_r+0x67a>
 80024d4:	f018 0f01 	tst.w	r8, #1
 80024d8:	d10f      	bne.n	80024fa <_dtoa_r+0x69a>
 80024da:	9904      	ldr	r1, [sp, #16]
 80024dc:	4620      	mov	r0, r4
 80024de:	f000 facc 	bl	8002a7a <_Bfree>
 80024e2:	2300      	movs	r3, #0
 80024e4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80024e6:	702b      	strb	r3, [r5, #0]
 80024e8:	f10a 0301 	add.w	r3, sl, #1
 80024ec:	6013      	str	r3, [r2, #0]
 80024ee:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80024f0:	2b00      	cmp	r3, #0
 80024f2:	f000 8241 	beq.w	8002978 <_dtoa_r+0xb18>
 80024f6:	601d      	str	r5, [r3, #0]
 80024f8:	e23e      	b.n	8002978 <_dtoa_r+0xb18>
 80024fa:	f8cd a020 	str.w	sl, [sp, #32]
 80024fe:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8002502:	2a39      	cmp	r2, #57	; 0x39
 8002504:	f105 33ff 	add.w	r3, r5, #4294967295
 8002508:	d108      	bne.n	800251c <_dtoa_r+0x6bc>
 800250a:	459b      	cmp	fp, r3
 800250c:	d10a      	bne.n	8002524 <_dtoa_r+0x6c4>
 800250e:	9b08      	ldr	r3, [sp, #32]
 8002510:	3301      	adds	r3, #1
 8002512:	9308      	str	r3, [sp, #32]
 8002514:	2330      	movs	r3, #48	; 0x30
 8002516:	f88b 3000 	strb.w	r3, [fp]
 800251a:	465b      	mov	r3, fp
 800251c:	781a      	ldrb	r2, [r3, #0]
 800251e:	3201      	adds	r2, #1
 8002520:	701a      	strb	r2, [r3, #0]
 8002522:	e78c      	b.n	800243e <_dtoa_r+0x5de>
 8002524:	461d      	mov	r5, r3
 8002526:	e7ea      	b.n	80024fe <_dtoa_r+0x69e>
 8002528:	2200      	movs	r2, #0
 800252a:	4b9b      	ldr	r3, [pc, #620]	; (8002798 <_dtoa_r+0x938>)
 800252c:	f7fe f86c 	bl	8000608 <__aeabi_dmul>
 8002530:	2200      	movs	r2, #0
 8002532:	2300      	movs	r3, #0
 8002534:	4606      	mov	r6, r0
 8002536:	460f      	mov	r7, r1
 8002538:	f7fe face 	bl	8000ad8 <__aeabi_dcmpeq>
 800253c:	2800      	cmp	r0, #0
 800253e:	d09a      	beq.n	8002476 <_dtoa_r+0x616>
 8002540:	e7cb      	b.n	80024da <_dtoa_r+0x67a>
 8002542:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002544:	2a00      	cmp	r2, #0
 8002546:	f000 808b 	beq.w	8002660 <_dtoa_r+0x800>
 800254a:	9a06      	ldr	r2, [sp, #24]
 800254c:	2a01      	cmp	r2, #1
 800254e:	dc6e      	bgt.n	800262e <_dtoa_r+0x7ce>
 8002550:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8002552:	2a00      	cmp	r2, #0
 8002554:	d067      	beq.n	8002626 <_dtoa_r+0x7c6>
 8002556:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800255a:	9f07      	ldr	r7, [sp, #28]
 800255c:	9d05      	ldr	r5, [sp, #20]
 800255e:	9a05      	ldr	r2, [sp, #20]
 8002560:	2101      	movs	r1, #1
 8002562:	441a      	add	r2, r3
 8002564:	4620      	mov	r0, r4
 8002566:	9205      	str	r2, [sp, #20]
 8002568:	4498      	add	r8, r3
 800256a:	f000 fb26 	bl	8002bba <__i2b>
 800256e:	4606      	mov	r6, r0
 8002570:	2d00      	cmp	r5, #0
 8002572:	dd0c      	ble.n	800258e <_dtoa_r+0x72e>
 8002574:	f1b8 0f00 	cmp.w	r8, #0
 8002578:	dd09      	ble.n	800258e <_dtoa_r+0x72e>
 800257a:	4545      	cmp	r5, r8
 800257c:	9a05      	ldr	r2, [sp, #20]
 800257e:	462b      	mov	r3, r5
 8002580:	bfa8      	it	ge
 8002582:	4643      	movge	r3, r8
 8002584:	1ad2      	subs	r2, r2, r3
 8002586:	9205      	str	r2, [sp, #20]
 8002588:	1aed      	subs	r5, r5, r3
 800258a:	eba8 0803 	sub.w	r8, r8, r3
 800258e:	9b07      	ldr	r3, [sp, #28]
 8002590:	b1eb      	cbz	r3, 80025ce <_dtoa_r+0x76e>
 8002592:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002594:	2b00      	cmp	r3, #0
 8002596:	d067      	beq.n	8002668 <_dtoa_r+0x808>
 8002598:	b18f      	cbz	r7, 80025be <_dtoa_r+0x75e>
 800259a:	4631      	mov	r1, r6
 800259c:	463a      	mov	r2, r7
 800259e:	4620      	mov	r0, r4
 80025a0:	f000 fbaa 	bl	8002cf8 <__pow5mult>
 80025a4:	9a04      	ldr	r2, [sp, #16]
 80025a6:	4601      	mov	r1, r0
 80025a8:	4606      	mov	r6, r0
 80025aa:	4620      	mov	r0, r4
 80025ac:	f000 fb0e 	bl	8002bcc <__multiply>
 80025b0:	9904      	ldr	r1, [sp, #16]
 80025b2:	9008      	str	r0, [sp, #32]
 80025b4:	4620      	mov	r0, r4
 80025b6:	f000 fa60 	bl	8002a7a <_Bfree>
 80025ba:	9b08      	ldr	r3, [sp, #32]
 80025bc:	9304      	str	r3, [sp, #16]
 80025be:	9b07      	ldr	r3, [sp, #28]
 80025c0:	1bda      	subs	r2, r3, r7
 80025c2:	d004      	beq.n	80025ce <_dtoa_r+0x76e>
 80025c4:	9904      	ldr	r1, [sp, #16]
 80025c6:	4620      	mov	r0, r4
 80025c8:	f000 fb96 	bl	8002cf8 <__pow5mult>
 80025cc:	9004      	str	r0, [sp, #16]
 80025ce:	2101      	movs	r1, #1
 80025d0:	4620      	mov	r0, r4
 80025d2:	f000 faf2 	bl	8002bba <__i2b>
 80025d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80025d8:	4607      	mov	r7, r0
 80025da:	2b00      	cmp	r3, #0
 80025dc:	f000 81d0 	beq.w	8002980 <_dtoa_r+0xb20>
 80025e0:	461a      	mov	r2, r3
 80025e2:	4601      	mov	r1, r0
 80025e4:	4620      	mov	r0, r4
 80025e6:	f000 fb87 	bl	8002cf8 <__pow5mult>
 80025ea:	9b06      	ldr	r3, [sp, #24]
 80025ec:	2b01      	cmp	r3, #1
 80025ee:	4607      	mov	r7, r0
 80025f0:	dc40      	bgt.n	8002674 <_dtoa_r+0x814>
 80025f2:	9b00      	ldr	r3, [sp, #0]
 80025f4:	2b00      	cmp	r3, #0
 80025f6:	d139      	bne.n	800266c <_dtoa_r+0x80c>
 80025f8:	9b01      	ldr	r3, [sp, #4]
 80025fa:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80025fe:	2b00      	cmp	r3, #0
 8002600:	d136      	bne.n	8002670 <_dtoa_r+0x810>
 8002602:	9b01      	ldr	r3, [sp, #4]
 8002604:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002608:	0d1b      	lsrs	r3, r3, #20
 800260a:	051b      	lsls	r3, r3, #20
 800260c:	b12b      	cbz	r3, 800261a <_dtoa_r+0x7ba>
 800260e:	9b05      	ldr	r3, [sp, #20]
 8002610:	3301      	adds	r3, #1
 8002612:	9305      	str	r3, [sp, #20]
 8002614:	f108 0801 	add.w	r8, r8, #1
 8002618:	2301      	movs	r3, #1
 800261a:	9307      	str	r3, [sp, #28]
 800261c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800261e:	2b00      	cmp	r3, #0
 8002620:	d12a      	bne.n	8002678 <_dtoa_r+0x818>
 8002622:	2001      	movs	r0, #1
 8002624:	e030      	b.n	8002688 <_dtoa_r+0x828>
 8002626:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8002628:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800262c:	e795      	b.n	800255a <_dtoa_r+0x6fa>
 800262e:	9b07      	ldr	r3, [sp, #28]
 8002630:	f109 37ff 	add.w	r7, r9, #4294967295
 8002634:	42bb      	cmp	r3, r7
 8002636:	bfbf      	itttt	lt
 8002638:	9b07      	ldrlt	r3, [sp, #28]
 800263a:	9707      	strlt	r7, [sp, #28]
 800263c:	1afa      	sublt	r2, r7, r3
 800263e:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 8002640:	bfbb      	ittet	lt
 8002642:	189b      	addlt	r3, r3, r2
 8002644:	930e      	strlt	r3, [sp, #56]	; 0x38
 8002646:	1bdf      	subge	r7, r3, r7
 8002648:	2700      	movlt	r7, #0
 800264a:	f1b9 0f00 	cmp.w	r9, #0
 800264e:	bfb5      	itete	lt
 8002650:	9b05      	ldrlt	r3, [sp, #20]
 8002652:	9d05      	ldrge	r5, [sp, #20]
 8002654:	eba3 0509 	sublt.w	r5, r3, r9
 8002658:	464b      	movge	r3, r9
 800265a:	bfb8      	it	lt
 800265c:	2300      	movlt	r3, #0
 800265e:	e77e      	b.n	800255e <_dtoa_r+0x6fe>
 8002660:	9f07      	ldr	r7, [sp, #28]
 8002662:	9d05      	ldr	r5, [sp, #20]
 8002664:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8002666:	e783      	b.n	8002570 <_dtoa_r+0x710>
 8002668:	9a07      	ldr	r2, [sp, #28]
 800266a:	e7ab      	b.n	80025c4 <_dtoa_r+0x764>
 800266c:	2300      	movs	r3, #0
 800266e:	e7d4      	b.n	800261a <_dtoa_r+0x7ba>
 8002670:	9b00      	ldr	r3, [sp, #0]
 8002672:	e7d2      	b.n	800261a <_dtoa_r+0x7ba>
 8002674:	2300      	movs	r3, #0
 8002676:	9307      	str	r3, [sp, #28]
 8002678:	693b      	ldr	r3, [r7, #16]
 800267a:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 800267e:	6918      	ldr	r0, [r3, #16]
 8002680:	f000 fa4d 	bl	8002b1e <__hi0bits>
 8002684:	f1c0 0020 	rsb	r0, r0, #32
 8002688:	4440      	add	r0, r8
 800268a:	f010 001f 	ands.w	r0, r0, #31
 800268e:	d047      	beq.n	8002720 <_dtoa_r+0x8c0>
 8002690:	f1c0 0320 	rsb	r3, r0, #32
 8002694:	2b04      	cmp	r3, #4
 8002696:	dd3b      	ble.n	8002710 <_dtoa_r+0x8b0>
 8002698:	9b05      	ldr	r3, [sp, #20]
 800269a:	f1c0 001c 	rsb	r0, r0, #28
 800269e:	4403      	add	r3, r0
 80026a0:	9305      	str	r3, [sp, #20]
 80026a2:	4405      	add	r5, r0
 80026a4:	4480      	add	r8, r0
 80026a6:	9b05      	ldr	r3, [sp, #20]
 80026a8:	2b00      	cmp	r3, #0
 80026aa:	dd05      	ble.n	80026b8 <_dtoa_r+0x858>
 80026ac:	461a      	mov	r2, r3
 80026ae:	9904      	ldr	r1, [sp, #16]
 80026b0:	4620      	mov	r0, r4
 80026b2:	f000 fb6f 	bl	8002d94 <__lshift>
 80026b6:	9004      	str	r0, [sp, #16]
 80026b8:	f1b8 0f00 	cmp.w	r8, #0
 80026bc:	dd05      	ble.n	80026ca <_dtoa_r+0x86a>
 80026be:	4639      	mov	r1, r7
 80026c0:	4642      	mov	r2, r8
 80026c2:	4620      	mov	r0, r4
 80026c4:	f000 fb66 	bl	8002d94 <__lshift>
 80026c8:	4607      	mov	r7, r0
 80026ca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80026cc:	b353      	cbz	r3, 8002724 <_dtoa_r+0x8c4>
 80026ce:	4639      	mov	r1, r7
 80026d0:	9804      	ldr	r0, [sp, #16]
 80026d2:	f000 fbb3 	bl	8002e3c <__mcmp>
 80026d6:	2800      	cmp	r0, #0
 80026d8:	da24      	bge.n	8002724 <_dtoa_r+0x8c4>
 80026da:	2300      	movs	r3, #0
 80026dc:	220a      	movs	r2, #10
 80026de:	9904      	ldr	r1, [sp, #16]
 80026e0:	4620      	mov	r0, r4
 80026e2:	f000 f9e1 	bl	8002aa8 <__multadd>
 80026e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80026e8:	9004      	str	r0, [sp, #16]
 80026ea:	f10a 3aff 	add.w	sl, sl, #4294967295
 80026ee:	2b00      	cmp	r3, #0
 80026f0:	f000 814d 	beq.w	800298e <_dtoa_r+0xb2e>
 80026f4:	2300      	movs	r3, #0
 80026f6:	4631      	mov	r1, r6
 80026f8:	220a      	movs	r2, #10
 80026fa:	4620      	mov	r0, r4
 80026fc:	f000 f9d4 	bl	8002aa8 <__multadd>
 8002700:	9b02      	ldr	r3, [sp, #8]
 8002702:	2b00      	cmp	r3, #0
 8002704:	4606      	mov	r6, r0
 8002706:	dc4f      	bgt.n	80027a8 <_dtoa_r+0x948>
 8002708:	9b06      	ldr	r3, [sp, #24]
 800270a:	2b02      	cmp	r3, #2
 800270c:	dd4c      	ble.n	80027a8 <_dtoa_r+0x948>
 800270e:	e011      	b.n	8002734 <_dtoa_r+0x8d4>
 8002710:	d0c9      	beq.n	80026a6 <_dtoa_r+0x846>
 8002712:	9a05      	ldr	r2, [sp, #20]
 8002714:	331c      	adds	r3, #28
 8002716:	441a      	add	r2, r3
 8002718:	9205      	str	r2, [sp, #20]
 800271a:	441d      	add	r5, r3
 800271c:	4498      	add	r8, r3
 800271e:	e7c2      	b.n	80026a6 <_dtoa_r+0x846>
 8002720:	4603      	mov	r3, r0
 8002722:	e7f6      	b.n	8002712 <_dtoa_r+0x8b2>
 8002724:	f1b9 0f00 	cmp.w	r9, #0
 8002728:	dc38      	bgt.n	800279c <_dtoa_r+0x93c>
 800272a:	9b06      	ldr	r3, [sp, #24]
 800272c:	2b02      	cmp	r3, #2
 800272e:	dd35      	ble.n	800279c <_dtoa_r+0x93c>
 8002730:	f8cd 9008 	str.w	r9, [sp, #8]
 8002734:	9b02      	ldr	r3, [sp, #8]
 8002736:	b963      	cbnz	r3, 8002752 <_dtoa_r+0x8f2>
 8002738:	4639      	mov	r1, r7
 800273a:	2205      	movs	r2, #5
 800273c:	4620      	mov	r0, r4
 800273e:	f000 f9b3 	bl	8002aa8 <__multadd>
 8002742:	4601      	mov	r1, r0
 8002744:	4607      	mov	r7, r0
 8002746:	9804      	ldr	r0, [sp, #16]
 8002748:	f000 fb78 	bl	8002e3c <__mcmp>
 800274c:	2800      	cmp	r0, #0
 800274e:	f73f adcc 	bgt.w	80022ea <_dtoa_r+0x48a>
 8002752:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002754:	465d      	mov	r5, fp
 8002756:	ea6f 0a03 	mvn.w	sl, r3
 800275a:	f04f 0900 	mov.w	r9, #0
 800275e:	4639      	mov	r1, r7
 8002760:	4620      	mov	r0, r4
 8002762:	f000 f98a 	bl	8002a7a <_Bfree>
 8002766:	2e00      	cmp	r6, #0
 8002768:	f43f aeb7 	beq.w	80024da <_dtoa_r+0x67a>
 800276c:	f1b9 0f00 	cmp.w	r9, #0
 8002770:	d005      	beq.n	800277e <_dtoa_r+0x91e>
 8002772:	45b1      	cmp	r9, r6
 8002774:	d003      	beq.n	800277e <_dtoa_r+0x91e>
 8002776:	4649      	mov	r1, r9
 8002778:	4620      	mov	r0, r4
 800277a:	f000 f97e 	bl	8002a7a <_Bfree>
 800277e:	4631      	mov	r1, r6
 8002780:	4620      	mov	r0, r4
 8002782:	f000 f97a 	bl	8002a7a <_Bfree>
 8002786:	e6a8      	b.n	80024da <_dtoa_r+0x67a>
 8002788:	2700      	movs	r7, #0
 800278a:	463e      	mov	r6, r7
 800278c:	e7e1      	b.n	8002752 <_dtoa_r+0x8f2>
 800278e:	f8dd a020 	ldr.w	sl, [sp, #32]
 8002792:	463e      	mov	r6, r7
 8002794:	e5a9      	b.n	80022ea <_dtoa_r+0x48a>
 8002796:	bf00      	nop
 8002798:	40240000 	.word	0x40240000
 800279c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800279e:	f8cd 9008 	str.w	r9, [sp, #8]
 80027a2:	2b00      	cmp	r3, #0
 80027a4:	f000 80fa 	beq.w	800299c <_dtoa_r+0xb3c>
 80027a8:	2d00      	cmp	r5, #0
 80027aa:	dd05      	ble.n	80027b8 <_dtoa_r+0x958>
 80027ac:	4631      	mov	r1, r6
 80027ae:	462a      	mov	r2, r5
 80027b0:	4620      	mov	r0, r4
 80027b2:	f000 faef 	bl	8002d94 <__lshift>
 80027b6:	4606      	mov	r6, r0
 80027b8:	9b07      	ldr	r3, [sp, #28]
 80027ba:	2b00      	cmp	r3, #0
 80027bc:	d04c      	beq.n	8002858 <_dtoa_r+0x9f8>
 80027be:	6871      	ldr	r1, [r6, #4]
 80027c0:	4620      	mov	r0, r4
 80027c2:	f000 f926 	bl	8002a12 <_Balloc>
 80027c6:	6932      	ldr	r2, [r6, #16]
 80027c8:	3202      	adds	r2, #2
 80027ca:	4605      	mov	r5, r0
 80027cc:	0092      	lsls	r2, r2, #2
 80027ce:	f106 010c 	add.w	r1, r6, #12
 80027d2:	300c      	adds	r0, #12
 80027d4:	f000 f912 	bl	80029fc <memcpy>
 80027d8:	2201      	movs	r2, #1
 80027da:	4629      	mov	r1, r5
 80027dc:	4620      	mov	r0, r4
 80027de:	f000 fad9 	bl	8002d94 <__lshift>
 80027e2:	9b00      	ldr	r3, [sp, #0]
 80027e4:	f8cd b014 	str.w	fp, [sp, #20]
 80027e8:	f003 0301 	and.w	r3, r3, #1
 80027ec:	46b1      	mov	r9, r6
 80027ee:	9307      	str	r3, [sp, #28]
 80027f0:	4606      	mov	r6, r0
 80027f2:	4639      	mov	r1, r7
 80027f4:	9804      	ldr	r0, [sp, #16]
 80027f6:	f7ff faa5 	bl	8001d44 <quorem>
 80027fa:	4649      	mov	r1, r9
 80027fc:	4605      	mov	r5, r0
 80027fe:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8002802:	9804      	ldr	r0, [sp, #16]
 8002804:	f000 fb1a 	bl	8002e3c <__mcmp>
 8002808:	4632      	mov	r2, r6
 800280a:	9000      	str	r0, [sp, #0]
 800280c:	4639      	mov	r1, r7
 800280e:	4620      	mov	r0, r4
 8002810:	f000 fb2e 	bl	8002e70 <__mdiff>
 8002814:	68c3      	ldr	r3, [r0, #12]
 8002816:	4602      	mov	r2, r0
 8002818:	bb03      	cbnz	r3, 800285c <_dtoa_r+0x9fc>
 800281a:	4601      	mov	r1, r0
 800281c:	9008      	str	r0, [sp, #32]
 800281e:	9804      	ldr	r0, [sp, #16]
 8002820:	f000 fb0c 	bl	8002e3c <__mcmp>
 8002824:	9a08      	ldr	r2, [sp, #32]
 8002826:	4603      	mov	r3, r0
 8002828:	4611      	mov	r1, r2
 800282a:	4620      	mov	r0, r4
 800282c:	9308      	str	r3, [sp, #32]
 800282e:	f000 f924 	bl	8002a7a <_Bfree>
 8002832:	9b08      	ldr	r3, [sp, #32]
 8002834:	b9a3      	cbnz	r3, 8002860 <_dtoa_r+0xa00>
 8002836:	9a06      	ldr	r2, [sp, #24]
 8002838:	b992      	cbnz	r2, 8002860 <_dtoa_r+0xa00>
 800283a:	9a07      	ldr	r2, [sp, #28]
 800283c:	b982      	cbnz	r2, 8002860 <_dtoa_r+0xa00>
 800283e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8002842:	d029      	beq.n	8002898 <_dtoa_r+0xa38>
 8002844:	9b00      	ldr	r3, [sp, #0]
 8002846:	2b00      	cmp	r3, #0
 8002848:	dd01      	ble.n	800284e <_dtoa_r+0x9ee>
 800284a:	f105 0831 	add.w	r8, r5, #49	; 0x31
 800284e:	9b05      	ldr	r3, [sp, #20]
 8002850:	1c5d      	adds	r5, r3, #1
 8002852:	f883 8000 	strb.w	r8, [r3]
 8002856:	e782      	b.n	800275e <_dtoa_r+0x8fe>
 8002858:	4630      	mov	r0, r6
 800285a:	e7c2      	b.n	80027e2 <_dtoa_r+0x982>
 800285c:	2301      	movs	r3, #1
 800285e:	e7e3      	b.n	8002828 <_dtoa_r+0x9c8>
 8002860:	9a00      	ldr	r2, [sp, #0]
 8002862:	2a00      	cmp	r2, #0
 8002864:	db04      	blt.n	8002870 <_dtoa_r+0xa10>
 8002866:	d125      	bne.n	80028b4 <_dtoa_r+0xa54>
 8002868:	9a06      	ldr	r2, [sp, #24]
 800286a:	bb1a      	cbnz	r2, 80028b4 <_dtoa_r+0xa54>
 800286c:	9a07      	ldr	r2, [sp, #28]
 800286e:	bb0a      	cbnz	r2, 80028b4 <_dtoa_r+0xa54>
 8002870:	2b00      	cmp	r3, #0
 8002872:	ddec      	ble.n	800284e <_dtoa_r+0x9ee>
 8002874:	2201      	movs	r2, #1
 8002876:	9904      	ldr	r1, [sp, #16]
 8002878:	4620      	mov	r0, r4
 800287a:	f000 fa8b 	bl	8002d94 <__lshift>
 800287e:	4639      	mov	r1, r7
 8002880:	9004      	str	r0, [sp, #16]
 8002882:	f000 fadb 	bl	8002e3c <__mcmp>
 8002886:	2800      	cmp	r0, #0
 8002888:	dc03      	bgt.n	8002892 <_dtoa_r+0xa32>
 800288a:	d1e0      	bne.n	800284e <_dtoa_r+0x9ee>
 800288c:	f018 0f01 	tst.w	r8, #1
 8002890:	d0dd      	beq.n	800284e <_dtoa_r+0x9ee>
 8002892:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8002896:	d1d8      	bne.n	800284a <_dtoa_r+0x9ea>
 8002898:	9b05      	ldr	r3, [sp, #20]
 800289a:	9a05      	ldr	r2, [sp, #20]
 800289c:	1c5d      	adds	r5, r3, #1
 800289e:	2339      	movs	r3, #57	; 0x39
 80028a0:	7013      	strb	r3, [r2, #0]
 80028a2:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80028a6:	2b39      	cmp	r3, #57	; 0x39
 80028a8:	f105 32ff 	add.w	r2, r5, #4294967295
 80028ac:	d04f      	beq.n	800294e <_dtoa_r+0xaee>
 80028ae:	3301      	adds	r3, #1
 80028b0:	7013      	strb	r3, [r2, #0]
 80028b2:	e754      	b.n	800275e <_dtoa_r+0x8fe>
 80028b4:	9a05      	ldr	r2, [sp, #20]
 80028b6:	2b00      	cmp	r3, #0
 80028b8:	f102 0501 	add.w	r5, r2, #1
 80028bc:	dd06      	ble.n	80028cc <_dtoa_r+0xa6c>
 80028be:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 80028c2:	d0e9      	beq.n	8002898 <_dtoa_r+0xa38>
 80028c4:	f108 0801 	add.w	r8, r8, #1
 80028c8:	9b05      	ldr	r3, [sp, #20]
 80028ca:	e7c2      	b.n	8002852 <_dtoa_r+0x9f2>
 80028cc:	9a02      	ldr	r2, [sp, #8]
 80028ce:	f805 8c01 	strb.w	r8, [r5, #-1]
 80028d2:	eba5 030b 	sub.w	r3, r5, fp
 80028d6:	4293      	cmp	r3, r2
 80028d8:	d021      	beq.n	800291e <_dtoa_r+0xabe>
 80028da:	2300      	movs	r3, #0
 80028dc:	220a      	movs	r2, #10
 80028de:	9904      	ldr	r1, [sp, #16]
 80028e0:	4620      	mov	r0, r4
 80028e2:	f000 f8e1 	bl	8002aa8 <__multadd>
 80028e6:	45b1      	cmp	r9, r6
 80028e8:	9004      	str	r0, [sp, #16]
 80028ea:	f04f 0300 	mov.w	r3, #0
 80028ee:	f04f 020a 	mov.w	r2, #10
 80028f2:	4649      	mov	r1, r9
 80028f4:	4620      	mov	r0, r4
 80028f6:	d105      	bne.n	8002904 <_dtoa_r+0xaa4>
 80028f8:	f000 f8d6 	bl	8002aa8 <__multadd>
 80028fc:	4681      	mov	r9, r0
 80028fe:	4606      	mov	r6, r0
 8002900:	9505      	str	r5, [sp, #20]
 8002902:	e776      	b.n	80027f2 <_dtoa_r+0x992>
 8002904:	f000 f8d0 	bl	8002aa8 <__multadd>
 8002908:	4631      	mov	r1, r6
 800290a:	4681      	mov	r9, r0
 800290c:	2300      	movs	r3, #0
 800290e:	220a      	movs	r2, #10
 8002910:	4620      	mov	r0, r4
 8002912:	f000 f8c9 	bl	8002aa8 <__multadd>
 8002916:	4606      	mov	r6, r0
 8002918:	e7f2      	b.n	8002900 <_dtoa_r+0xaa0>
 800291a:	f04f 0900 	mov.w	r9, #0
 800291e:	2201      	movs	r2, #1
 8002920:	9904      	ldr	r1, [sp, #16]
 8002922:	4620      	mov	r0, r4
 8002924:	f000 fa36 	bl	8002d94 <__lshift>
 8002928:	4639      	mov	r1, r7
 800292a:	9004      	str	r0, [sp, #16]
 800292c:	f000 fa86 	bl	8002e3c <__mcmp>
 8002930:	2800      	cmp	r0, #0
 8002932:	dcb6      	bgt.n	80028a2 <_dtoa_r+0xa42>
 8002934:	d102      	bne.n	800293c <_dtoa_r+0xadc>
 8002936:	f018 0f01 	tst.w	r8, #1
 800293a:	d1b2      	bne.n	80028a2 <_dtoa_r+0xa42>
 800293c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002940:	2b30      	cmp	r3, #48	; 0x30
 8002942:	f105 32ff 	add.w	r2, r5, #4294967295
 8002946:	f47f af0a 	bne.w	800275e <_dtoa_r+0x8fe>
 800294a:	4615      	mov	r5, r2
 800294c:	e7f6      	b.n	800293c <_dtoa_r+0xadc>
 800294e:	4593      	cmp	fp, r2
 8002950:	d105      	bne.n	800295e <_dtoa_r+0xafe>
 8002952:	2331      	movs	r3, #49	; 0x31
 8002954:	f10a 0a01 	add.w	sl, sl, #1
 8002958:	f88b 3000 	strb.w	r3, [fp]
 800295c:	e6ff      	b.n	800275e <_dtoa_r+0x8fe>
 800295e:	4615      	mov	r5, r2
 8002960:	e79f      	b.n	80028a2 <_dtoa_r+0xa42>
 8002962:	f8df b064 	ldr.w	fp, [pc, #100]	; 80029c8 <_dtoa_r+0xb68>
 8002966:	e007      	b.n	8002978 <_dtoa_r+0xb18>
 8002968:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800296a:	f8df b060 	ldr.w	fp, [pc, #96]	; 80029cc <_dtoa_r+0xb6c>
 800296e:	b11b      	cbz	r3, 8002978 <_dtoa_r+0xb18>
 8002970:	f10b 0308 	add.w	r3, fp, #8
 8002974:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8002976:	6013      	str	r3, [r2, #0]
 8002978:	4658      	mov	r0, fp
 800297a:	b017      	add	sp, #92	; 0x5c
 800297c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002980:	9b06      	ldr	r3, [sp, #24]
 8002982:	2b01      	cmp	r3, #1
 8002984:	f77f ae35 	ble.w	80025f2 <_dtoa_r+0x792>
 8002988:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800298a:	9307      	str	r3, [sp, #28]
 800298c:	e649      	b.n	8002622 <_dtoa_r+0x7c2>
 800298e:	9b02      	ldr	r3, [sp, #8]
 8002990:	2b00      	cmp	r3, #0
 8002992:	dc03      	bgt.n	800299c <_dtoa_r+0xb3c>
 8002994:	9b06      	ldr	r3, [sp, #24]
 8002996:	2b02      	cmp	r3, #2
 8002998:	f73f aecc 	bgt.w	8002734 <_dtoa_r+0x8d4>
 800299c:	465d      	mov	r5, fp
 800299e:	4639      	mov	r1, r7
 80029a0:	9804      	ldr	r0, [sp, #16]
 80029a2:	f7ff f9cf 	bl	8001d44 <quorem>
 80029a6:	f100 0830 	add.w	r8, r0, #48	; 0x30
 80029aa:	f805 8b01 	strb.w	r8, [r5], #1
 80029ae:	9a02      	ldr	r2, [sp, #8]
 80029b0:	eba5 030b 	sub.w	r3, r5, fp
 80029b4:	429a      	cmp	r2, r3
 80029b6:	ddb0      	ble.n	800291a <_dtoa_r+0xaba>
 80029b8:	2300      	movs	r3, #0
 80029ba:	220a      	movs	r2, #10
 80029bc:	9904      	ldr	r1, [sp, #16]
 80029be:	4620      	mov	r0, r4
 80029c0:	f000 f872 	bl	8002aa8 <__multadd>
 80029c4:	9004      	str	r0, [sp, #16]
 80029c6:	e7ea      	b.n	800299e <_dtoa_r+0xb3e>
 80029c8:	080034f8 	.word	0x080034f8
 80029cc:	0800351c 	.word	0x0800351c

080029d0 <_localeconv_r>:
 80029d0:	4b04      	ldr	r3, [pc, #16]	; (80029e4 <_localeconv_r+0x14>)
 80029d2:	681b      	ldr	r3, [r3, #0]
 80029d4:	6a18      	ldr	r0, [r3, #32]
 80029d6:	4b04      	ldr	r3, [pc, #16]	; (80029e8 <_localeconv_r+0x18>)
 80029d8:	2800      	cmp	r0, #0
 80029da:	bf08      	it	eq
 80029dc:	4618      	moveq	r0, r3
 80029de:	30f0      	adds	r0, #240	; 0xf0
 80029e0:	4770      	bx	lr
 80029e2:	bf00      	nop
 80029e4:	20000000 	.word	0x20000000
 80029e8:	20000064 	.word	0x20000064

080029ec <malloc>:
 80029ec:	4b02      	ldr	r3, [pc, #8]	; (80029f8 <malloc+0xc>)
 80029ee:	4601      	mov	r1, r0
 80029f0:	6818      	ldr	r0, [r3, #0]
 80029f2:	f000 bb45 	b.w	8003080 <_malloc_r>
 80029f6:	bf00      	nop
 80029f8:	20000000 	.word	0x20000000

080029fc <memcpy>:
 80029fc:	b510      	push	{r4, lr}
 80029fe:	1e43      	subs	r3, r0, #1
 8002a00:	440a      	add	r2, r1
 8002a02:	4291      	cmp	r1, r2
 8002a04:	d100      	bne.n	8002a08 <memcpy+0xc>
 8002a06:	bd10      	pop	{r4, pc}
 8002a08:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002a0c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002a10:	e7f7      	b.n	8002a02 <memcpy+0x6>

08002a12 <_Balloc>:
 8002a12:	b570      	push	{r4, r5, r6, lr}
 8002a14:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8002a16:	4604      	mov	r4, r0
 8002a18:	460e      	mov	r6, r1
 8002a1a:	b93d      	cbnz	r5, 8002a2c <_Balloc+0x1a>
 8002a1c:	2010      	movs	r0, #16
 8002a1e:	f7ff ffe5 	bl	80029ec <malloc>
 8002a22:	6260      	str	r0, [r4, #36]	; 0x24
 8002a24:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002a28:	6005      	str	r5, [r0, #0]
 8002a2a:	60c5      	str	r5, [r0, #12]
 8002a2c:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8002a2e:	68eb      	ldr	r3, [r5, #12]
 8002a30:	b183      	cbz	r3, 8002a54 <_Balloc+0x42>
 8002a32:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002a34:	68db      	ldr	r3, [r3, #12]
 8002a36:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8002a3a:	b9b8      	cbnz	r0, 8002a6c <_Balloc+0x5a>
 8002a3c:	2101      	movs	r1, #1
 8002a3e:	fa01 f506 	lsl.w	r5, r1, r6
 8002a42:	1d6a      	adds	r2, r5, #5
 8002a44:	0092      	lsls	r2, r2, #2
 8002a46:	4620      	mov	r0, r4
 8002a48:	f000 fabe 	bl	8002fc8 <_calloc_r>
 8002a4c:	b160      	cbz	r0, 8002a68 <_Balloc+0x56>
 8002a4e:	e9c0 6501 	strd	r6, r5, [r0, #4]
 8002a52:	e00e      	b.n	8002a72 <_Balloc+0x60>
 8002a54:	2221      	movs	r2, #33	; 0x21
 8002a56:	2104      	movs	r1, #4
 8002a58:	4620      	mov	r0, r4
 8002a5a:	f000 fab5 	bl	8002fc8 <_calloc_r>
 8002a5e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002a60:	60e8      	str	r0, [r5, #12]
 8002a62:	68db      	ldr	r3, [r3, #12]
 8002a64:	2b00      	cmp	r3, #0
 8002a66:	d1e4      	bne.n	8002a32 <_Balloc+0x20>
 8002a68:	2000      	movs	r0, #0
 8002a6a:	bd70      	pop	{r4, r5, r6, pc}
 8002a6c:	6802      	ldr	r2, [r0, #0]
 8002a6e:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8002a72:	2300      	movs	r3, #0
 8002a74:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8002a78:	e7f7      	b.n	8002a6a <_Balloc+0x58>

08002a7a <_Bfree>:
 8002a7a:	b570      	push	{r4, r5, r6, lr}
 8002a7c:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8002a7e:	4606      	mov	r6, r0
 8002a80:	460d      	mov	r5, r1
 8002a82:	b93c      	cbnz	r4, 8002a94 <_Bfree+0x1a>
 8002a84:	2010      	movs	r0, #16
 8002a86:	f7ff ffb1 	bl	80029ec <malloc>
 8002a8a:	6270      	str	r0, [r6, #36]	; 0x24
 8002a8c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8002a90:	6004      	str	r4, [r0, #0]
 8002a92:	60c4      	str	r4, [r0, #12]
 8002a94:	b13d      	cbz	r5, 8002aa6 <_Bfree+0x2c>
 8002a96:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8002a98:	686a      	ldr	r2, [r5, #4]
 8002a9a:	68db      	ldr	r3, [r3, #12]
 8002a9c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8002aa0:	6029      	str	r1, [r5, #0]
 8002aa2:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8002aa6:	bd70      	pop	{r4, r5, r6, pc}

08002aa8 <__multadd>:
 8002aa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002aac:	690d      	ldr	r5, [r1, #16]
 8002aae:	461f      	mov	r7, r3
 8002ab0:	4606      	mov	r6, r0
 8002ab2:	460c      	mov	r4, r1
 8002ab4:	f101 0c14 	add.w	ip, r1, #20
 8002ab8:	2300      	movs	r3, #0
 8002aba:	f8dc 0000 	ldr.w	r0, [ip]
 8002abe:	b281      	uxth	r1, r0
 8002ac0:	fb02 7101 	mla	r1, r2, r1, r7
 8002ac4:	0c0f      	lsrs	r7, r1, #16
 8002ac6:	0c00      	lsrs	r0, r0, #16
 8002ac8:	fb02 7000 	mla	r0, r2, r0, r7
 8002acc:	b289      	uxth	r1, r1
 8002ace:	3301      	adds	r3, #1
 8002ad0:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8002ad4:	429d      	cmp	r5, r3
 8002ad6:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8002ada:	f84c 1b04 	str.w	r1, [ip], #4
 8002ade:	dcec      	bgt.n	8002aba <__multadd+0x12>
 8002ae0:	b1d7      	cbz	r7, 8002b18 <__multadd+0x70>
 8002ae2:	68a3      	ldr	r3, [r4, #8]
 8002ae4:	42ab      	cmp	r3, r5
 8002ae6:	dc12      	bgt.n	8002b0e <__multadd+0x66>
 8002ae8:	6861      	ldr	r1, [r4, #4]
 8002aea:	4630      	mov	r0, r6
 8002aec:	3101      	adds	r1, #1
 8002aee:	f7ff ff90 	bl	8002a12 <_Balloc>
 8002af2:	6922      	ldr	r2, [r4, #16]
 8002af4:	3202      	adds	r2, #2
 8002af6:	f104 010c 	add.w	r1, r4, #12
 8002afa:	4680      	mov	r8, r0
 8002afc:	0092      	lsls	r2, r2, #2
 8002afe:	300c      	adds	r0, #12
 8002b00:	f7ff ff7c 	bl	80029fc <memcpy>
 8002b04:	4621      	mov	r1, r4
 8002b06:	4630      	mov	r0, r6
 8002b08:	f7ff ffb7 	bl	8002a7a <_Bfree>
 8002b0c:	4644      	mov	r4, r8
 8002b0e:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8002b12:	3501      	adds	r5, #1
 8002b14:	615f      	str	r7, [r3, #20]
 8002b16:	6125      	str	r5, [r4, #16]
 8002b18:	4620      	mov	r0, r4
 8002b1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08002b1e <__hi0bits>:
 8002b1e:	0c02      	lsrs	r2, r0, #16
 8002b20:	0412      	lsls	r2, r2, #16
 8002b22:	4603      	mov	r3, r0
 8002b24:	b9b2      	cbnz	r2, 8002b54 <__hi0bits+0x36>
 8002b26:	0403      	lsls	r3, r0, #16
 8002b28:	2010      	movs	r0, #16
 8002b2a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8002b2e:	bf04      	itt	eq
 8002b30:	021b      	lsleq	r3, r3, #8
 8002b32:	3008      	addeq	r0, #8
 8002b34:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8002b38:	bf04      	itt	eq
 8002b3a:	011b      	lsleq	r3, r3, #4
 8002b3c:	3004      	addeq	r0, #4
 8002b3e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8002b42:	bf04      	itt	eq
 8002b44:	009b      	lsleq	r3, r3, #2
 8002b46:	3002      	addeq	r0, #2
 8002b48:	2b00      	cmp	r3, #0
 8002b4a:	db06      	blt.n	8002b5a <__hi0bits+0x3c>
 8002b4c:	005b      	lsls	r3, r3, #1
 8002b4e:	d503      	bpl.n	8002b58 <__hi0bits+0x3a>
 8002b50:	3001      	adds	r0, #1
 8002b52:	4770      	bx	lr
 8002b54:	2000      	movs	r0, #0
 8002b56:	e7e8      	b.n	8002b2a <__hi0bits+0xc>
 8002b58:	2020      	movs	r0, #32
 8002b5a:	4770      	bx	lr

08002b5c <__lo0bits>:
 8002b5c:	6803      	ldr	r3, [r0, #0]
 8002b5e:	f013 0207 	ands.w	r2, r3, #7
 8002b62:	4601      	mov	r1, r0
 8002b64:	d00b      	beq.n	8002b7e <__lo0bits+0x22>
 8002b66:	07da      	lsls	r2, r3, #31
 8002b68:	d423      	bmi.n	8002bb2 <__lo0bits+0x56>
 8002b6a:	0798      	lsls	r0, r3, #30
 8002b6c:	bf49      	itett	mi
 8002b6e:	085b      	lsrmi	r3, r3, #1
 8002b70:	089b      	lsrpl	r3, r3, #2
 8002b72:	2001      	movmi	r0, #1
 8002b74:	600b      	strmi	r3, [r1, #0]
 8002b76:	bf5c      	itt	pl
 8002b78:	600b      	strpl	r3, [r1, #0]
 8002b7a:	2002      	movpl	r0, #2
 8002b7c:	4770      	bx	lr
 8002b7e:	b298      	uxth	r0, r3
 8002b80:	b9a8      	cbnz	r0, 8002bae <__lo0bits+0x52>
 8002b82:	0c1b      	lsrs	r3, r3, #16
 8002b84:	2010      	movs	r0, #16
 8002b86:	f013 0fff 	tst.w	r3, #255	; 0xff
 8002b8a:	bf04      	itt	eq
 8002b8c:	0a1b      	lsreq	r3, r3, #8
 8002b8e:	3008      	addeq	r0, #8
 8002b90:	071a      	lsls	r2, r3, #28
 8002b92:	bf04      	itt	eq
 8002b94:	091b      	lsreq	r3, r3, #4
 8002b96:	3004      	addeq	r0, #4
 8002b98:	079a      	lsls	r2, r3, #30
 8002b9a:	bf04      	itt	eq
 8002b9c:	089b      	lsreq	r3, r3, #2
 8002b9e:	3002      	addeq	r0, #2
 8002ba0:	07da      	lsls	r2, r3, #31
 8002ba2:	d402      	bmi.n	8002baa <__lo0bits+0x4e>
 8002ba4:	085b      	lsrs	r3, r3, #1
 8002ba6:	d006      	beq.n	8002bb6 <__lo0bits+0x5a>
 8002ba8:	3001      	adds	r0, #1
 8002baa:	600b      	str	r3, [r1, #0]
 8002bac:	4770      	bx	lr
 8002bae:	4610      	mov	r0, r2
 8002bb0:	e7e9      	b.n	8002b86 <__lo0bits+0x2a>
 8002bb2:	2000      	movs	r0, #0
 8002bb4:	4770      	bx	lr
 8002bb6:	2020      	movs	r0, #32
 8002bb8:	4770      	bx	lr

08002bba <__i2b>:
 8002bba:	b510      	push	{r4, lr}
 8002bbc:	460c      	mov	r4, r1
 8002bbe:	2101      	movs	r1, #1
 8002bc0:	f7ff ff27 	bl	8002a12 <_Balloc>
 8002bc4:	2201      	movs	r2, #1
 8002bc6:	6144      	str	r4, [r0, #20]
 8002bc8:	6102      	str	r2, [r0, #16]
 8002bca:	bd10      	pop	{r4, pc}

08002bcc <__multiply>:
 8002bcc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002bd0:	4614      	mov	r4, r2
 8002bd2:	690a      	ldr	r2, [r1, #16]
 8002bd4:	6923      	ldr	r3, [r4, #16]
 8002bd6:	429a      	cmp	r2, r3
 8002bd8:	bfb8      	it	lt
 8002bda:	460b      	movlt	r3, r1
 8002bdc:	4688      	mov	r8, r1
 8002bde:	bfbc      	itt	lt
 8002be0:	46a0      	movlt	r8, r4
 8002be2:	461c      	movlt	r4, r3
 8002be4:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8002be8:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8002bec:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8002bf0:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8002bf4:	eb07 0609 	add.w	r6, r7, r9
 8002bf8:	42b3      	cmp	r3, r6
 8002bfa:	bfb8      	it	lt
 8002bfc:	3101      	addlt	r1, #1
 8002bfe:	f7ff ff08 	bl	8002a12 <_Balloc>
 8002c02:	f100 0514 	add.w	r5, r0, #20
 8002c06:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 8002c0a:	462b      	mov	r3, r5
 8002c0c:	2200      	movs	r2, #0
 8002c0e:	4573      	cmp	r3, lr
 8002c10:	d316      	bcc.n	8002c40 <__multiply+0x74>
 8002c12:	f104 0214 	add.w	r2, r4, #20
 8002c16:	f108 0114 	add.w	r1, r8, #20
 8002c1a:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 8002c1e:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8002c22:	9300      	str	r3, [sp, #0]
 8002c24:	9b00      	ldr	r3, [sp, #0]
 8002c26:	9201      	str	r2, [sp, #4]
 8002c28:	4293      	cmp	r3, r2
 8002c2a:	d80c      	bhi.n	8002c46 <__multiply+0x7a>
 8002c2c:	2e00      	cmp	r6, #0
 8002c2e:	dd03      	ble.n	8002c38 <__multiply+0x6c>
 8002c30:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8002c34:	2b00      	cmp	r3, #0
 8002c36:	d05d      	beq.n	8002cf4 <__multiply+0x128>
 8002c38:	6106      	str	r6, [r0, #16]
 8002c3a:	b003      	add	sp, #12
 8002c3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c40:	f843 2b04 	str.w	r2, [r3], #4
 8002c44:	e7e3      	b.n	8002c0e <__multiply+0x42>
 8002c46:	f8b2 b000 	ldrh.w	fp, [r2]
 8002c4a:	f1bb 0f00 	cmp.w	fp, #0
 8002c4e:	d023      	beq.n	8002c98 <__multiply+0xcc>
 8002c50:	4689      	mov	r9, r1
 8002c52:	46ac      	mov	ip, r5
 8002c54:	f04f 0800 	mov.w	r8, #0
 8002c58:	f859 4b04 	ldr.w	r4, [r9], #4
 8002c5c:	f8dc a000 	ldr.w	sl, [ip]
 8002c60:	b2a3      	uxth	r3, r4
 8002c62:	fa1f fa8a 	uxth.w	sl, sl
 8002c66:	fb0b a303 	mla	r3, fp, r3, sl
 8002c6a:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8002c6e:	f8dc 4000 	ldr.w	r4, [ip]
 8002c72:	4443      	add	r3, r8
 8002c74:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8002c78:	fb0b 840a 	mla	r4, fp, sl, r8
 8002c7c:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8002c80:	46e2      	mov	sl, ip
 8002c82:	b29b      	uxth	r3, r3
 8002c84:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8002c88:	454f      	cmp	r7, r9
 8002c8a:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8002c8e:	f84a 3b04 	str.w	r3, [sl], #4
 8002c92:	d82b      	bhi.n	8002cec <__multiply+0x120>
 8002c94:	f8cc 8004 	str.w	r8, [ip, #4]
 8002c98:	9b01      	ldr	r3, [sp, #4]
 8002c9a:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 8002c9e:	3204      	adds	r2, #4
 8002ca0:	f1ba 0f00 	cmp.w	sl, #0
 8002ca4:	d020      	beq.n	8002ce8 <__multiply+0x11c>
 8002ca6:	682b      	ldr	r3, [r5, #0]
 8002ca8:	4689      	mov	r9, r1
 8002caa:	46a8      	mov	r8, r5
 8002cac:	f04f 0b00 	mov.w	fp, #0
 8002cb0:	f8b9 c000 	ldrh.w	ip, [r9]
 8002cb4:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 8002cb8:	fb0a 440c 	mla	r4, sl, ip, r4
 8002cbc:	445c      	add	r4, fp
 8002cbe:	46c4      	mov	ip, r8
 8002cc0:	b29b      	uxth	r3, r3
 8002cc2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8002cc6:	f84c 3b04 	str.w	r3, [ip], #4
 8002cca:	f859 3b04 	ldr.w	r3, [r9], #4
 8002cce:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 8002cd2:	0c1b      	lsrs	r3, r3, #16
 8002cd4:	fb0a b303 	mla	r3, sl, r3, fp
 8002cd8:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8002cdc:	454f      	cmp	r7, r9
 8002cde:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 8002ce2:	d805      	bhi.n	8002cf0 <__multiply+0x124>
 8002ce4:	f8c8 3004 	str.w	r3, [r8, #4]
 8002ce8:	3504      	adds	r5, #4
 8002cea:	e79b      	b.n	8002c24 <__multiply+0x58>
 8002cec:	46d4      	mov	ip, sl
 8002cee:	e7b3      	b.n	8002c58 <__multiply+0x8c>
 8002cf0:	46e0      	mov	r8, ip
 8002cf2:	e7dd      	b.n	8002cb0 <__multiply+0xe4>
 8002cf4:	3e01      	subs	r6, #1
 8002cf6:	e799      	b.n	8002c2c <__multiply+0x60>

08002cf8 <__pow5mult>:
 8002cf8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002cfc:	4615      	mov	r5, r2
 8002cfe:	f012 0203 	ands.w	r2, r2, #3
 8002d02:	4606      	mov	r6, r0
 8002d04:	460f      	mov	r7, r1
 8002d06:	d007      	beq.n	8002d18 <__pow5mult+0x20>
 8002d08:	3a01      	subs	r2, #1
 8002d0a:	4c21      	ldr	r4, [pc, #132]	; (8002d90 <__pow5mult+0x98>)
 8002d0c:	2300      	movs	r3, #0
 8002d0e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8002d12:	f7ff fec9 	bl	8002aa8 <__multadd>
 8002d16:	4607      	mov	r7, r0
 8002d18:	10ad      	asrs	r5, r5, #2
 8002d1a:	d035      	beq.n	8002d88 <__pow5mult+0x90>
 8002d1c:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8002d1e:	b93c      	cbnz	r4, 8002d30 <__pow5mult+0x38>
 8002d20:	2010      	movs	r0, #16
 8002d22:	f7ff fe63 	bl	80029ec <malloc>
 8002d26:	6270      	str	r0, [r6, #36]	; 0x24
 8002d28:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8002d2c:	6004      	str	r4, [r0, #0]
 8002d2e:	60c4      	str	r4, [r0, #12]
 8002d30:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8002d34:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8002d38:	b94c      	cbnz	r4, 8002d4e <__pow5mult+0x56>
 8002d3a:	f240 2171 	movw	r1, #625	; 0x271
 8002d3e:	4630      	mov	r0, r6
 8002d40:	f7ff ff3b 	bl	8002bba <__i2b>
 8002d44:	2300      	movs	r3, #0
 8002d46:	f8c8 0008 	str.w	r0, [r8, #8]
 8002d4a:	4604      	mov	r4, r0
 8002d4c:	6003      	str	r3, [r0, #0]
 8002d4e:	f04f 0800 	mov.w	r8, #0
 8002d52:	07eb      	lsls	r3, r5, #31
 8002d54:	d50a      	bpl.n	8002d6c <__pow5mult+0x74>
 8002d56:	4639      	mov	r1, r7
 8002d58:	4622      	mov	r2, r4
 8002d5a:	4630      	mov	r0, r6
 8002d5c:	f7ff ff36 	bl	8002bcc <__multiply>
 8002d60:	4639      	mov	r1, r7
 8002d62:	4681      	mov	r9, r0
 8002d64:	4630      	mov	r0, r6
 8002d66:	f7ff fe88 	bl	8002a7a <_Bfree>
 8002d6a:	464f      	mov	r7, r9
 8002d6c:	106d      	asrs	r5, r5, #1
 8002d6e:	d00b      	beq.n	8002d88 <__pow5mult+0x90>
 8002d70:	6820      	ldr	r0, [r4, #0]
 8002d72:	b938      	cbnz	r0, 8002d84 <__pow5mult+0x8c>
 8002d74:	4622      	mov	r2, r4
 8002d76:	4621      	mov	r1, r4
 8002d78:	4630      	mov	r0, r6
 8002d7a:	f7ff ff27 	bl	8002bcc <__multiply>
 8002d7e:	6020      	str	r0, [r4, #0]
 8002d80:	f8c0 8000 	str.w	r8, [r0]
 8002d84:	4604      	mov	r4, r0
 8002d86:	e7e4      	b.n	8002d52 <__pow5mult+0x5a>
 8002d88:	4638      	mov	r0, r7
 8002d8a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002d8e:	bf00      	nop
 8002d90:	08003620 	.word	0x08003620

08002d94 <__lshift>:
 8002d94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002d98:	460c      	mov	r4, r1
 8002d9a:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8002d9e:	6923      	ldr	r3, [r4, #16]
 8002da0:	6849      	ldr	r1, [r1, #4]
 8002da2:	eb0a 0903 	add.w	r9, sl, r3
 8002da6:	68a3      	ldr	r3, [r4, #8]
 8002da8:	4607      	mov	r7, r0
 8002daa:	4616      	mov	r6, r2
 8002dac:	f109 0501 	add.w	r5, r9, #1
 8002db0:	42ab      	cmp	r3, r5
 8002db2:	db32      	blt.n	8002e1a <__lshift+0x86>
 8002db4:	4638      	mov	r0, r7
 8002db6:	f7ff fe2c 	bl	8002a12 <_Balloc>
 8002dba:	2300      	movs	r3, #0
 8002dbc:	4680      	mov	r8, r0
 8002dbe:	f100 0114 	add.w	r1, r0, #20
 8002dc2:	461a      	mov	r2, r3
 8002dc4:	4553      	cmp	r3, sl
 8002dc6:	db2b      	blt.n	8002e20 <__lshift+0x8c>
 8002dc8:	6920      	ldr	r0, [r4, #16]
 8002dca:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8002dce:	f104 0314 	add.w	r3, r4, #20
 8002dd2:	f016 021f 	ands.w	r2, r6, #31
 8002dd6:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8002dda:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8002dde:	d025      	beq.n	8002e2c <__lshift+0x98>
 8002de0:	f1c2 0e20 	rsb	lr, r2, #32
 8002de4:	2000      	movs	r0, #0
 8002de6:	681e      	ldr	r6, [r3, #0]
 8002de8:	468a      	mov	sl, r1
 8002dea:	4096      	lsls	r6, r2
 8002dec:	4330      	orrs	r0, r6
 8002dee:	f84a 0b04 	str.w	r0, [sl], #4
 8002df2:	f853 0b04 	ldr.w	r0, [r3], #4
 8002df6:	459c      	cmp	ip, r3
 8002df8:	fa20 f00e 	lsr.w	r0, r0, lr
 8002dfc:	d814      	bhi.n	8002e28 <__lshift+0x94>
 8002dfe:	6048      	str	r0, [r1, #4]
 8002e00:	b108      	cbz	r0, 8002e06 <__lshift+0x72>
 8002e02:	f109 0502 	add.w	r5, r9, #2
 8002e06:	3d01      	subs	r5, #1
 8002e08:	4638      	mov	r0, r7
 8002e0a:	f8c8 5010 	str.w	r5, [r8, #16]
 8002e0e:	4621      	mov	r1, r4
 8002e10:	f7ff fe33 	bl	8002a7a <_Bfree>
 8002e14:	4640      	mov	r0, r8
 8002e16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002e1a:	3101      	adds	r1, #1
 8002e1c:	005b      	lsls	r3, r3, #1
 8002e1e:	e7c7      	b.n	8002db0 <__lshift+0x1c>
 8002e20:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002e24:	3301      	adds	r3, #1
 8002e26:	e7cd      	b.n	8002dc4 <__lshift+0x30>
 8002e28:	4651      	mov	r1, sl
 8002e2a:	e7dc      	b.n	8002de6 <__lshift+0x52>
 8002e2c:	3904      	subs	r1, #4
 8002e2e:	f853 2b04 	ldr.w	r2, [r3], #4
 8002e32:	f841 2f04 	str.w	r2, [r1, #4]!
 8002e36:	459c      	cmp	ip, r3
 8002e38:	d8f9      	bhi.n	8002e2e <__lshift+0x9a>
 8002e3a:	e7e4      	b.n	8002e06 <__lshift+0x72>

08002e3c <__mcmp>:
 8002e3c:	6903      	ldr	r3, [r0, #16]
 8002e3e:	690a      	ldr	r2, [r1, #16]
 8002e40:	1a9b      	subs	r3, r3, r2
 8002e42:	b530      	push	{r4, r5, lr}
 8002e44:	d10c      	bne.n	8002e60 <__mcmp+0x24>
 8002e46:	0092      	lsls	r2, r2, #2
 8002e48:	3014      	adds	r0, #20
 8002e4a:	3114      	adds	r1, #20
 8002e4c:	1884      	adds	r4, r0, r2
 8002e4e:	4411      	add	r1, r2
 8002e50:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8002e54:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8002e58:	4295      	cmp	r5, r2
 8002e5a:	d003      	beq.n	8002e64 <__mcmp+0x28>
 8002e5c:	d305      	bcc.n	8002e6a <__mcmp+0x2e>
 8002e5e:	2301      	movs	r3, #1
 8002e60:	4618      	mov	r0, r3
 8002e62:	bd30      	pop	{r4, r5, pc}
 8002e64:	42a0      	cmp	r0, r4
 8002e66:	d3f3      	bcc.n	8002e50 <__mcmp+0x14>
 8002e68:	e7fa      	b.n	8002e60 <__mcmp+0x24>
 8002e6a:	f04f 33ff 	mov.w	r3, #4294967295
 8002e6e:	e7f7      	b.n	8002e60 <__mcmp+0x24>

08002e70 <__mdiff>:
 8002e70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002e74:	460d      	mov	r5, r1
 8002e76:	4607      	mov	r7, r0
 8002e78:	4611      	mov	r1, r2
 8002e7a:	4628      	mov	r0, r5
 8002e7c:	4614      	mov	r4, r2
 8002e7e:	f7ff ffdd 	bl	8002e3c <__mcmp>
 8002e82:	1e06      	subs	r6, r0, #0
 8002e84:	d108      	bne.n	8002e98 <__mdiff+0x28>
 8002e86:	4631      	mov	r1, r6
 8002e88:	4638      	mov	r0, r7
 8002e8a:	f7ff fdc2 	bl	8002a12 <_Balloc>
 8002e8e:	2301      	movs	r3, #1
 8002e90:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8002e94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002e98:	bfa4      	itt	ge
 8002e9a:	4623      	movge	r3, r4
 8002e9c:	462c      	movge	r4, r5
 8002e9e:	4638      	mov	r0, r7
 8002ea0:	6861      	ldr	r1, [r4, #4]
 8002ea2:	bfa6      	itte	ge
 8002ea4:	461d      	movge	r5, r3
 8002ea6:	2600      	movge	r6, #0
 8002ea8:	2601      	movlt	r6, #1
 8002eaa:	f7ff fdb2 	bl	8002a12 <_Balloc>
 8002eae:	692b      	ldr	r3, [r5, #16]
 8002eb0:	60c6      	str	r6, [r0, #12]
 8002eb2:	6926      	ldr	r6, [r4, #16]
 8002eb4:	f105 0914 	add.w	r9, r5, #20
 8002eb8:	f104 0214 	add.w	r2, r4, #20
 8002ebc:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8002ec0:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8002ec4:	f100 0514 	add.w	r5, r0, #20
 8002ec8:	f04f 0e00 	mov.w	lr, #0
 8002ecc:	f852 ab04 	ldr.w	sl, [r2], #4
 8002ed0:	f859 4b04 	ldr.w	r4, [r9], #4
 8002ed4:	fa1e f18a 	uxtah	r1, lr, sl
 8002ed8:	b2a3      	uxth	r3, r4
 8002eda:	1ac9      	subs	r1, r1, r3
 8002edc:	0c23      	lsrs	r3, r4, #16
 8002ede:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 8002ee2:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8002ee6:	b289      	uxth	r1, r1
 8002ee8:	ea4f 4e23 	mov.w	lr, r3, asr #16
 8002eec:	45c8      	cmp	r8, r9
 8002eee:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8002ef2:	4694      	mov	ip, r2
 8002ef4:	f845 3b04 	str.w	r3, [r5], #4
 8002ef8:	d8e8      	bhi.n	8002ecc <__mdiff+0x5c>
 8002efa:	45bc      	cmp	ip, r7
 8002efc:	d304      	bcc.n	8002f08 <__mdiff+0x98>
 8002efe:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8002f02:	b183      	cbz	r3, 8002f26 <__mdiff+0xb6>
 8002f04:	6106      	str	r6, [r0, #16]
 8002f06:	e7c5      	b.n	8002e94 <__mdiff+0x24>
 8002f08:	f85c 1b04 	ldr.w	r1, [ip], #4
 8002f0c:	fa1e f381 	uxtah	r3, lr, r1
 8002f10:	141a      	asrs	r2, r3, #16
 8002f12:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8002f16:	b29b      	uxth	r3, r3
 8002f18:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002f1c:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8002f20:	f845 3b04 	str.w	r3, [r5], #4
 8002f24:	e7e9      	b.n	8002efa <__mdiff+0x8a>
 8002f26:	3e01      	subs	r6, #1
 8002f28:	e7e9      	b.n	8002efe <__mdiff+0x8e>

08002f2a <__d2b>:
 8002f2a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8002f2e:	460e      	mov	r6, r1
 8002f30:	2101      	movs	r1, #1
 8002f32:	ec59 8b10 	vmov	r8, r9, d0
 8002f36:	4615      	mov	r5, r2
 8002f38:	f7ff fd6b 	bl	8002a12 <_Balloc>
 8002f3c:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8002f40:	4607      	mov	r7, r0
 8002f42:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8002f46:	bb34      	cbnz	r4, 8002f96 <__d2b+0x6c>
 8002f48:	9301      	str	r3, [sp, #4]
 8002f4a:	f1b8 0300 	subs.w	r3, r8, #0
 8002f4e:	d027      	beq.n	8002fa0 <__d2b+0x76>
 8002f50:	a802      	add	r0, sp, #8
 8002f52:	f840 3d08 	str.w	r3, [r0, #-8]!
 8002f56:	f7ff fe01 	bl	8002b5c <__lo0bits>
 8002f5a:	9900      	ldr	r1, [sp, #0]
 8002f5c:	b1f0      	cbz	r0, 8002f9c <__d2b+0x72>
 8002f5e:	9a01      	ldr	r2, [sp, #4]
 8002f60:	f1c0 0320 	rsb	r3, r0, #32
 8002f64:	fa02 f303 	lsl.w	r3, r2, r3
 8002f68:	430b      	orrs	r3, r1
 8002f6a:	40c2      	lsrs	r2, r0
 8002f6c:	617b      	str	r3, [r7, #20]
 8002f6e:	9201      	str	r2, [sp, #4]
 8002f70:	9b01      	ldr	r3, [sp, #4]
 8002f72:	61bb      	str	r3, [r7, #24]
 8002f74:	2b00      	cmp	r3, #0
 8002f76:	bf14      	ite	ne
 8002f78:	2102      	movne	r1, #2
 8002f7a:	2101      	moveq	r1, #1
 8002f7c:	6139      	str	r1, [r7, #16]
 8002f7e:	b1c4      	cbz	r4, 8002fb2 <__d2b+0x88>
 8002f80:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8002f84:	4404      	add	r4, r0
 8002f86:	6034      	str	r4, [r6, #0]
 8002f88:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8002f8c:	6028      	str	r0, [r5, #0]
 8002f8e:	4638      	mov	r0, r7
 8002f90:	b003      	add	sp, #12
 8002f92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002f96:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8002f9a:	e7d5      	b.n	8002f48 <__d2b+0x1e>
 8002f9c:	6179      	str	r1, [r7, #20]
 8002f9e:	e7e7      	b.n	8002f70 <__d2b+0x46>
 8002fa0:	a801      	add	r0, sp, #4
 8002fa2:	f7ff fddb 	bl	8002b5c <__lo0bits>
 8002fa6:	9b01      	ldr	r3, [sp, #4]
 8002fa8:	617b      	str	r3, [r7, #20]
 8002faa:	2101      	movs	r1, #1
 8002fac:	6139      	str	r1, [r7, #16]
 8002fae:	3020      	adds	r0, #32
 8002fb0:	e7e5      	b.n	8002f7e <__d2b+0x54>
 8002fb2:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8002fb6:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8002fba:	6030      	str	r0, [r6, #0]
 8002fbc:	6918      	ldr	r0, [r3, #16]
 8002fbe:	f7ff fdae 	bl	8002b1e <__hi0bits>
 8002fc2:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8002fc6:	e7e1      	b.n	8002f8c <__d2b+0x62>

08002fc8 <_calloc_r>:
 8002fc8:	b538      	push	{r3, r4, r5, lr}
 8002fca:	fb02 f401 	mul.w	r4, r2, r1
 8002fce:	4621      	mov	r1, r4
 8002fd0:	f000 f856 	bl	8003080 <_malloc_r>
 8002fd4:	4605      	mov	r5, r0
 8002fd6:	b118      	cbz	r0, 8002fe0 <_calloc_r+0x18>
 8002fd8:	4622      	mov	r2, r4
 8002fda:	2100      	movs	r1, #0
 8002fdc:	f7fe fa2e 	bl	800143c <memset>
 8002fe0:	4628      	mov	r0, r5
 8002fe2:	bd38      	pop	{r3, r4, r5, pc}

08002fe4 <_free_r>:
 8002fe4:	b538      	push	{r3, r4, r5, lr}
 8002fe6:	4605      	mov	r5, r0
 8002fe8:	2900      	cmp	r1, #0
 8002fea:	d045      	beq.n	8003078 <_free_r+0x94>
 8002fec:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002ff0:	1f0c      	subs	r4, r1, #4
 8002ff2:	2b00      	cmp	r3, #0
 8002ff4:	bfb8      	it	lt
 8002ff6:	18e4      	addlt	r4, r4, r3
 8002ff8:	f000 fa29 	bl	800344e <__malloc_lock>
 8002ffc:	4a1f      	ldr	r2, [pc, #124]	; (800307c <_free_r+0x98>)
 8002ffe:	6813      	ldr	r3, [r2, #0]
 8003000:	4610      	mov	r0, r2
 8003002:	b933      	cbnz	r3, 8003012 <_free_r+0x2e>
 8003004:	6063      	str	r3, [r4, #4]
 8003006:	6014      	str	r4, [r2, #0]
 8003008:	4628      	mov	r0, r5
 800300a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800300e:	f000 ba1f 	b.w	8003450 <__malloc_unlock>
 8003012:	42a3      	cmp	r3, r4
 8003014:	d90c      	bls.n	8003030 <_free_r+0x4c>
 8003016:	6821      	ldr	r1, [r4, #0]
 8003018:	1862      	adds	r2, r4, r1
 800301a:	4293      	cmp	r3, r2
 800301c:	bf04      	itt	eq
 800301e:	681a      	ldreq	r2, [r3, #0]
 8003020:	685b      	ldreq	r3, [r3, #4]
 8003022:	6063      	str	r3, [r4, #4]
 8003024:	bf04      	itt	eq
 8003026:	1852      	addeq	r2, r2, r1
 8003028:	6022      	streq	r2, [r4, #0]
 800302a:	6004      	str	r4, [r0, #0]
 800302c:	e7ec      	b.n	8003008 <_free_r+0x24>
 800302e:	4613      	mov	r3, r2
 8003030:	685a      	ldr	r2, [r3, #4]
 8003032:	b10a      	cbz	r2, 8003038 <_free_r+0x54>
 8003034:	42a2      	cmp	r2, r4
 8003036:	d9fa      	bls.n	800302e <_free_r+0x4a>
 8003038:	6819      	ldr	r1, [r3, #0]
 800303a:	1858      	adds	r0, r3, r1
 800303c:	42a0      	cmp	r0, r4
 800303e:	d10b      	bne.n	8003058 <_free_r+0x74>
 8003040:	6820      	ldr	r0, [r4, #0]
 8003042:	4401      	add	r1, r0
 8003044:	1858      	adds	r0, r3, r1
 8003046:	4282      	cmp	r2, r0
 8003048:	6019      	str	r1, [r3, #0]
 800304a:	d1dd      	bne.n	8003008 <_free_r+0x24>
 800304c:	6810      	ldr	r0, [r2, #0]
 800304e:	6852      	ldr	r2, [r2, #4]
 8003050:	605a      	str	r2, [r3, #4]
 8003052:	4401      	add	r1, r0
 8003054:	6019      	str	r1, [r3, #0]
 8003056:	e7d7      	b.n	8003008 <_free_r+0x24>
 8003058:	d902      	bls.n	8003060 <_free_r+0x7c>
 800305a:	230c      	movs	r3, #12
 800305c:	602b      	str	r3, [r5, #0]
 800305e:	e7d3      	b.n	8003008 <_free_r+0x24>
 8003060:	6820      	ldr	r0, [r4, #0]
 8003062:	1821      	adds	r1, r4, r0
 8003064:	428a      	cmp	r2, r1
 8003066:	bf04      	itt	eq
 8003068:	6811      	ldreq	r1, [r2, #0]
 800306a:	6852      	ldreq	r2, [r2, #4]
 800306c:	6062      	str	r2, [r4, #4]
 800306e:	bf04      	itt	eq
 8003070:	1809      	addeq	r1, r1, r0
 8003072:	6021      	streq	r1, [r4, #0]
 8003074:	605c      	str	r4, [r3, #4]
 8003076:	e7c7      	b.n	8003008 <_free_r+0x24>
 8003078:	bd38      	pop	{r3, r4, r5, pc}
 800307a:	bf00      	nop
 800307c:	200001f4 	.word	0x200001f4

08003080 <_malloc_r>:
 8003080:	b570      	push	{r4, r5, r6, lr}
 8003082:	1ccd      	adds	r5, r1, #3
 8003084:	f025 0503 	bic.w	r5, r5, #3
 8003088:	3508      	adds	r5, #8
 800308a:	2d0c      	cmp	r5, #12
 800308c:	bf38      	it	cc
 800308e:	250c      	movcc	r5, #12
 8003090:	2d00      	cmp	r5, #0
 8003092:	4606      	mov	r6, r0
 8003094:	db01      	blt.n	800309a <_malloc_r+0x1a>
 8003096:	42a9      	cmp	r1, r5
 8003098:	d903      	bls.n	80030a2 <_malloc_r+0x22>
 800309a:	230c      	movs	r3, #12
 800309c:	6033      	str	r3, [r6, #0]
 800309e:	2000      	movs	r0, #0
 80030a0:	bd70      	pop	{r4, r5, r6, pc}
 80030a2:	f000 f9d4 	bl	800344e <__malloc_lock>
 80030a6:	4a21      	ldr	r2, [pc, #132]	; (800312c <_malloc_r+0xac>)
 80030a8:	6814      	ldr	r4, [r2, #0]
 80030aa:	4621      	mov	r1, r4
 80030ac:	b991      	cbnz	r1, 80030d4 <_malloc_r+0x54>
 80030ae:	4c20      	ldr	r4, [pc, #128]	; (8003130 <_malloc_r+0xb0>)
 80030b0:	6823      	ldr	r3, [r4, #0]
 80030b2:	b91b      	cbnz	r3, 80030bc <_malloc_r+0x3c>
 80030b4:	4630      	mov	r0, r6
 80030b6:	f000 f98f 	bl	80033d8 <_sbrk_r>
 80030ba:	6020      	str	r0, [r4, #0]
 80030bc:	4629      	mov	r1, r5
 80030be:	4630      	mov	r0, r6
 80030c0:	f000 f98a 	bl	80033d8 <_sbrk_r>
 80030c4:	1c43      	adds	r3, r0, #1
 80030c6:	d124      	bne.n	8003112 <_malloc_r+0x92>
 80030c8:	230c      	movs	r3, #12
 80030ca:	6033      	str	r3, [r6, #0]
 80030cc:	4630      	mov	r0, r6
 80030ce:	f000 f9bf 	bl	8003450 <__malloc_unlock>
 80030d2:	e7e4      	b.n	800309e <_malloc_r+0x1e>
 80030d4:	680b      	ldr	r3, [r1, #0]
 80030d6:	1b5b      	subs	r3, r3, r5
 80030d8:	d418      	bmi.n	800310c <_malloc_r+0x8c>
 80030da:	2b0b      	cmp	r3, #11
 80030dc:	d90f      	bls.n	80030fe <_malloc_r+0x7e>
 80030de:	600b      	str	r3, [r1, #0]
 80030e0:	50cd      	str	r5, [r1, r3]
 80030e2:	18cc      	adds	r4, r1, r3
 80030e4:	4630      	mov	r0, r6
 80030e6:	f000 f9b3 	bl	8003450 <__malloc_unlock>
 80030ea:	f104 000b 	add.w	r0, r4, #11
 80030ee:	1d23      	adds	r3, r4, #4
 80030f0:	f020 0007 	bic.w	r0, r0, #7
 80030f4:	1ac3      	subs	r3, r0, r3
 80030f6:	d0d3      	beq.n	80030a0 <_malloc_r+0x20>
 80030f8:	425a      	negs	r2, r3
 80030fa:	50e2      	str	r2, [r4, r3]
 80030fc:	e7d0      	b.n	80030a0 <_malloc_r+0x20>
 80030fe:	428c      	cmp	r4, r1
 8003100:	684b      	ldr	r3, [r1, #4]
 8003102:	bf16      	itet	ne
 8003104:	6063      	strne	r3, [r4, #4]
 8003106:	6013      	streq	r3, [r2, #0]
 8003108:	460c      	movne	r4, r1
 800310a:	e7eb      	b.n	80030e4 <_malloc_r+0x64>
 800310c:	460c      	mov	r4, r1
 800310e:	6849      	ldr	r1, [r1, #4]
 8003110:	e7cc      	b.n	80030ac <_malloc_r+0x2c>
 8003112:	1cc4      	adds	r4, r0, #3
 8003114:	f024 0403 	bic.w	r4, r4, #3
 8003118:	42a0      	cmp	r0, r4
 800311a:	d005      	beq.n	8003128 <_malloc_r+0xa8>
 800311c:	1a21      	subs	r1, r4, r0
 800311e:	4630      	mov	r0, r6
 8003120:	f000 f95a 	bl	80033d8 <_sbrk_r>
 8003124:	3001      	adds	r0, #1
 8003126:	d0cf      	beq.n	80030c8 <_malloc_r+0x48>
 8003128:	6025      	str	r5, [r4, #0]
 800312a:	e7db      	b.n	80030e4 <_malloc_r+0x64>
 800312c:	200001f4 	.word	0x200001f4
 8003130:	200001f8 	.word	0x200001f8

08003134 <__ssputs_r>:
 8003134:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003138:	688e      	ldr	r6, [r1, #8]
 800313a:	429e      	cmp	r6, r3
 800313c:	4682      	mov	sl, r0
 800313e:	460c      	mov	r4, r1
 8003140:	4690      	mov	r8, r2
 8003142:	4699      	mov	r9, r3
 8003144:	d837      	bhi.n	80031b6 <__ssputs_r+0x82>
 8003146:	898a      	ldrh	r2, [r1, #12]
 8003148:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800314c:	d031      	beq.n	80031b2 <__ssputs_r+0x7e>
 800314e:	6825      	ldr	r5, [r4, #0]
 8003150:	6909      	ldr	r1, [r1, #16]
 8003152:	1a6f      	subs	r7, r5, r1
 8003154:	6965      	ldr	r5, [r4, #20]
 8003156:	2302      	movs	r3, #2
 8003158:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800315c:	fb95 f5f3 	sdiv	r5, r5, r3
 8003160:	f109 0301 	add.w	r3, r9, #1
 8003164:	443b      	add	r3, r7
 8003166:	429d      	cmp	r5, r3
 8003168:	bf38      	it	cc
 800316a:	461d      	movcc	r5, r3
 800316c:	0553      	lsls	r3, r2, #21
 800316e:	d530      	bpl.n	80031d2 <__ssputs_r+0x9e>
 8003170:	4629      	mov	r1, r5
 8003172:	f7ff ff85 	bl	8003080 <_malloc_r>
 8003176:	4606      	mov	r6, r0
 8003178:	b950      	cbnz	r0, 8003190 <__ssputs_r+0x5c>
 800317a:	230c      	movs	r3, #12
 800317c:	f8ca 3000 	str.w	r3, [sl]
 8003180:	89a3      	ldrh	r3, [r4, #12]
 8003182:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003186:	81a3      	strh	r3, [r4, #12]
 8003188:	f04f 30ff 	mov.w	r0, #4294967295
 800318c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003190:	463a      	mov	r2, r7
 8003192:	6921      	ldr	r1, [r4, #16]
 8003194:	f7ff fc32 	bl	80029fc <memcpy>
 8003198:	89a3      	ldrh	r3, [r4, #12]
 800319a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800319e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80031a2:	81a3      	strh	r3, [r4, #12]
 80031a4:	6126      	str	r6, [r4, #16]
 80031a6:	6165      	str	r5, [r4, #20]
 80031a8:	443e      	add	r6, r7
 80031aa:	1bed      	subs	r5, r5, r7
 80031ac:	6026      	str	r6, [r4, #0]
 80031ae:	60a5      	str	r5, [r4, #8]
 80031b0:	464e      	mov	r6, r9
 80031b2:	454e      	cmp	r6, r9
 80031b4:	d900      	bls.n	80031b8 <__ssputs_r+0x84>
 80031b6:	464e      	mov	r6, r9
 80031b8:	4632      	mov	r2, r6
 80031ba:	4641      	mov	r1, r8
 80031bc:	6820      	ldr	r0, [r4, #0]
 80031be:	f000 f92d 	bl	800341c <memmove>
 80031c2:	68a3      	ldr	r3, [r4, #8]
 80031c4:	1b9b      	subs	r3, r3, r6
 80031c6:	60a3      	str	r3, [r4, #8]
 80031c8:	6823      	ldr	r3, [r4, #0]
 80031ca:	441e      	add	r6, r3
 80031cc:	6026      	str	r6, [r4, #0]
 80031ce:	2000      	movs	r0, #0
 80031d0:	e7dc      	b.n	800318c <__ssputs_r+0x58>
 80031d2:	462a      	mov	r2, r5
 80031d4:	f000 f93d 	bl	8003452 <_realloc_r>
 80031d8:	4606      	mov	r6, r0
 80031da:	2800      	cmp	r0, #0
 80031dc:	d1e2      	bne.n	80031a4 <__ssputs_r+0x70>
 80031de:	6921      	ldr	r1, [r4, #16]
 80031e0:	4650      	mov	r0, sl
 80031e2:	f7ff feff 	bl	8002fe4 <_free_r>
 80031e6:	e7c8      	b.n	800317a <__ssputs_r+0x46>

080031e8 <_svfiprintf_r>:
 80031e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80031ec:	461d      	mov	r5, r3
 80031ee:	898b      	ldrh	r3, [r1, #12]
 80031f0:	061f      	lsls	r7, r3, #24
 80031f2:	b09d      	sub	sp, #116	; 0x74
 80031f4:	4680      	mov	r8, r0
 80031f6:	460c      	mov	r4, r1
 80031f8:	4616      	mov	r6, r2
 80031fa:	d50f      	bpl.n	800321c <_svfiprintf_r+0x34>
 80031fc:	690b      	ldr	r3, [r1, #16]
 80031fe:	b96b      	cbnz	r3, 800321c <_svfiprintf_r+0x34>
 8003200:	2140      	movs	r1, #64	; 0x40
 8003202:	f7ff ff3d 	bl	8003080 <_malloc_r>
 8003206:	6020      	str	r0, [r4, #0]
 8003208:	6120      	str	r0, [r4, #16]
 800320a:	b928      	cbnz	r0, 8003218 <_svfiprintf_r+0x30>
 800320c:	230c      	movs	r3, #12
 800320e:	f8c8 3000 	str.w	r3, [r8]
 8003212:	f04f 30ff 	mov.w	r0, #4294967295
 8003216:	e0c8      	b.n	80033aa <_svfiprintf_r+0x1c2>
 8003218:	2340      	movs	r3, #64	; 0x40
 800321a:	6163      	str	r3, [r4, #20]
 800321c:	2300      	movs	r3, #0
 800321e:	9309      	str	r3, [sp, #36]	; 0x24
 8003220:	2320      	movs	r3, #32
 8003222:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003226:	2330      	movs	r3, #48	; 0x30
 8003228:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800322c:	9503      	str	r5, [sp, #12]
 800322e:	f04f 0b01 	mov.w	fp, #1
 8003232:	4637      	mov	r7, r6
 8003234:	463d      	mov	r5, r7
 8003236:	f815 3b01 	ldrb.w	r3, [r5], #1
 800323a:	b10b      	cbz	r3, 8003240 <_svfiprintf_r+0x58>
 800323c:	2b25      	cmp	r3, #37	; 0x25
 800323e:	d13e      	bne.n	80032be <_svfiprintf_r+0xd6>
 8003240:	ebb7 0a06 	subs.w	sl, r7, r6
 8003244:	d00b      	beq.n	800325e <_svfiprintf_r+0x76>
 8003246:	4653      	mov	r3, sl
 8003248:	4632      	mov	r2, r6
 800324a:	4621      	mov	r1, r4
 800324c:	4640      	mov	r0, r8
 800324e:	f7ff ff71 	bl	8003134 <__ssputs_r>
 8003252:	3001      	adds	r0, #1
 8003254:	f000 80a4 	beq.w	80033a0 <_svfiprintf_r+0x1b8>
 8003258:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800325a:	4453      	add	r3, sl
 800325c:	9309      	str	r3, [sp, #36]	; 0x24
 800325e:	783b      	ldrb	r3, [r7, #0]
 8003260:	2b00      	cmp	r3, #0
 8003262:	f000 809d 	beq.w	80033a0 <_svfiprintf_r+0x1b8>
 8003266:	2300      	movs	r3, #0
 8003268:	f04f 32ff 	mov.w	r2, #4294967295
 800326c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003270:	9304      	str	r3, [sp, #16]
 8003272:	9307      	str	r3, [sp, #28]
 8003274:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003278:	931a      	str	r3, [sp, #104]	; 0x68
 800327a:	462f      	mov	r7, r5
 800327c:	2205      	movs	r2, #5
 800327e:	f817 1b01 	ldrb.w	r1, [r7], #1
 8003282:	4850      	ldr	r0, [pc, #320]	; (80033c4 <_svfiprintf_r+0x1dc>)
 8003284:	f7fc ffb4 	bl	80001f0 <memchr>
 8003288:	9b04      	ldr	r3, [sp, #16]
 800328a:	b9d0      	cbnz	r0, 80032c2 <_svfiprintf_r+0xda>
 800328c:	06d9      	lsls	r1, r3, #27
 800328e:	bf44      	itt	mi
 8003290:	2220      	movmi	r2, #32
 8003292:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8003296:	071a      	lsls	r2, r3, #28
 8003298:	bf44      	itt	mi
 800329a:	222b      	movmi	r2, #43	; 0x2b
 800329c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80032a0:	782a      	ldrb	r2, [r5, #0]
 80032a2:	2a2a      	cmp	r2, #42	; 0x2a
 80032a4:	d015      	beq.n	80032d2 <_svfiprintf_r+0xea>
 80032a6:	9a07      	ldr	r2, [sp, #28]
 80032a8:	462f      	mov	r7, r5
 80032aa:	2000      	movs	r0, #0
 80032ac:	250a      	movs	r5, #10
 80032ae:	4639      	mov	r1, r7
 80032b0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80032b4:	3b30      	subs	r3, #48	; 0x30
 80032b6:	2b09      	cmp	r3, #9
 80032b8:	d94d      	bls.n	8003356 <_svfiprintf_r+0x16e>
 80032ba:	b1b8      	cbz	r0, 80032ec <_svfiprintf_r+0x104>
 80032bc:	e00f      	b.n	80032de <_svfiprintf_r+0xf6>
 80032be:	462f      	mov	r7, r5
 80032c0:	e7b8      	b.n	8003234 <_svfiprintf_r+0x4c>
 80032c2:	4a40      	ldr	r2, [pc, #256]	; (80033c4 <_svfiprintf_r+0x1dc>)
 80032c4:	1a80      	subs	r0, r0, r2
 80032c6:	fa0b f000 	lsl.w	r0, fp, r0
 80032ca:	4318      	orrs	r0, r3
 80032cc:	9004      	str	r0, [sp, #16]
 80032ce:	463d      	mov	r5, r7
 80032d0:	e7d3      	b.n	800327a <_svfiprintf_r+0x92>
 80032d2:	9a03      	ldr	r2, [sp, #12]
 80032d4:	1d11      	adds	r1, r2, #4
 80032d6:	6812      	ldr	r2, [r2, #0]
 80032d8:	9103      	str	r1, [sp, #12]
 80032da:	2a00      	cmp	r2, #0
 80032dc:	db01      	blt.n	80032e2 <_svfiprintf_r+0xfa>
 80032de:	9207      	str	r2, [sp, #28]
 80032e0:	e004      	b.n	80032ec <_svfiprintf_r+0x104>
 80032e2:	4252      	negs	r2, r2
 80032e4:	f043 0302 	orr.w	r3, r3, #2
 80032e8:	9207      	str	r2, [sp, #28]
 80032ea:	9304      	str	r3, [sp, #16]
 80032ec:	783b      	ldrb	r3, [r7, #0]
 80032ee:	2b2e      	cmp	r3, #46	; 0x2e
 80032f0:	d10c      	bne.n	800330c <_svfiprintf_r+0x124>
 80032f2:	787b      	ldrb	r3, [r7, #1]
 80032f4:	2b2a      	cmp	r3, #42	; 0x2a
 80032f6:	d133      	bne.n	8003360 <_svfiprintf_r+0x178>
 80032f8:	9b03      	ldr	r3, [sp, #12]
 80032fa:	1d1a      	adds	r2, r3, #4
 80032fc:	681b      	ldr	r3, [r3, #0]
 80032fe:	9203      	str	r2, [sp, #12]
 8003300:	2b00      	cmp	r3, #0
 8003302:	bfb8      	it	lt
 8003304:	f04f 33ff 	movlt.w	r3, #4294967295
 8003308:	3702      	adds	r7, #2
 800330a:	9305      	str	r3, [sp, #20]
 800330c:	4d2e      	ldr	r5, [pc, #184]	; (80033c8 <_svfiprintf_r+0x1e0>)
 800330e:	7839      	ldrb	r1, [r7, #0]
 8003310:	2203      	movs	r2, #3
 8003312:	4628      	mov	r0, r5
 8003314:	f7fc ff6c 	bl	80001f0 <memchr>
 8003318:	b138      	cbz	r0, 800332a <_svfiprintf_r+0x142>
 800331a:	2340      	movs	r3, #64	; 0x40
 800331c:	1b40      	subs	r0, r0, r5
 800331e:	fa03 f000 	lsl.w	r0, r3, r0
 8003322:	9b04      	ldr	r3, [sp, #16]
 8003324:	4303      	orrs	r3, r0
 8003326:	3701      	adds	r7, #1
 8003328:	9304      	str	r3, [sp, #16]
 800332a:	7839      	ldrb	r1, [r7, #0]
 800332c:	4827      	ldr	r0, [pc, #156]	; (80033cc <_svfiprintf_r+0x1e4>)
 800332e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003332:	2206      	movs	r2, #6
 8003334:	1c7e      	adds	r6, r7, #1
 8003336:	f7fc ff5b 	bl	80001f0 <memchr>
 800333a:	2800      	cmp	r0, #0
 800333c:	d038      	beq.n	80033b0 <_svfiprintf_r+0x1c8>
 800333e:	4b24      	ldr	r3, [pc, #144]	; (80033d0 <_svfiprintf_r+0x1e8>)
 8003340:	bb13      	cbnz	r3, 8003388 <_svfiprintf_r+0x1a0>
 8003342:	9b03      	ldr	r3, [sp, #12]
 8003344:	3307      	adds	r3, #7
 8003346:	f023 0307 	bic.w	r3, r3, #7
 800334a:	3308      	adds	r3, #8
 800334c:	9303      	str	r3, [sp, #12]
 800334e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003350:	444b      	add	r3, r9
 8003352:	9309      	str	r3, [sp, #36]	; 0x24
 8003354:	e76d      	b.n	8003232 <_svfiprintf_r+0x4a>
 8003356:	fb05 3202 	mla	r2, r5, r2, r3
 800335a:	2001      	movs	r0, #1
 800335c:	460f      	mov	r7, r1
 800335e:	e7a6      	b.n	80032ae <_svfiprintf_r+0xc6>
 8003360:	2300      	movs	r3, #0
 8003362:	3701      	adds	r7, #1
 8003364:	9305      	str	r3, [sp, #20]
 8003366:	4619      	mov	r1, r3
 8003368:	250a      	movs	r5, #10
 800336a:	4638      	mov	r0, r7
 800336c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003370:	3a30      	subs	r2, #48	; 0x30
 8003372:	2a09      	cmp	r2, #9
 8003374:	d903      	bls.n	800337e <_svfiprintf_r+0x196>
 8003376:	2b00      	cmp	r3, #0
 8003378:	d0c8      	beq.n	800330c <_svfiprintf_r+0x124>
 800337a:	9105      	str	r1, [sp, #20]
 800337c:	e7c6      	b.n	800330c <_svfiprintf_r+0x124>
 800337e:	fb05 2101 	mla	r1, r5, r1, r2
 8003382:	2301      	movs	r3, #1
 8003384:	4607      	mov	r7, r0
 8003386:	e7f0      	b.n	800336a <_svfiprintf_r+0x182>
 8003388:	ab03      	add	r3, sp, #12
 800338a:	9300      	str	r3, [sp, #0]
 800338c:	4622      	mov	r2, r4
 800338e:	4b11      	ldr	r3, [pc, #68]	; (80033d4 <_svfiprintf_r+0x1ec>)
 8003390:	a904      	add	r1, sp, #16
 8003392:	4640      	mov	r0, r8
 8003394:	f7fe f8ee 	bl	8001574 <_printf_float>
 8003398:	f1b0 3fff 	cmp.w	r0, #4294967295
 800339c:	4681      	mov	r9, r0
 800339e:	d1d6      	bne.n	800334e <_svfiprintf_r+0x166>
 80033a0:	89a3      	ldrh	r3, [r4, #12]
 80033a2:	065b      	lsls	r3, r3, #25
 80033a4:	f53f af35 	bmi.w	8003212 <_svfiprintf_r+0x2a>
 80033a8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80033aa:	b01d      	add	sp, #116	; 0x74
 80033ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80033b0:	ab03      	add	r3, sp, #12
 80033b2:	9300      	str	r3, [sp, #0]
 80033b4:	4622      	mov	r2, r4
 80033b6:	4b07      	ldr	r3, [pc, #28]	; (80033d4 <_svfiprintf_r+0x1ec>)
 80033b8:	a904      	add	r1, sp, #16
 80033ba:	4640      	mov	r0, r8
 80033bc:	f7fe fb90 	bl	8001ae0 <_printf_i>
 80033c0:	e7ea      	b.n	8003398 <_svfiprintf_r+0x1b0>
 80033c2:	bf00      	nop
 80033c4:	0800362c 	.word	0x0800362c
 80033c8:	08003632 	.word	0x08003632
 80033cc:	08003636 	.word	0x08003636
 80033d0:	08001575 	.word	0x08001575
 80033d4:	08003135 	.word	0x08003135

080033d8 <_sbrk_r>:
 80033d8:	b538      	push	{r3, r4, r5, lr}
 80033da:	4c06      	ldr	r4, [pc, #24]	; (80033f4 <_sbrk_r+0x1c>)
 80033dc:	2300      	movs	r3, #0
 80033de:	4605      	mov	r5, r0
 80033e0:	4608      	mov	r0, r1
 80033e2:	6023      	str	r3, [r4, #0]
 80033e4:	f7fd ff8a 	bl	80012fc <_sbrk>
 80033e8:	1c43      	adds	r3, r0, #1
 80033ea:	d102      	bne.n	80033f2 <_sbrk_r+0x1a>
 80033ec:	6823      	ldr	r3, [r4, #0]
 80033ee:	b103      	cbz	r3, 80033f2 <_sbrk_r+0x1a>
 80033f0:	602b      	str	r3, [r5, #0]
 80033f2:	bd38      	pop	{r3, r4, r5, pc}
 80033f4:	200011a4 	.word	0x200011a4

080033f8 <__ascii_mbtowc>:
 80033f8:	b082      	sub	sp, #8
 80033fa:	b901      	cbnz	r1, 80033fe <__ascii_mbtowc+0x6>
 80033fc:	a901      	add	r1, sp, #4
 80033fe:	b142      	cbz	r2, 8003412 <__ascii_mbtowc+0x1a>
 8003400:	b14b      	cbz	r3, 8003416 <__ascii_mbtowc+0x1e>
 8003402:	7813      	ldrb	r3, [r2, #0]
 8003404:	600b      	str	r3, [r1, #0]
 8003406:	7812      	ldrb	r2, [r2, #0]
 8003408:	1c10      	adds	r0, r2, #0
 800340a:	bf18      	it	ne
 800340c:	2001      	movne	r0, #1
 800340e:	b002      	add	sp, #8
 8003410:	4770      	bx	lr
 8003412:	4610      	mov	r0, r2
 8003414:	e7fb      	b.n	800340e <__ascii_mbtowc+0x16>
 8003416:	f06f 0001 	mvn.w	r0, #1
 800341a:	e7f8      	b.n	800340e <__ascii_mbtowc+0x16>

0800341c <memmove>:
 800341c:	4288      	cmp	r0, r1
 800341e:	b510      	push	{r4, lr}
 8003420:	eb01 0302 	add.w	r3, r1, r2
 8003424:	d807      	bhi.n	8003436 <memmove+0x1a>
 8003426:	1e42      	subs	r2, r0, #1
 8003428:	4299      	cmp	r1, r3
 800342a:	d00a      	beq.n	8003442 <memmove+0x26>
 800342c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003430:	f802 4f01 	strb.w	r4, [r2, #1]!
 8003434:	e7f8      	b.n	8003428 <memmove+0xc>
 8003436:	4283      	cmp	r3, r0
 8003438:	d9f5      	bls.n	8003426 <memmove+0xa>
 800343a:	1881      	adds	r1, r0, r2
 800343c:	1ad2      	subs	r2, r2, r3
 800343e:	42d3      	cmn	r3, r2
 8003440:	d100      	bne.n	8003444 <memmove+0x28>
 8003442:	bd10      	pop	{r4, pc}
 8003444:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8003448:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800344c:	e7f7      	b.n	800343e <memmove+0x22>

0800344e <__malloc_lock>:
 800344e:	4770      	bx	lr

08003450 <__malloc_unlock>:
 8003450:	4770      	bx	lr

08003452 <_realloc_r>:
 8003452:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003454:	4607      	mov	r7, r0
 8003456:	4614      	mov	r4, r2
 8003458:	460e      	mov	r6, r1
 800345a:	b921      	cbnz	r1, 8003466 <_realloc_r+0x14>
 800345c:	4611      	mov	r1, r2
 800345e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003462:	f7ff be0d 	b.w	8003080 <_malloc_r>
 8003466:	b922      	cbnz	r2, 8003472 <_realloc_r+0x20>
 8003468:	f7ff fdbc 	bl	8002fe4 <_free_r>
 800346c:	4625      	mov	r5, r4
 800346e:	4628      	mov	r0, r5
 8003470:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003472:	f000 f821 	bl	80034b8 <_malloc_usable_size_r>
 8003476:	42a0      	cmp	r0, r4
 8003478:	d20f      	bcs.n	800349a <_realloc_r+0x48>
 800347a:	4621      	mov	r1, r4
 800347c:	4638      	mov	r0, r7
 800347e:	f7ff fdff 	bl	8003080 <_malloc_r>
 8003482:	4605      	mov	r5, r0
 8003484:	2800      	cmp	r0, #0
 8003486:	d0f2      	beq.n	800346e <_realloc_r+0x1c>
 8003488:	4631      	mov	r1, r6
 800348a:	4622      	mov	r2, r4
 800348c:	f7ff fab6 	bl	80029fc <memcpy>
 8003490:	4631      	mov	r1, r6
 8003492:	4638      	mov	r0, r7
 8003494:	f7ff fda6 	bl	8002fe4 <_free_r>
 8003498:	e7e9      	b.n	800346e <_realloc_r+0x1c>
 800349a:	4635      	mov	r5, r6
 800349c:	e7e7      	b.n	800346e <_realloc_r+0x1c>

0800349e <__ascii_wctomb>:
 800349e:	b149      	cbz	r1, 80034b4 <__ascii_wctomb+0x16>
 80034a0:	2aff      	cmp	r2, #255	; 0xff
 80034a2:	bf85      	ittet	hi
 80034a4:	238a      	movhi	r3, #138	; 0x8a
 80034a6:	6003      	strhi	r3, [r0, #0]
 80034a8:	700a      	strbls	r2, [r1, #0]
 80034aa:	f04f 30ff 	movhi.w	r0, #4294967295
 80034ae:	bf98      	it	ls
 80034b0:	2001      	movls	r0, #1
 80034b2:	4770      	bx	lr
 80034b4:	4608      	mov	r0, r1
 80034b6:	4770      	bx	lr

080034b8 <_malloc_usable_size_r>:
 80034b8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80034bc:	1f18      	subs	r0, r3, #4
 80034be:	2b00      	cmp	r3, #0
 80034c0:	bfbc      	itt	lt
 80034c2:	580b      	ldrlt	r3, [r1, r0]
 80034c4:	18c0      	addlt	r0, r0, r3
 80034c6:	4770      	bx	lr

080034c8 <_init>:
 80034c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80034ca:	bf00      	nop
 80034cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80034ce:	bc08      	pop	{r3}
 80034d0:	469e      	mov	lr, r3
 80034d2:	4770      	bx	lr

080034d4 <_fini>:
 80034d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80034d6:	bf00      	nop
 80034d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80034da:	bc08      	pop	{r3}
 80034dc:	469e      	mov	lr, r3
 80034de:	4770      	bx	lr
